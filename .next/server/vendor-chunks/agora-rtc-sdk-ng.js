"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/agora-rtc-sdk-ng";
exports.ids = ["vendor-chunks/agora-rtc-sdk-ng"];
exports.modules = {

/***/ "(ssr)/./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $K)\n/* harmony export */ });\n/**\n * AgoraWebSDK_N-v4.22.0-0-g8569241d-dirty Copyright AgoraInc.\n */\n\nfunction e(e,t){return t.forEach((function(t){t&&\"string\"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(i){if(\"default\"!==i&&!(i in e)){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}}))})),Object.freeze(e)}var t=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var n=function(e){try{return!!e()}catch(e){return!0}},r=!n((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")})),o=r,s=Function.prototype,a=s.call,c=o&&s.bind.bind(a,a),d=o?c:function(e){return function(){return a.apply(e,arguments)}},l=d({}.isPrototypeOf),u=function(e){return e&&e.Math==Math&&e},h=u(\"object\"==typeof globalThis&&globalThis)||u(\"object\"==typeof window&&window)||u(\"object\"==typeof self&&self)||u(\"object\"==typeof t&&t)||function(){return this}()||t||Function(\"return this\")(),p=r,_=Function.prototype,E=_.apply,m=_.call,f=\"object\"==typeof Reflect&&Reflect.apply||(p?m.bind(E):function(){return m.apply(E,arguments)}),T=d,S=T({}.toString),g=T(\"\".slice),R=function(e){return g(S(e),8,-1)},C=R,I=d,v=function(e){if(\"Function\"===C(e))return I(e)},y=\"object\"==typeof document&&document.all,A={all:y,IS_HTMLDDA:void 0===y&&void 0!==y},b=A.all,w=A.IS_HTMLDDA?function(e){return\"function\"==typeof e||e===b}:function(e){return\"function\"==typeof e},O={},N=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),D=r,P=Function.prototype.call,L=D?P.bind(P):function(){return P.apply(P,arguments)},k={},M={}.propertyIsEnumerable,U=Object.getOwnPropertyDescriptor,x=U&&!M.call({1:2},1);k.f=x?function(e){var t=U(this,e);return!!t&&t.enumerable}:M;var V,F,B=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},j=n,G=R,W=Object,H=d(\"\".split),K=j((function(){return!W(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==G(e)?H(e,\"\"):W(e)}:W,Y=function(e){return null==e},q=Y,z=TypeError,J=function(e){if(q(e))throw z(\"Can't call method on \"+e);return e},X=K,Q=J,Z=function(e){return X(Q(e))},$=w,ee=A.all,te=A.IS_HTMLDDA?function(e){return\"object\"==typeof e?null!==e:$(e)||e===ee}:function(e){return\"object\"==typeof e?null!==e:$(e)},ie={},ne=ie,re=h,oe=w,se=function(e){return oe(e)?e:void 0},ae=function(e,t){return arguments.length<2?se(ne[e])||se(re[e]):ne[e]&&ne[e][t]||re[e]&&re[e][t]},ce=\"undefined\"!=typeof navigator&&String(navigator.userAgent)||\"\",de=h,le=ce,ue=de.process,he=de.Deno,pe=ue&&ue.versions||he&&he.version,_e=pe&&pe.v8;_e&&(F=(V=_e.split(\".\"))[0]>0&&V[0]<4?1:+(V[0]+V[1])),!F&&le&&(!(V=le.match(/Edge\\/(\\d+)/))||V[1]>=74)&&(V=le.match(/Chrome\\/(\\d+)/))&&(F=+V[1]);var Ee=F,me=Ee,fe=n,Te=h.String,Se=!!Object.getOwnPropertySymbols&&!fe((function(){var e=Symbol();return!Te(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&me&&me<41})),ge=Se&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator,Re=ae,Ce=w,Ie=l,ve=Object,ye=ge?function(e){return\"symbol\"==typeof e}:function(e){var t=Re(\"Symbol\");return Ce(t)&&Ie(t.prototype,ve(e))},Ae=String,be=function(e){try{return Ae(e)}catch(e){return\"Object\"}},we=w,Oe=be,Ne=TypeError,De=function(e){if(we(e))return e;throw Ne(Oe(e)+\" is not a function\")},Pe=De,Le=Y,ke=function(e,t){var i=e[t];return Le(i)?void 0:Pe(i)},Me=L,Ue=w,xe=te,Ve=TypeError,Fe={exports:{}},Be=h,je=Object.defineProperty,Ge=function(e,t){try{je(Be,e,{value:t,configurable:!0,writable:!0})}catch(i){Be[e]=t}return t},We=\"__core-js_shared__\",He=h[We]||Ge(We,{}),Ke=He;(Fe.exports=function(e,t){return Ke[e]||(Ke[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.31.1\",mode:\"pure\",copyright:\"Â© 2014-2023 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.31.1/LICENSE\",source:\"https://github.com/zloirock/core-js\"});var Ye=Fe.exports,qe=J,ze=Object,Je=function(e){return ze(qe(e))},Xe=Je,Qe=d({}.hasOwnProperty),Ze=Object.hasOwn||function(e,t){return Qe(Xe(e),t)},$e=d,et=0,tt=Math.random(),it=$e(1..toString),nt=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+it(++et+tt,36)},rt=Ye,ot=Ze,st=nt,at=Se,ct=ge,dt=h.Symbol,lt=rt(\"wks\"),ut=ct?dt.for||dt:dt&&dt.withoutSetter||st,ht=function(e){return ot(lt,e)||(lt[e]=at&&ot(dt,e)?dt[e]:ut(\"Symbol.\"+e)),lt[e]},pt=L,_t=te,Et=ye,mt=ke,ft=function(e,t){var i,n;if(\"string\"===t&&Ue(i=e.toString)&&!xe(n=Me(i,e)))return n;if(Ue(i=e.valueOf)&&!xe(n=Me(i,e)))return n;if(\"string\"!==t&&Ue(i=e.toString)&&!xe(n=Me(i,e)))return n;throw Ve(\"Can't convert object to primitive value\")},Tt=TypeError,St=ht(\"toPrimitive\"),gt=function(e,t){if(!_t(e)||Et(e))return e;var i,n=mt(e,St);if(n){if(void 0===t&&(t=\"default\"),i=pt(n,e,t),!_t(i)||Et(i))return i;throw Tt(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),ft(e,t)},Rt=ye,Ct=function(e){var t=gt(e,\"string\");return Rt(t)?t:t+\"\"},It=te,vt=h.document,yt=It(vt)&&It(vt.createElement),At=function(e){return yt?vt.createElement(e):{}},bt=At,wt=!N&&!n((function(){return 7!=Object.defineProperty(bt(\"div\"),\"a\",{get:function(){return 7}}).a})),Ot=N,Nt=L,Dt=k,Pt=B,Lt=Z,kt=Ct,Mt=Ze,Ut=wt,xt=Object.getOwnPropertyDescriptor;O.f=Ot?xt:function(e,t){if(e=Lt(e),t=kt(t),Ut)try{return xt(e,t)}catch(e){}if(Mt(e,t))return Pt(!Nt(Dt.f,e,t),e[t])};var Vt=n,Ft=w,Bt=/#|\\.prototype\\./,jt=function(e,t){var i=Wt[Gt(e)];return i==Kt||i!=Ht&&(Ft(t)?Vt(t):!!t)},Gt=jt.normalize=function(e){return String(e).replace(Bt,\".\").toLowerCase()},Wt=jt.data={},Ht=jt.NATIVE=\"N\",Kt=jt.POLYFILL=\"P\",Yt=jt,qt=De,zt=r,Jt=v(v.bind),Xt=function(e,t){return qt(e),void 0===t?e:zt?Jt(e,t):function(){return e.apply(t,arguments)}},Qt={},Zt=N&&n((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype})),$t=te,ei=String,ti=TypeError,ii=function(e){if($t(e))return e;throw ti(ei(e)+\" is not an object\")},ni=N,ri=wt,oi=Zt,si=ii,ai=Ct,ci=TypeError,di=Object.defineProperty,li=Object.getOwnPropertyDescriptor,ui=\"enumerable\",hi=\"configurable\",pi=\"writable\";Qt.f=ni?oi?function(e,t,i){if(si(e),t=ai(t),si(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&pi in i&&!i[pi]){var n=li(e,t);n&&n[pi]&&(e[t]=i.value,i={configurable:hi in i?i[hi]:n[hi],enumerable:ui in i?i[ui]:n[ui],writable:!1})}return di(e,t,i)}:di:function(e,t,i){if(si(e),t=ai(t),si(i),ri)try{return di(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw ci(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e};var _i=Qt,Ei=B,mi=N?function(e,t,i){return _i.f(e,t,Ei(1,i))}:function(e,t,i){return e[t]=i,e},fi=h,Ti=f,Si=v,gi=w,Ri=O.f,Ci=Yt,Ii=ie,vi=Xt,yi=mi,Ai=Ze,bi=function(e){var t=function(i,n,r){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(i);case 2:return new e(i,n)}return new e(i,n,r)}return Ti(e,this,arguments)};return t.prototype=e.prototype,t},wi=function(e,t){var i,n,r,o,s,a,c,d,l,u=e.target,h=e.global,p=e.stat,_=e.proto,E=h?fi:p?fi[u]:(fi[u]||{}).prototype,m=h?Ii:Ii[u]||yi(Ii,u,{})[u],f=m.prototype;for(o in t)n=!(i=Ci(h?o:u+(p?\".\":\"#\")+o,e.forced))&&E&&Ai(E,o),a=m[o],n&&(c=e.dontCallGetSet?(l=Ri(E,o))&&l.value:E[o]),s=n&&c?c:t[o],n&&typeof a==typeof s||(d=e.bind&&n?vi(s,fi):e.wrap&&n?bi(s):_&&gi(s)?Si(s):s,(e.sham||s&&s.sham||a&&a.sham)&&yi(d,\"sham\",!0),yi(m,o,d),_&&(Ai(Ii,r=u+\"Prototype\")||yi(Ii,r,{}),yi(Ii[r],o,s),e.real&&f&&(i||!f[o])&&yi(f,o,s)))},Oi=Math.ceil,Ni=Math.floor,Di=Math.trunc||function(e){var t=+e;return(t>0?Ni:Oi)(t)},Pi=Di,Li=function(e){var t=+e;return t!=t||0===t?0:Pi(t)},ki=Li,Mi=Math.max,Ui=Math.min,xi=function(e,t){var i=ki(e);return i<0?Mi(i+t,0):Ui(i,t)},Vi=Li,Fi=Math.min,Bi=function(e){return e>0?Fi(Vi(e),9007199254740991):0},ji=Bi,Gi=function(e){return ji(e.length)},Wi=Z,Hi=xi,Ki=Gi,Yi=function(e){return function(t,i,n){var r,o=Wi(t),s=Ki(o),a=Hi(n,s);if(e&&i!=i){for(;s>a;)if((r=o[a++])!=r)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===i)return e||a||0;return!e&&-1}},qi={includes:Yi(!0),indexOf:Yi(!1)},zi=qi.includes;wi({target:\"Array\",proto:!0,forced:n((function(){return!Array(1).includes()}))},{includes:function(e){return zi(this,e,arguments.length>1?arguments[1]:void 0)}});var Ji=ie,Xi=function(e){return Ji[e+\"Prototype\"]},Qi=Xi(\"Array\").includes,Zi=te,$i=R,en=ht(\"match\"),tn=function(e){var t;return Zi(e)&&(void 0!==(t=e[en])?!!t:\"RegExp\"==$i(e))},nn=tn,rn=TypeError,on={};on[ht(\"toStringTag\")]=\"z\";var sn=\"[object z]\"===String(on),an=sn,cn=w,dn=R,ln=ht(\"toStringTag\"),un=Object,hn=\"Arguments\"==dn(function(){return arguments}()),pn=an?dn:function(e){var t,i,n;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=un(e),ln))?i:hn?dn(t):\"Object\"==(n=dn(t))&&cn(t.callee)?\"Arguments\":n},_n=pn,En=String,mn=function(e){if(\"Symbol\"===_n(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return En(e)},fn=ht(\"match\"),Tn=wi,Sn=function(e){if(nn(e))throw rn(\"The method doesn't accept regular expressions\");return e},gn=J,Rn=mn,Cn=function(e){var t=/./;try{\"/./\"[e](t)}catch(i){try{return t[fn]=!1,\"/./\"[e](t)}catch(e){}}return!1},In=d(\"\".indexOf);Tn({target:\"String\",proto:!0,forced:!Cn(\"includes\")},{includes:function(e){return!!~In(Rn(gn(this)),Rn(Sn(e)),arguments.length>1?arguments[1]:void 0)}});var vn=Xi(\"String\").includes,yn=l,An=Qi,bn=vn,wn=Array.prototype,On=String.prototype,Nn=function(e){var t=e.includes;return e===wn||yn(wn,e)&&t===wn.includes?An:\"string\"==typeof e||e===On||yn(On,e)&&t===On.includes?bn:t},Dn=i(Nn),Pn=De,Ln=Je,kn=K,Mn=Gi,Un=TypeError,xn=function(e){return function(t,i,n,r){Pn(i);var o=Ln(t),s=kn(o),a=Mn(o),c=e?a-1:0,d=e?-1:1;if(n<2)for(;;){if(c in s){r=s[c],c+=d;break}if(c+=d,e?c<0:a<=c)throw Un(\"Reduce of empty array with no initial value\")}for(;e?c>=0:a>c;c+=d)c in s&&(r=i(r,s[c],c,o));return r}},Vn={left:xn(!1),right:xn(!0)},Fn=n,Bn=function(e,t){var i=[][e];return!!i&&Fn((function(){i.call(null,t||function(){return 1},1)}))},jn=\"undefined\"!=typeof process&&\"process\"==R(process),Gn=Vn.left;wi({target:\"Array\",proto:!0,forced:!jn&&Ee>79&&Ee<83||!Bn(\"reduce\")},{reduce:function(e){var t=arguments.length;return Gn(this,e,t,t>1?arguments[1]:void 0)}});var Wn=Xi(\"Array\").reduce,Hn=l,Kn=Wn,Yn=Array.prototype,qn=function(e){var t=e.reduce;return e===Yn||Hn(Yn,e)&&t===Yn.reduce?Kn:t},zn=qn,Jn=i(zn);let Xn=!0,Qn=!0;function Zn(e,t,i){const n=e.match(t);return n&&n.length>=i&&parseInt(n[i],10)}function $n(e,t,i){if(!e.RTCPeerConnection)return;const n=e.RTCPeerConnection.prototype,r=n.addEventListener;n.addEventListener=function(e,n){if(e!==t)return r.apply(this,arguments);const o=e=>{const t=i(e);t&&(n.handleEvent?n.handleEvent(t):n(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(n,o),r.apply(this,[e,o])};const o=n.removeEventListener;n.removeEventListener=function(e,i){if(e!==t||!this._eventMap||!this._eventMap[t])return o.apply(this,arguments);if(!this._eventMap[t].has(i))return o.apply(this,arguments);const n=this._eventMap[t].get(i);return this._eventMap[t].delete(i),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,o.apply(this,[e,n])},Object.defineProperty(n,\"on\"+t,{get(){return this[\"_on\"+t]},set(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}function er(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Xn=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")}function tr(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Qn=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))}function ir(){if(\"object\"==typeof window){if(Xn)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}}function nr(e,t){Qn&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")}function rr(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function or(e){var t;return rr(e)?Jn(t=Object.keys(e)).call(t,(function(t,i){const n=rr(e[i]),r=n?or(e[i]):e[i],o=n&&!Object.keys(r).length;return void 0===r||o?t:Object.assign(t,{[i]:r})}),{}):e}function sr(e,t,i){t&&!i.has(t.id)&&(i.set(t.id,t),Object.keys(t).forEach((n=>{n.endsWith(\"Id\")?sr(e,e.get(t[n]),i):n.endsWith(\"Ids\")&&t[n].forEach((t=>{sr(e,e.get(t),i)}))})))}function ar(e,t,i){const n=i?\"outbound-rtp\":\"inbound-rtp\",r=new Map;if(null===t)return r;const o=[];return e.forEach((e=>{\"track\"===e.type&&e.trackIdentifier===t.id&&o.push(e)})),o.forEach((t=>{e.forEach((i=>{i.type===n&&i.trackId===t.id&&sr(e,i,r)}))})),r}var cr=nt,dr=Ye(\"keys\"),lr=function(e){return dr[e]||(dr[e]=cr(e))},ur=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),hr=Ze,pr=w,_r=Je,Er=ur,mr=lr(\"IE_PROTO\"),fr=Object,Tr=fr.prototype,Sr=Er?fr.getPrototypeOf:function(e){var t=_r(e);if(hr(t,mr))return t[mr];var i=t.constructor;return pr(i)&&t instanceof i?i.prototype:t instanceof fr?Tr:null},gr=d,Rr=De,Cr=w,Ir=String,vr=TypeError,yr=function(e,t,i){try{return gr(Rr(Object.getOwnPropertyDescriptor(e,t)[i]))}catch(e){}},Ar=ii,br=function(e){if(\"object\"==typeof e||Cr(e))return e;throw vr(\"Can't set \"+Ir(e)+\" as a prototype\")},wr=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=yr(Object.prototype,\"__proto__\",\"set\"))(i,[]),t=i instanceof Array}catch(e){}return function(i,n){return Ar(i),br(n),t?e(i,n):i.__proto__=n,i}}():void 0),Or={},Nr={},Dr=Ze,Pr=Z,Lr=qi.indexOf,kr=Nr,Mr=d([].push),Ur=function(e,t){var i,n=Pr(e),r=0,o=[];for(i in n)!Dr(kr,i)&&Dr(n,i)&&Mr(o,i);for(;t.length>r;)Dr(n,i=t[r++])&&(~Lr(o,i)||Mr(o,i));return o},xr=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"],Vr=Ur,Fr=xr.concat(\"length\",\"prototype\");Or.f=Object.getOwnPropertyNames||function(e){return Vr(e,Fr)};var Br={};Br.f=Object.getOwnPropertySymbols;var jr=ae,Gr=Or,Wr=Br,Hr=ii,Kr=d([].concat),Yr=jr(\"Reflect\",\"ownKeys\")||function(e){var t=Gr.f(Hr(e)),i=Wr.f;return i?Kr(t,i(e)):t},qr=Ze,zr=Yr,Jr=O,Xr=Qt,Qr={},Zr=Ur,$r=xr,eo=Object.keys||function(e){return Zr(e,$r)},to=N,io=Zt,no=Qt,ro=ii,oo=Z,so=eo;Qr.f=to&&!io?Object.defineProperties:function(e,t){ro(e);for(var i,n=oo(t),r=so(t),o=r.length,s=0;o>s;)no.f(e,i=r[s++],n[i]);return e};var ao,co=ae(\"document\",\"documentElement\"),lo=ii,uo=Qr,ho=xr,po=Nr,_o=co,Eo=At,mo=\"prototype\",fo=\"script\",To=lr(\"IE_PROTO\"),So=function(){},go=function(e){return\"<\"+fo+\">\"+e+\"</\"+fo+\">\"},Ro=function(e){e.write(go(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},Co=function(){try{ao=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t,i;Co=\"undefined\"!=typeof document?document.domain&&ao?Ro(ao):(t=Eo(\"iframe\"),i=\"java\"+fo+\":\",t.style.display=\"none\",_o.appendChild(t),t.src=String(i),(e=t.contentWindow.document).open(),e.write(go(\"document.F=Object\")),e.close(),e.F):Ro(ao);for(var n=ho.length;n--;)delete Co[mo][ho[n]];return Co()};po[To]=!0;var Io=Object.create||function(e,t){var i;return null!==e?(So[mo]=lo(e),i=new So,So[mo]=null,i[To]=e):i=Co(),void 0===t?i:uo.f(i,t)},vo=te,yo=mi,Ao=Error,bo=d(\"\".replace),wo=String(Ao(\"zxcasd\").stack),Oo=/\\n\\s*at [^:]*:[^\\n]*/,No=Oo.test(wo),Do=B,Po=!n((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",Do(1,7)),7!==e.stack)})),Lo=mi,ko=function(e,t){if(No&&\"string\"==typeof e&&!Ao.prepareStackTrace)for(;t--;)e=bo(e,Oo,\"\");return e},Mo=Po,Uo=Error.captureStackTrace,xo={},Vo=xo,Fo=ht(\"iterator\"),Bo=Array.prototype,jo=function(e){return void 0!==e&&(Vo.Array===e||Bo[Fo]===e)},Go=pn,Wo=ke,Ho=Y,Ko=xo,Yo=ht(\"iterator\"),qo=function(e){if(!Ho(e))return Wo(e,Yo)||Wo(e,\"@@iterator\")||Ko[Go(e)]},zo=L,Jo=De,Xo=ii,Qo=be,Zo=qo,$o=TypeError,es=function(e,t){var i=arguments.length<2?Zo(e):t;if(Jo(i))return Xo(zo(i,e));throw $o(Qo(e)+\" is not iterable\")},ts=L,is=ii,ns=ke,rs=function(e,t,i){var n,r;is(e);try{if(!(n=ns(e,\"return\"))){if(\"throw\"===t)throw i;return i}n=ts(n,e)}catch(e){r=!0,n=e}if(\"throw\"===t)throw i;if(r)throw n;return is(n),i},os=Xt,ss=L,as=ii,cs=be,ds=jo,ls=Gi,us=l,hs=es,ps=qo,_s=rs,Es=TypeError,ms=function(e,t){this.stopped=e,this.result=t},fs=ms.prototype,Ts=function(e,t,i){var n,r,o,s,a,c,d,l=i&&i.that,u=!(!i||!i.AS_ENTRIES),h=!(!i||!i.IS_RECORD),p=!(!i||!i.IS_ITERATOR),_=!(!i||!i.INTERRUPTED),E=os(t,l),m=function(e){return n&&_s(n,\"normal\",e),new ms(!0,e)},f=function(e){return u?(as(e),_?E(e[0],e[1],m):E(e[0],e[1])):_?E(e,m):E(e)};if(h)n=e.iterator;else if(p)n=e;else{if(!(r=ps(e)))throw Es(cs(e)+\" is not iterable\");if(ds(r)){for(o=0,s=ls(e);s>o;o++)if((a=f(e[o]))&&us(fs,a))return a;return new ms(!1)}n=hs(e,r)}for(c=h?e.next:n.next;!(d=ss(c,n)).done;){try{a=f(d.value)}catch(e){_s(n,\"throw\",e)}if(\"object\"==typeof a&&a&&us(fs,a))return a}return new ms(!1)},Ss=mn,gs=wi,Rs=l,Cs=Sr,Is=wr,vs=function(e,t,i){for(var n=zr(t),r=Xr.f,o=Jr.f,s=0;s<n.length;s++){var a=n[s];qr(e,a)||i&&qr(i,a)||r(e,a,o(t,a))}},ys=Io,As=mi,bs=B,ws=function(e,t){vo(t)&&\"cause\"in t&&yo(e,\"cause\",t.cause)},Os=function(e,t,i,n){Mo&&(Uo?Uo(e,t):Lo(e,\"stack\",ko(i,n)))},Ns=Ts,Ds=function(e,t){return void 0===e?arguments.length<2?\"\":t:Ss(e)},Ps=ht(\"toStringTag\"),Ls=Error,ks=[].push,Ms=function(e,t){var i,n=Rs(Us,this);Is?i=Is(Ls(),n?Cs(this):Us):(i=n?this:ys(Us),As(i,Ps,\"Error\")),void 0!==t&&As(i,\"message\",Ds(t)),Os(i,Ms,i.stack,1),arguments.length>2&&ws(i,arguments[2]);var r=[];return Ns(e,ks,{that:r}),As(i,\"errors\",r),i};Is?Is(Ms,Ls):vs(Ms,Ls,{name:!0});var Us=Ms.prototype=ys(Ls.prototype,{constructor:bs(1,Ms),message:bs(1,\"\"),name:bs(1,\"AggregateError\")});gs({global:!0,constructor:!0,arity:2},{AggregateError:Ms});var xs,Vs,Fs,Bs=w,js=h.WeakMap,Gs=Bs(js)&&/native code/.test(String(js)),Ws=h,Hs=te,Ks=mi,Ys=Ze,qs=He,zs=lr,Js=Nr,Xs=\"Object already initialized\",Qs=Ws.TypeError,Zs=Ws.WeakMap;if(Gs||qs.state){var $s=qs.state||(qs.state=new Zs);$s.get=$s.get,$s.has=$s.has,$s.set=$s.set,xs=function(e,t){if($s.has(e))throw Qs(Xs);return t.facade=e,$s.set(e,t),t},Vs=function(e){return $s.get(e)||{}},Fs=function(e){return $s.has(e)}}else{var ea=zs(\"state\");Js[ea]=!0,xs=function(e,t){if(Ys(e,ea))throw Qs(Xs);return t.facade=e,Ks(e,ea,t),t},Vs=function(e){return Ys(e,ea)?e[ea]:{}},Fs=function(e){return Ys(e,ea)}}var ta,ia,na,ra={set:xs,get:Vs,has:Fs,enforce:function(e){return Fs(e)?Vs(e):xs(e,{})},getterFor:function(e){return function(t){var i;if(!Hs(t)||(i=Vs(t)).type!==e)throw Qs(\"Incompatible receiver, \"+e+\" required\");return i}}},oa=N,sa=Ze,aa=Function.prototype,ca=oa&&Object.getOwnPropertyDescriptor,da=sa(aa,\"name\"),la={EXISTS:da,PROPER:da&&\"something\"===function(){}.name,CONFIGURABLE:da&&(!oa||oa&&ca(aa,\"name\").configurable)},ua=mi,ha=function(e,t,i,n){return n&&n.enumerable?e[t]=i:ua(e,t,i),e},pa=n,_a=w,Ea=te,ma=Io,fa=Sr,Ta=ha,Sa=ht(\"iterator\"),ga=!1;[].keys&&(\"next\"in(na=[].keys())?(ia=fa(fa(na)))!==Object.prototype&&(ta=ia):ga=!0);var Ra=!Ea(ta)||pa((function(){var e={};return ta[Sa].call(e)!==e}));_a((ta=Ra?{}:ma(ta))[Sa])||Ta(ta,Sa,(function(){return this}));var Ca={IteratorPrototype:ta,BUGGY_SAFARI_ITERATORS:ga},Ia=pn,va=sn?{}.toString:function(){return\"[object \"+Ia(this)+\"]\"},ya=sn,Aa=Qt.f,ba=mi,wa=Ze,Oa=va,Na=ht(\"toStringTag\"),Da=function(e,t,i,n){if(e){var r=i?e:e.prototype;wa(r,Na)||Aa(r,Na,{configurable:!0,value:t}),n&&!ya&&ba(r,\"toString\",Oa)}},Pa=Ca.IteratorPrototype,La=Io,ka=B,Ma=Da,Ua=xo,xa=function(){return this},Va=function(e,t,i,n){var r=t+\" Iterator\";return e.prototype=La(Pa,{next:ka(+!n,i)}),Ma(e,r,!1,!0),Ua[r]=xa,e},Fa=wi,Ba=L,ja=la,Ga=Va,Wa=Sr,Ha=Da,Ka=ha,Ya=xo,qa=Ca,za=ja.PROPER,Ja=qa.BUGGY_SAFARI_ITERATORS,Xa=ht(\"iterator\"),Qa=\"keys\",Za=\"values\",$a=\"entries\",ec=function(){return this},tc=function(e,t,i,n,r,o,s){Ga(i,t,n);var a,c,d,l=function(e){if(e===r&&E)return E;if(!Ja&&e in p)return p[e];switch(e){case Qa:case Za:case $a:return function(){return new i(this,e)}}return function(){return new i(this)}},u=t+\" Iterator\",h=!1,p=e.prototype,_=p[Xa]||p[\"@@iterator\"]||r&&p[r],E=!Ja&&_||l(r),m=\"Array\"==t&&p.entries||_;if(m&&(a=Wa(m.call(new e)))!==Object.prototype&&a.next&&(Ha(a,u,!0,!0),Ya[u]=ec),za&&r==Za&&_&&_.name!==Za&&(h=!0,E=function(){return Ba(_,this)}),r)if(c={values:l(Za),keys:o?E:l(Qa),entries:l($a)},s)for(d in c)(Ja||h||!(d in p))&&Ka(p,d,c[d]);else Fa({target:t,proto:!0,forced:Ja||h},c);return s&&p[Xa]!==E&&Ka(p,Xa,E,{name:r}),Ya[t]=E,c},ic=function(e,t){return{value:e,done:t}},nc=Z,rc=xo,oc=ra;Qt.f;var sc=tc,ac=ic,cc=\"Array Iterator\",dc=oc.set,lc=oc.getterFor(cc);sc(Array,\"Array\",(function(e,t){dc(this,{type:cc,target:nc(e),index:0,kind:t})}),(function(){var e=lc(this),t=e.target,i=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,ac(void 0,!0)):ac(\"keys\"==i?n:\"values\"==i?t[n]:[n,t[n]],!1)}),\"values\"),rc.Arguments=rc.Array;var uc=Qt,hc=function(e,t,i){return uc.f(e,t,i)},pc=ae,_c=hc,Ec=N,mc=ht(\"species\"),fc=l,Tc=TypeError,Sc=function(e,t){if(fc(t,e))return e;throw Tc(\"Incorrect invocation\")},gc=w,Rc=He,Cc=d(Function.toString);gc(Rc.inspectSource)||(Rc.inspectSource=function(e){return Cc(e)});var Ic=Rc.inspectSource,vc=d,yc=n,Ac=w,bc=pn,wc=Ic,Oc=function(){},Nc=[],Dc=ae(\"Reflect\",\"construct\"),Pc=/^\\s*(?:class|function)\\b/,Lc=vc(Pc.exec),kc=!Pc.exec(Oc),Mc=function(e){if(!Ac(e))return!1;try{return Dc(Oc,Nc,e),!0}catch(e){return!1}},Uc=function(e){if(!Ac(e))return!1;switch(bc(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return kc||!!Lc(Pc,wc(e))}catch(e){return!0}};Uc.sham=!0;var xc,Vc,Fc,Bc,jc=!Dc||yc((function(){var e;return Mc(Mc.call)||!Mc(Object)||!Mc((function(){e=!0}))||e}))?Uc:Mc,Gc=jc,Wc=be,Hc=TypeError,Kc=ii,Yc=function(e){if(Gc(e))return e;throw Hc(Wc(e)+\" is not a constructor\")},qc=Y,zc=ht(\"species\"),Jc=function(e,t){var i,n=Kc(e).constructor;return void 0===n||qc(i=Kc(n)[zc])?t:Yc(i)},Xc=d([].slice),Qc=TypeError,Zc=function(e,t){if(e<t)throw Qc(\"Not enough arguments\");return e},$c=/(?:ipad|iphone|ipod).*applewebkit/i.test(ce),ed=h,td=f,id=Xt,nd=w,rd=Ze,od=n,sd=co,ad=Xc,cd=At,dd=Zc,ld=$c,ud=jn,hd=ed.setImmediate,pd=ed.clearImmediate,_d=ed.process,Ed=ed.Dispatch,md=ed.Function,fd=ed.MessageChannel,Td=ed.String,Sd=0,gd={},Rd=\"onreadystatechange\";od((function(){xc=ed.location}));var Cd=function(e){if(rd(gd,e)){var t=gd[e];delete gd[e],t()}},Id=function(e){return function(){Cd(e)}},vd=function(e){Cd(e.data)},yd=function(e){ed.postMessage(Td(e),xc.protocol+\"//\"+xc.host)};hd&&pd||(hd=function(e){dd(arguments.length,1);var t=nd(e)?e:md(e),i=ad(arguments,1);return gd[++Sd]=function(){td(t,void 0,i)},Vc(Sd),Sd},pd=function(e){delete gd[e]},ud?Vc=function(e){_d.nextTick(Id(e))}:Ed&&Ed.now?Vc=function(e){Ed.now(Id(e))}:fd&&!ld?(Bc=(Fc=new fd).port2,Fc.port1.onmessage=vd,Vc=id(Bc.postMessage,Bc)):ed.addEventListener&&nd(ed.postMessage)&&!ed.importScripts&&xc&&\"file:\"!==xc.protocol&&!od(yd)?(Vc=yd,ed.addEventListener(\"message\",vd,!1)):Vc=Rd in cd(\"script\")?function(e){sd.appendChild(cd(\"script\"))[Rd]=function(){sd.removeChild(this),Cd(e)}}:function(e){setTimeout(Id(e),0)});var Ad={set:hd,clear:pd},bd=function(){this.head=null,this.tail=null};bd.prototype={add:function(e){var t={item:e,next:null},i=this.tail;i?i.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}};var wd,Od,Nd,Dd,Pd,Ld=bd,kd=/ipad|iphone|ipod/i.test(ce)&&\"undefined\"!=typeof Pebble,Md=/web0s(?!.*chrome)/i.test(ce),Ud=h,xd=Xt,Vd=O.f,Fd=Ad.set,Bd=Ld,jd=$c,Gd=kd,Wd=Md,Hd=jn,Kd=Ud.MutationObserver||Ud.WebKitMutationObserver,Yd=Ud.document,qd=Ud.process,zd=Ud.Promise,Jd=Vd(Ud,\"queueMicrotask\"),Xd=Jd&&Jd.value;if(!Xd){var Qd=new Bd,Zd=function(){var e,t;for(Hd&&(e=qd.domain)&&e.exit();t=Qd.get();)try{t()}catch(e){throw Qd.head&&wd(),e}e&&e.enter()};jd||Hd||Wd||!Kd||!Yd?!Gd&&zd&&zd.resolve?((Dd=zd.resolve(void 0)).constructor=zd,Pd=xd(Dd.then,Dd),wd=function(){Pd(Zd)}):Hd?wd=function(){qd.nextTick(Zd)}:(Fd=xd(Fd,Ud),wd=function(){Fd(Zd)}):(Od=!0,Nd=Yd.createTextNode(\"\"),new Kd(Zd).observe(Nd,{characterData:!0}),wd=function(){Nd.data=Od=!Od}),Xd=function(e){Qd.head||wd(),Qd.add(e)}}var $d=Xd,el=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},tl=h.Promise,il=\"object\"==typeof Deno&&Deno&&\"object\"==typeof Deno.version,nl=!il&&!jn&&\"object\"==typeof window&&\"object\"==typeof document,rl=h,ol=tl,sl=w,al=Yt,cl=Ic,dl=ht,ll=nl,ul=il,hl=Ee,pl=ol&&ol.prototype,_l=dl(\"species\"),El=!1,ml=sl(rl.PromiseRejectionEvent),fl=al(\"Promise\",(function(){var e=cl(ol),t=e!==String(ol);if(!t&&66===hl)return!0;if(!pl.catch||!pl.finally)return!0;if(!hl||hl<51||!/native code/.test(e)){var i=new ol((function(e){e(1)})),n=function(e){e((function(){}),(function(){}))};if((i.constructor={})[_l]=n,!(El=i.then((function(){}))instanceof n))return!0}return!t&&(ll||ul)&&!ml})),Tl={CONSTRUCTOR:fl,REJECTION_EVENT:ml,SUBCLASSING:El},Sl={},gl=De,Rl=TypeError,Cl=function(e){var t,i;this.promise=new e((function(e,n){if(void 0!==t||void 0!==i)throw Rl(\"Bad Promise constructor\");t=e,i=n})),this.resolve=gl(t),this.reject=gl(i)};Sl.f=function(e){return new Cl(e)};var Il,vl,yl=wi,Al=jn,bl=h,wl=L,Ol=ha,Nl=Da,Dl=function(e){var t=pc(e);Ec&&t&&!t[mc]&&_c(t,mc,{configurable:!0,get:function(){return this}})},Pl=De,Ll=w,kl=te,Ml=Sc,Ul=Jc,xl=Ad.set,Vl=$d,Fl=function(e,t){try{1==arguments.length?console.error(e):console.error(e,t)}catch(e){}},Bl=el,jl=Ld,Gl=ra,Wl=tl,Hl=Tl,Kl=Sl,Yl=\"Promise\",ql=Hl.CONSTRUCTOR,zl=Hl.REJECTION_EVENT,Jl=Gl.getterFor(Yl),Xl=Gl.set,Ql=Wl&&Wl.prototype,Zl=Wl,$l=Ql,eu=bl.TypeError,tu=bl.document,iu=bl.process,nu=Kl.f,ru=nu,ou=!!(tu&&tu.createEvent&&bl.dispatchEvent),su=\"unhandledrejection\",au=function(e){var t;return!(!kl(e)||!Ll(t=e.then))&&t},cu=function(e,t){var i,n,r,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,l=e.domain;try{a?(s||(2===t.rejection&&pu(t),t.rejection=1),!0===a?i=o:(l&&l.enter(),i=a(o),l&&(l.exit(),r=!0)),i===e.promise?d(eu(\"Promise-chain cycle\")):(n=au(i))?wl(n,i,c,d):c(i)):d(o)}catch(e){l&&!r&&l.exit(),d(e)}},du=function(e,t){e.notified||(e.notified=!0,Vl((function(){for(var i,n=e.reactions;i=n.get();)cu(i,e);e.notified=!1,t&&!e.rejection&&uu(e)})))},lu=function(e,t,i){var n,r;ou?((n=tu.createEvent(\"Event\")).promise=t,n.reason=i,n.initEvent(e,!1,!0),bl.dispatchEvent(n)):n={promise:t,reason:i},!zl&&(r=bl[\"on\"+e])?r(n):e===su&&Fl(\"Unhandled promise rejection\",i)},uu=function(e){wl(xl,bl,(function(){var t,i=e.facade,n=e.value;if(hu(e)&&(t=Bl((function(){Al?iu.emit(\"unhandledRejection\",n,i):lu(su,i,n)})),e.rejection=Al||hu(e)?2:1,t.error))throw t.value}))},hu=function(e){return 1!==e.rejection&&!e.parent},pu=function(e){wl(xl,bl,(function(){var t=e.facade;Al?iu.emit(\"rejectionHandled\",t):lu(\"rejectionhandled\",t,e.value)}))},_u=function(e,t,i){return function(n){e(t,n,i)}},Eu=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,du(e,!0))},mu=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw eu(\"Promise can't be resolved itself\");var n=au(t);n?Vl((function(){var i={done:!1};try{wl(n,t,_u(mu,i,e),_u(Eu,i,e))}catch(t){Eu(i,t,e)}})):(e.value=t,e.state=1,du(e,!1))}catch(t){Eu({done:!1},t,e)}}};ql&&($l=(Zl=function(e){Ml(this,$l),Pl(e),wl(Il,this);var t=Jl(this);try{e(_u(mu,t),_u(Eu,t))}catch(e){Eu(t,e)}}).prototype,(Il=function(e){Xl(this,{type:Yl,done:!1,notified:!1,parent:!1,reactions:new jl,rejection:!1,state:0,value:void 0})}).prototype=Ol($l,\"then\",(function(e,t){var i=Jl(this),n=nu(Ul(this,Zl));return i.parent=!0,n.ok=!Ll(e)||e,n.fail=Ll(t)&&t,n.domain=Al?iu.domain:void 0,0==i.state?i.reactions.add(n):Vl((function(){cu(n,i)})),n.promise})),vl=function(){var e=new Il,t=Jl(e);this.promise=e,this.resolve=_u(mu,t),this.reject=_u(Eu,t)},Kl.f=nu=function(e){return e===Zl||undefined===e?new vl(e):ru(e)}),yl({global:!0,constructor:!0,wrap:!0,forced:ql},{Promise:Zl}),Nl(Zl,Yl,!1,!0),Dl(Yl);var fu=ht(\"iterator\"),Tu=!1;try{var Su=0,gu={next:function(){return{done:!!Su++}},return:function(){Tu=!0}};gu[fu]=function(){return this},Array.from(gu,(function(){throw 2}))}catch(e){}var Ru=tl,Cu=function(e,t){if(!t&&!Tu)return!1;var i=!1;try{var n={};n[fu]=function(){return{next:function(){return{done:i=!0}}}},e(n)}catch(e){}return i},Iu=Tl.CONSTRUCTOR||!Cu((function(e){Ru.all(e).then(void 0,(function(){}))})),vu=L,yu=De,Au=Sl,bu=el,wu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{all:function(e){var t=this,i=Au.f(t),n=i.resolve,r=i.reject,o=bu((function(){var i=yu(t.resolve),o=[],s=0,a=1;wu(e,(function(e){var c=s++,d=!1;a++,vu(i,t,e).then((function(e){d||(d=!0,o[c]=e,--a||n(o))}),r)})),--a||n(o)}));return o.error&&r(o.value),i.promise}});var Ou=wi,Nu=Tl.CONSTRUCTOR;tl&&tl.prototype,Ou({target:\"Promise\",proto:!0,forced:Nu,real:!0},{catch:function(e){return this.then(void 0,e)}});var Du=L,Pu=De,Lu=Sl,ku=el,Mu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{race:function(e){var t=this,i=Lu.f(t),n=i.reject,r=ku((function(){var r=Pu(t.resolve);Mu(e,(function(e){Du(r,t,e).then(i.resolve,n)}))}));return r.error&&n(r.value),i.promise}});var Uu=L,xu=Sl;wi({target:\"Promise\",stat:!0,forced:Tl.CONSTRUCTOR},{reject:function(e){var t=xu.f(this);return Uu(t.reject,void 0,e),t.promise}});var Vu=ii,Fu=te,Bu=Sl,ju=function(e,t){if(Vu(e),Fu(t)&&t.constructor===e)return t;var i=Bu.f(e);return(0,i.resolve)(t),i.promise},Gu=wi,Wu=tl,Hu=Tl.CONSTRUCTOR,Ku=ju,Yu=ae(\"Promise\"),qu=!Hu;Gu({target:\"Promise\",stat:!0,forced:true},{resolve:function(e){return Ku(qu&&this===Yu?Wu:this,e)}});var zu=L,Ju=De,Xu=Sl,Qu=el,Zu=Ts;wi({target:\"Promise\",stat:!0,forced:Iu},{allSettled:function(e){var t=this,i=Xu.f(t),n=i.resolve,r=i.reject,o=Qu((function(){var i=Ju(t.resolve),r=[],o=0,s=1;Zu(e,(function(e){var a=o++,c=!1;s++,zu(i,t,e).then((function(e){c||(c=!0,r[a]={status:\"fulfilled\",value:e},--s||n(r))}),(function(e){c||(c=!0,r[a]={status:\"rejected\",reason:e},--s||n(r))}))})),--s||n(r)}));return o.error&&r(o.value),i.promise}});var $u=L,eh=De,th=ae,ih=Sl,nh=el,rh=Ts,oh=\"No one promise resolved\";wi({target:\"Promise\",stat:!0,forced:Iu},{any:function(e){var t=this,i=th(\"AggregateError\"),n=ih.f(t),r=n.resolve,o=n.reject,s=nh((function(){var n=eh(t.resolve),s=[],a=0,c=1,d=!1;rh(e,(function(e){var l=a++,u=!1;c++,$u(n,t,e).then((function(e){u||d||(d=!0,r(e))}),(function(e){u||d||(u=!0,s[l]=e,--c||o(new i(s,oh)))}))})),--c||o(new i(s,oh))}));return s.error&&o(s.value),n.promise}});var sh=wi,ah=tl,ch=n,dh=ae,lh=w,uh=Jc,hh=ju,ph=ah&&ah.prototype;sh({target:\"Promise\",proto:!0,real:!0,forced:!!ah&&ch((function(){ph.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=uh(this,dh(\"Promise\")),i=lh(e);return this.then(i?function(i){return hh(t,e()).then((function(){return i}))}:e,i?function(i){return hh(t,e()).then((function(){throw i}))}:e)}});var _h=d,Eh=Li,mh=mn,fh=J,Th=_h(\"\".charAt),Sh=_h(\"\".charCodeAt),gh=_h(\"\".slice),Rh=function(e){return function(t,i){var n,r,o=mh(fh(t)),s=Eh(i),a=o.length;return s<0||s>=a?e?\"\":void 0:(n=Sh(o,s))<55296||n>56319||s+1===a||(r=Sh(o,s+1))<56320||r>57343?e?Th(o,s):n:e?gh(o,s,s+2):r-56320+(n-55296<<10)+65536}},Ch={codeAt:Rh(!1),charAt:Rh(!0)},Ih=Ch.charAt,vh=mn,yh=ra,Ah=tc,bh=ic,wh=\"String Iterator\",Oh=yh.set,Nh=yh.getterFor(wh);Ah(String,\"String\",(function(e){Oh(this,{type:wh,string:vh(e),index:0})}),(function(){var e,t=Nh(this),i=t.string,n=t.index;return n>=i.length?bh(void 0,!0):(e=Ih(i,n),t.index+=e.length,bh(e,!1))}));var Dh=ie.Promise,Ph={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},Lh=h,kh=pn,Mh=mi,Uh=xo,xh=ht(\"toStringTag\");for(var Vh in Ph){var Fh=Lh[Vh],Bh=Fh&&Fh.prototype;Bh&&kh(Bh)!==xh&&Mh(Bh,xh,Vh),Uh[Vh]=Uh.Array}var jh=Dh,Gh=i(jh);const Wh=ir;function Hh(e,t){const i=e&&e.navigator;if(!i.mediaDevices)return;const n=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;const t={};return Object.keys(e).forEach((i=>{if(\"require\"===i||\"advanced\"===i||\"mediaSource\"===i)return;const n=\"object\"==typeof e[i]?e[i]:{ideal:e[i]};void 0!==n.exact&&\"number\"==typeof n.exact&&(n.min=n.max=n.exact);const r=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==n.ideal){t.optional=t.optional||[];let e={};\"number\"==typeof n.ideal?(e[r(\"min\",i)]=n.ideal,t.optional.push(e),e={},e[r(\"max\",i)]=n.ideal,t.optional.push(e)):(e[r(\"\",i)]=n.ideal,t.optional.push(e))}void 0!==n.exact&&\"number\"!=typeof n.exact?(t.mandatory=t.mandatory||{},t.mandatory[r(\"\",i)]=n.exact):[\"min\",\"max\"].forEach((e=>{void 0!==n[e]&&(t.mandatory=t.mandatory||{},t.mandatory[r(e,i)]=n[e])}))})),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},r=function(e,r){if(t.version>=61)return r(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"==typeof e.audio){const t=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),t(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=n(e.audio)}if(e&&\"object\"==typeof e.video){let o=e.video.facingMode;o=o&&(\"object\"==typeof o?o:{ideal:o});const s=t.version<66;if(o&&(\"user\"===o.exact||\"environment\"===o.exact||\"user\"===o.ideal||\"environment\"===o.ideal)&&(!i.mediaDevices.getSupportedConstraints||!i.mediaDevices.getSupportedConstraints().facingMode||s)){let t;if(delete e.video.facingMode,\"environment\"===o.exact||\"environment\"===o.ideal?t=[\"back\",\"rear\"]:\"user\"!==o.exact&&\"user\"!==o.ideal||(t=[\"front\"]),t)return i.mediaDevices.enumerateDevices().then((i=>{let s=(i=i.filter((e=>\"videoinput\"===e.kind))).find((e=>t.some((t=>{var i;return Dn(i=e.label.toLowerCase()).call(i,t)}))));return!s&&i.length&&Dn(t).call(t,\"back\")&&(s=i[i.length-1]),s&&(e.video.deviceId=o.exact?{exact:s.deviceId}:{ideal:s.deviceId}),e.video=n(e.video),Wh(\"chrome: \"+JSON.stringify(e)),r(e)}))}e.video=n(e.video)}return Wh(\"chrome: \"+JSON.stringify(e)),r(e)},o=function(e){return t.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&\": \")+this.message}}};if(i.getUserMedia=function(e,t,n){r(e,(e=>{i.webkitGetUserMedia(e,t,(e=>{n&&n(o(e))}))}))}.bind(i),i.mediaDevices.getUserMedia){const e=i.mediaDevices.getUserMedia.bind(i.mediaDevices);i.mediaDevices.getUserMedia=function(t){return r(t,(t=>e(t).then((e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach((e=>{e.stop()})),new DOMException(\"\",\"NotFoundError\");return e}),(e=>Gh.reject(o(e))))))}}}function Kh(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function Yh(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener(\"addtrack\",(i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.track.id)):{track:i.track};const r=new Event(\"track\");r.track=i.track,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)})),t.stream.getTracks().forEach((i=>{let n;n=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===i.id)):{track:i};const r=new Event(\"track\");r.track=i,r.receiver=n,r.transceiver={receiver:n},r.streams=[t.stream],this.dispatchEvent(r)}))},this.addEventListener(\"addstream\",this._ontrackpoly)),t.apply(this,arguments)}}else $n(e,\"track\",(e=>(e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e)))}function qh(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){const t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const i=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){let r=i.apply(this,arguments);return r||(r=t(this,e),this._senders.push(r)),r};const n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){n.apply(this,arguments);const t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach((e=>{this._senders.push(t(this,e))}))};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],n.apply(this,[e]),e.getTracks().forEach((e=>{const t=this._senders.find((t=>t.track===e));t&&this._senders.splice(this._senders.indexOf(t),1)}))}}else if(\"object\"==typeof e&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function zh(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,i,n]=arguments;if(arguments.length>0&&\"function\"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||\"function\"!=typeof e))return t.apply(this,[]);const r=function(e){const t={};return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t[i.id]=i})),t},o=function(e){return new Map(Object.keys(e).map((t=>[t,e[t]])))};if(arguments.length>=2){const n=function(e){i(o(r(e)))};return t.apply(this,[n,e])}return new Gh(((e,i)=>{t.apply(this,[function(t){e(o(r(t)))},i])})).then(i,n)}}function Jh(e){if(!(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!(\"getStats\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>ar(t,e.track,!0)))}}if(!(\"getStats\"in e.RTCRtpReceiver.prototype)){const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),$n(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){const e=this;return this._pc.getStats().then((t=>ar(t,e.track,!1)))}}if(!(\"getStats\"in e.RTCRtpSender.prototype)||!(\"getStats\"in e.RTCRtpReceiver.prototype))return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){const e=arguments[0];let t,i,n;return this.getSenders().forEach((i=>{i.track===e&&(t?n=!0:t=i)})),this.getReceivers().forEach((t=>(t.track===e&&(i?n=!0:i=t),t.track===e))),n||t&&i?Gh.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):t?t.getStats():i?i.getStats():Gh.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return t.apply(this,arguments)}}function Xh(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map((e=>this._shimmedLocalStreams[e][0]))};const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,i){if(!i)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const n=t.apply(this,arguments);return this._shimmedLocalStreams[i.id]?-1===this._shimmedLocalStreams[i.id].indexOf(n)&&this._shimmedLocalStreams[i.id].push(n):this._shimmedLocalStreams[i.id]=[i,n],n};const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach((e=>{const t=this.getSenders().find((t=>t.track===e));if(t)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}));const t=this.getSenders();i.apply(this,arguments);const n=this.getSenders().filter((e=>-1===t.indexOf(e)));this._shimmedLocalStreams[e.id]=[e].concat(n)};const n=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],n.apply(this,arguments)};const r=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach((t=>{const i=this._shimmedLocalStreams[t].indexOf(e);-1!==i&&this._shimmedLocalStreams[t].splice(i,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]})),r.apply(this,arguments)}}function Qh(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return Xh(e);const i=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){const e=i.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map((e=>this._reverseStreams[e.id]))};const n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach((e=>{const t=this.getSenders().find((t=>t.track===e));if(t)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")})),!this._reverseStreams[t.id]){const i=new e.MediaStream(t.getTracks());this._streams[t.id]=i,this._reverseStreams[i.id]=t,t=i}n.apply(this,[t])};const r=e.RTCPeerConnection.prototype.removeStream;function o(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(r.id,\"g\"),n.id)})),new RTCSessionDescription({type:t.type,sdp:i})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},r.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,i){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");const n=[].slice.call(arguments,1);if(1!==n.length||!n[0].getTracks().find((e=>e===t)))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");const r=this.getSenders().find((e=>e.track===t));if(r)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const o=this._streams[i.id];if(o)o.addTrack(t),Gh.resolve().then((()=>{this.dispatchEvent(new Event(\"negotiationneeded\"))}));else{const n=new e.MediaStream([t]);this._streams[i.id]=n,this._reverseStreams[n.id]=i,this.addStream(n)}return this.getSenders().find((e=>e.track===t))},[\"createOffer\",\"createAnswer\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){const e=arguments;return arguments.length&&\"function\"==typeof arguments[0]?i.apply(this,[t=>{const i=o(this,t);e[0].apply(null,[i])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):i.apply(this,arguments).then((e=>o(this,e)))}};e.RTCPeerConnection.prototype[t]=n[t]}));const s=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{const n=e._reverseStreams[t],r=e._streams[n.id];i=i.replace(new RegExp(n.id,\"g\"),r.id)})),new RTCSessionDescription({type:t.type,sdp:i})}(this,arguments[0]),s.apply(this,arguments)):s.apply(this,arguments)};const a=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get(){const e=a.get.apply(this);return\"\"===e.type?e:o(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===this))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach((i=>{this._streams[i].getTracks().find((t=>e.track===t))&&(t=this._streams[i])})),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event(\"negotiationneeded\")))}}function Zh(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}))}function $h(e,t){$n(e,\"negotiationneeded\",(e=>{const i=e.target;if(!(t.version<72||i.getConfiguration&&\"plan-b\"===i.getConfiguration().sdpSemantics)||\"stable\"===i.signalingState)return e}))}var ep=Object.freeze({__proto__:null,fixNegotiationNeeded:$h,shimAddTrackRemoveTrack:Qh,shimAddTrackRemoveTrackWithNative:Xh,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(\"function\"==typeof t?e.navigator.mediaDevices.getDisplayMedia=function(i){return t(i).then((t=>{const n=i.video&&i.video.width,r=i.video&&i.video.height,o=i.video&&i.video.frameRate;return i.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:t,maxFrameRate:o||3}},n&&(i.video.mandatory.maxWidth=n),r&&(i.video.mandatory.maxHeight=r),e.navigator.mediaDevices.getUserMedia(i)}))}:console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"))},shimGetSendersWithDtmf:qh,shimGetStats:zh,shimGetUserMedia:Hh,shimMediaStream:Kh,shimOnTrack:Yh,shimPeerConnection:Zh,shimSenderReceiverGetStats:Jh});function tp(e,t){const i=e&&e.navigator,n=e&&e.MediaStreamTrack;if(i.getUserMedia=function(e,t,n){nr(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),i.mediaDevices.getUserMedia(e).then(t,n)},!(t.version>55&&\"autoGainControl\"in i.mediaDevices.getSupportedConstraints())){const e=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])},t=i.mediaDevices.getUserMedia.bind(i.mediaDevices);if(i.mediaDevices.getUserMedia=function(i){return\"object\"==typeof i&&\"object\"==typeof i.audio&&(i=JSON.parse(JSON.stringify(i)),e(i.audio,\"autoGainControl\",\"mozAutoGainControl\"),e(i.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),t(i)},n&&n.prototype.getSettings){const t=n.prototype.getSettings;n.prototype.getSettings=function(){const i=t.apply(this,arguments);return e(i,\"mozAutoGainControl\",\"autoGainControl\"),e(i,\"mozNoiseSuppression\",\"noiseSuppression\"),i}}if(n&&n.prototype.applyConstraints){const t=n.prototype.applyConstraints;n.prototype.applyConstraints=function(i){return\"audio\"===this.kind&&\"object\"==typeof i&&(i=JSON.parse(JSON.stringify(i)),e(i,\"autoGainControl\",\"mozAutoGainControl\"),e(i,\"noiseSuppression\",\"mozNoiseSuppression\")),t.apply(this,[i])}}}}function ip(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function np(e,t){if(\"object\"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],n={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=n[t]}));const i={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},n=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,r,o]=arguments;return n.apply(this,[e||null]).then((e=>{if(t.version<53&&!r)try{e.forEach((e=>{e.type=i[e.type]||e.type}))}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(((t,n)=>{e.set(n,Object.assign({},t,{type:i[t.type]||t.type}))}))}return e})).then(r,o)}}function rp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)return;const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Gh.resolve(new Map)}}function op(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpReceiver.prototype)return;const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),$n(e,\"track\",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function sp(e){e.RTCPeerConnection&&!(\"removeStream\"in e.RTCPeerConnection.prototype)&&(e.RTCPeerConnection.prototype.removeStream=function(e){nr(\"removeStream\",\"removeTrack\"),this.getSenders().forEach((t=>{var i;t.track&&Dn(i=e.getTracks()).call(i,t.track)&&this.removeTrack(t)}))})}function ap(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function cp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];let e=arguments[1]&&arguments[1].sendEncodings;void 0===e&&(e=[]),e=[...e];const i=e.length>0;i&&e.forEach((e=>{if(\"rid\"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError(\"Invalid RID value provided.\")}if(\"scaleResolutionDownBy\"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");if(\"maxFramerate\"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError(\"max_framerate must be >= 0.0\")}));const n=t.apply(this,arguments);if(i){const{sender:t}=n,i=t.getParameters();(!(\"encodings\"in i)||1===i.encodings.length&&0===Object.keys(i.encodings[0]).length)&&(i.encodings=e,t.sendEncodings=e,this.setParametersPromises.push(t.setParameters(i).then((()=>{delete t.sendEncodings})).catch((()=>{delete t.sendEncodings}))))}return n})}function dp(e){if(\"object\"!=typeof e||!e.RTCRtpSender)return;const t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){const e=t.apply(this,arguments);return\"encodings\"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function lp(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Gh.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}function up(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Gh.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}var hp=Object.freeze({__proto__:null,shimAddTransceiver:cp,shimCreateAnswer:up,shimCreateOffer:lp,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(i){if(!i||!i.video){const e=new DOMException(\"getDisplayMedia without video constraints is undefined\");return e.name=\"NotFoundError\",e.code=8,Gh.reject(e)}return!0===i.video?i.video={mediaSource:t}:i.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(i)})},shimGetParameters:dp,shimGetUserMedia:tp,shimOnTrack:ip,shimPeerConnection:np,shimRTCDataChannel:ap,shimReceiverGetStats:op,shimRemoveStream:sp,shimSenderGetStats:rp});function pp(e){if(\"object\"==typeof e&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!(\"addStream\"in e.RTCPeerConnection.prototype)){const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){var i;this._localStreams||(this._localStreams=[]),Dn(i=this._localStreams).call(i,e)||this._localStreams.push(e),e.getAudioTracks().forEach((i=>t.call(this,i,e))),e.getVideoTracks().forEach((i=>t.call(this,i,e)))},e.RTCPeerConnection.prototype.addTrack=function(e){for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];return n&&n.forEach((e=>{var t;this._localStreams?Dn(t=this._localStreams).call(t,e)||this._localStreams.push(e):this._localStreams=[e]})),t.apply(this,arguments)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);const t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);const i=e.getTracks();this.getSenders().forEach((e=>{Dn(i).call(i,e.track)&&this.removeTrack(e)}))})}}function _p(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=e=>{e.streams.forEach((e=>{var t;if(this._remoteStreams||(this._remoteStreams=[]),Dn(t=this._remoteStreams).call(t,e))return;this._remoteStreams.push(e);const i=new Event(\"addstream\");i.stream=e,this.dispatchEvent(i)}))})}});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){const e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach((t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);const i=new Event(\"addstream\");i.stream=t,e.dispatchEvent(i)}))}),t.apply(e,arguments)}}}function Ep(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype,i=t.createOffer,n=t.createAnswer,r=t.setLocalDescription,o=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){const n=arguments.length>=2?arguments[2]:arguments[0],r=i.apply(this,[n]);return t?(r.then(e,t),Gh.resolve()):r},t.createAnswer=function(e,t){const i=arguments.length>=2?arguments[2]:arguments[0],r=n.apply(this,[i]);return t?(r.then(e,t),Gh.resolve()):r};let a=function(e,t,i){const n=r.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n};t.setLocalDescription=a,a=function(e,t,i){const n=o.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n},t.setRemoteDescription=a,a=function(e,t,i){const n=s.apply(this,[e]);return i?(n.then(t,i),Gh.resolve()):n},t.addIceCandidate=a}function mp(e){const t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){const e=t.mediaDevices,i=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>i(fp(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,i,n){t.mediaDevices.getUserMedia(e).then(i,n)}.bind(t))}function fp(e){return e&&void 0!==e.video?Object.assign({},e,{video:or(e.video)}):e}function Tp(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,i){if(e&&e.iceServers){const t=[];for(let i=0;i<e.iceServers.length;i++){let n=e.iceServers[i];!n.hasOwnProperty(\"urls\")&&n.hasOwnProperty(\"url\")?(nr(\"RTCIceServer.url\",\"RTCIceServer.urls\"),n=JSON.parse(JSON.stringify(n)),n.urls=n.url,delete n.url,t.push(n)):t.push(e.iceServers[i])}e.iceServers=t}return new t(e,i)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in t&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:()=>t.generateCertificate})}function Sp(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function gp(e){const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);const t=this.getTransceivers().find((e=>\"audio\"===e.receiver.track.kind));!1===e.offerToReceiveAudio&&t?\"sendrecv\"===t.direction?t.setDirection?t.setDirection(\"sendonly\"):t.direction=\"sendonly\":\"recvonly\"===t.direction&&(t.setDirection?t.setDirection(\"inactive\"):t.direction=\"inactive\"):!0!==e.offerToReceiveAudio||t||this.addTransceiver(\"audio\",{direction:\"recvonly\"}),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);const i=this.getTransceivers().find((e=>\"video\"===e.receiver.track.kind));!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection?i.setDirection(\"sendonly\"):i.direction=\"sendonly\":\"recvonly\"===i.direction&&(i.setDirection?i.setDirection(\"inactive\"):i.direction=\"inactive\"):!0!==e.offerToReceiveVideo||i||this.addTransceiver(\"video\",{direction:\"recvonly\"})}return t.apply(this,arguments)}}function Rp(e){\"object\"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}var Cp=Object.freeze({__proto__:null,shimAudioContext:Rp,shimCallbacksAPI:Ep,shimConstraints:fp,shimCreateOfferLegacy:gp,shimGetUserMedia:mp,shimLocalStreamsAPI:pp,shimRTCIceServerUrls:Tp,shimRemoteStreamsAPI:_p,shimTrackEventTransceiver:Sp}),Ip=\"\\t\\n\\v\\f\\r Â áââââââââââââ¯âã\\u2028\\u2029\\ufeff\",vp=J,yp=mn,Ap=Ip,bp=d(\"\".replace),wp=RegExp(\"^[\"+Ap+\"]+\"),Op=RegExp(\"(^|[^\"+Ap+\"])[\"+Ap+\"]+$\"),Np=function(e){return function(t){var i=yp(vp(t));return 1&e&&(i=bp(i,wp,\"\")),2&e&&(i=bp(i,Op,\"$1\")),i}},Dp={start:Np(1),end:Np(2),trim:Np(3)},Pp=la.PROPER,Lp=n,kp=Ip,Mp=Dp.trim;wi({target:\"String\",proto:!0,forced:function(e){return Lp((function(){return!!kp[e]()||\"âÂá \"!==\"âÂá \"[e]()||Pp&&kp[e].name!==e}))}(\"trim\")},{trim:function(){return Mp(this)}});var Up=Xi(\"String\").trim,xp=l,Vp=Up,Fp=String.prototype,Bp=function(e){var t=e.trim;return\"string\"==typeof e||e===Fp||xp(Fp,e)&&t===Fp.trim?Vp:t},jp=i(Bp),Gp={exports:{}};!function(e){const t={generateIdentifier:function(){return Math.random().toString(36).substring(2,12)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return e.trim().split(\"\\n\").map((e=>e.trim()))},t.splitSections=function(e){return e.split(\"\\nm=\").map(((e,t)=>(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"))},t.getDescription=function(e){const i=t.splitSections(e);return i&&i[0]},t.getMediaSections=function(e){const i=t.splitSections(e);return i.shift(),i},t.matchPrefix=function(e,i){return t.splitLines(e).filter((e=>0===e.indexOf(i)))},t.parseCandidate=function(e){let t;t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \");const i={foundation:t[0],component:{1:\"rtp\",2:\"rtcp\"}[t[1]]||t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]};for(let e=8;e<t.length;e+=2)switch(t[e]){case\"raddr\":i.relatedAddress=t[e+1];break;case\"rport\":i.relatedPort=parseInt(t[e+1],10);break;case\"tcptype\":i.tcpType=t[e+1];break;case\"ufrag\":i.ufrag=t[e+1],i.usernameFragment=t[e+1];break;default:void 0===i[t[e]]&&(i[t[e]]=t[e+1])}return i},t.writeCandidate=function(e){const t=[];t.push(e.foundation);const i=e.component;\"rtp\"===i?t.push(1):\"rtcp\"===i?t.push(2):t.push(i),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);const n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},t.parseIceOptions=function(e){return e.substring(14).split(\" \")},t.parseRtpMap=function(e){let t=e.substring(9).split(\" \");const i={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),i.name=t[0],i.clockRate=parseInt(t[1],10),i.channels=3===t.length?parseInt(t[2],10):1,i.numChannels=i.channels,i},t.writeRtpMap=function(e){let t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);const i=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==i?\"/\"+i:\"\")+\"\\r\\n\"},t.parseExtmap=function(e){const t=e.substring(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1],attributes:t.slice(2).join(\" \")}},t.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+(e.attributes?\" \"+e.attributes:\"\")+\"\\r\\n\"},t.parseFmtp=function(e){const t={};let i;const n=e.substring(e.indexOf(\" \")+1).split(\";\");for(let e=0;e<n.length;e++)i=n[e].trim().split(\"=\"),t[i[0].trim()]=i[1];return t},t.writeFmtp=function(e){let t=\"\",i=e.payloadType;if(void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){const n=[];Object.keys(e.parameters).forEach((t=>{void 0!==e.parameters[t]?n.push(t+\"=\"+e.parameters[t]):n.push(t)})),t+=\"a=fmtp:\"+i+\" \"+n.join(\";\")+\"\\r\\n\"}return t},t.parseRtcpFb=function(e){const t=e.substring(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},t.writeRtcpFb=function(e){let t=\"\",i=e.payloadType;return void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((e=>{t+=\"a=rtcp-fb:\"+i+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"})),t},t.parseSsrcMedia=function(e){const t=e.indexOf(\" \"),i={ssrc:parseInt(e.substring(7,t),10)},n=e.indexOf(\":\",t);return n>-1?(i.attribute=e.substring(t+1,n),i.value=e.substring(n+1)):i.attribute=e.substring(t+1),i},t.parseSsrcGroup=function(e){const t=e.substring(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map((e=>parseInt(e,10)))}},t.getMid=function(e){const i=t.matchPrefix(e,\"a=mid:\")[0];if(i)return i.substring(6)},t.parseFingerprint=function(e){const t=e.substring(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1].toUpperCase()}},t.getDtlsParameters=function(e,i){return{role:\"auto\",fingerprints:t.matchPrefix(e+i,\"a=fingerprint:\").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){let i=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach((e=>{i+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"})),i},t.parseCryptoLine=function(e){const t=e.substring(9).split(\" \");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},t.writeCryptoLine=function(e){return\"a=crypto:\"+e.tag+\" \"+e.cryptoSuite+\" \"+(\"object\"==typeof e.keyParams?t.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?\" \"+e.sessionParams.join(\" \"):\"\")+\"\\r\\n\"},t.parseCryptoKeyParams=function(e){if(0!==e.indexOf(\"inline:\"))return null;const t=e.substring(7).split(\"|\");return{keyMethod:\"inline\",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(\":\")[0]:void 0,mkiLength:t[2]?t[2].split(\":\")[1]:void 0}},t.writeCryptoKeyParams=function(e){return e.keyMethod+\":\"+e.keySalt+(e.lifeTime?\"|\"+e.lifeTime:\"\")+(e.mkiValue&&e.mkiLength?\"|\"+e.mkiValue+\":\"+e.mkiLength:\"\")},t.getCryptoParameters=function(e,i){return t.matchPrefix(e+i,\"a=crypto:\").map(t.parseCryptoLine)},t.getIceParameters=function(e,i){const n=t.matchPrefix(e+i,\"a=ice-ufrag:\")[0],r=t.matchPrefix(e+i,\"a=ice-pwd:\")[0];return n&&r?{usernameFragment:n.substring(12),password:r.substring(10)}:null},t.writeIceParameters=function(e){let t=\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\";return e.iceLite&&(t+=\"a=ice-lite\\r\\n\"),t},t.parseRtpParameters=function(e){const i={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=t.splitLines(e)[0].split(\" \");i.profile=n[2];for(let r=3;r<n.length;r++){const o=n[r],s=t.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(s){const n=t.parseRtpMap(s),r=t.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(n.parameters=r.length?t.parseFmtp(r[0]):{},n.rtcpFeedback=t.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(t.parseRtcpFb),i.codecs.push(n),n.name.toUpperCase()){case\"RED\":case\"ULPFEC\":i.fecMechanisms.push(n.name.toUpperCase())}}}t.matchPrefix(e,\"a=extmap:\").forEach((e=>{i.headerExtensions.push(t.parseExtmap(e))}));const r=t.matchPrefix(e,\"a=rtcp-fb:* \").map(t.parseRtcpFb);return i.codecs.forEach((e=>{r.forEach((t=>{e.rtcpFeedback.find((e=>e.type===t.type&&e.parameter===t.parameter))||e.rtcpFeedback.push(t)}))})),i},t.writeRtpDescription=function(e,i){let n=\"\";n+=\"m=\"+e+\" \",n+=i.codecs.length>0?\"9\":\"0\",n+=\" \"+(i.profile||\"UDP/TLS/RTP/SAVPF\")+\" \",n+=i.codecs.map((e=>void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType)).join(\" \")+\"\\r\\n\",n+=\"c=IN IP4 0.0.0.0\\r\\n\",n+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",i.codecs.forEach((e=>{n+=t.writeRtpMap(e),n+=t.writeFmtp(e),n+=t.writeRtcpFb(e)}));let r=0;return i.codecs.forEach((e=>{e.maxptime>r&&(r=e.maxptime)})),r>0&&(n+=\"a=maxptime:\"+r+\"\\r\\n\"),i.headerExtensions&&i.headerExtensions.forEach((e=>{n+=t.writeExtmap(e)})),n},t.parseRtpEncodingParameters=function(e){const i=[],n=t.parseRtpParameters(e),r=-1!==n.fecMechanisms.indexOf(\"RED\"),o=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),s=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute)),a=s.length>0&&s[0].ssrc;let c;const d=t.matchPrefix(e,\"a=ssrc-group:FID\").map((e=>e.substring(17).split(\" \").map((e=>parseInt(e,10)))));d.length>0&&d[0].length>1&&d[0][0]===a&&(c=d[0][1]),n.codecs.forEach((e=>{if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){let t={ssrc:a,codecPayloadType:parseInt(e.parameters.apt,10)};a&&c&&(t.rtx={ssrc:c}),i.push(t),r&&(t=JSON.parse(JSON.stringify(t)),t.fec={ssrc:a,mechanism:o?\"red+ulpfec\":\"red\"},i.push(t))}})),0===i.length&&a&&i.push({ssrc:a});let l=t.matchPrefix(e,\"b=\");return l.length&&(l=0===l[0].indexOf(\"b=TIAS:\")?parseInt(l[0].substring(7),10):0===l[0].indexOf(\"b=AS:\")?1e3*parseInt(l[0].substring(5),10)*.95-16e3:void 0,i.forEach((e=>{e.maxBitrate=l}))),i},t.parseRtcpParameters=function(e){const i={},n=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"cname\"===e.attribute))[0];n&&(i.cname=n.value,i.ssrc=n.ssrc);const r=t.matchPrefix(e,\"a=rtcp-rsize\");i.reducedSize=r.length>0,i.compound=0===r.length;const o=t.matchPrefix(e,\"a=rtcp-mux\");return i.mux=o.length>0,i},t.writeRtcpParameters=function(e){let t=\"\";return e.reducedSize&&(t+=\"a=rtcp-rsize\\r\\n\"),e.mux&&(t+=\"a=rtcp-mux\\r\\n\"),void 0!==e.ssrc&&e.cname&&(t+=\"a=ssrc:\"+e.ssrc+\" cname:\"+e.cname+\"\\r\\n\"),t},t.parseMsid=function(e){let i;const n=t.matchPrefix(e,\"a=msid:\");if(1===n.length)return i=n[0].substring(7).split(\" \"),{stream:i[0],track:i[1]};const r=t.matchPrefix(e,\"a=ssrc:\").map((e=>t.parseSsrcMedia(e))).filter((e=>\"msid\"===e.attribute));return r.length>0?(i=r[0].value.split(\" \"),{stream:i[0],track:i[1]}):void 0},t.parseSctpDescription=function(e){const i=t.parseMLine(e),n=t.matchPrefix(e,\"a=max-message-size:\");let r;n.length>0&&(r=parseInt(n[0].substring(19),10)),isNaN(r)&&(r=65536);const o=t.matchPrefix(e,\"a=sctp-port:\");if(o.length>0)return{port:parseInt(o[0].substring(12),10),protocol:i.fmt,maxMessageSize:r};const s=t.matchPrefix(e,\"a=sctpmap:\");if(s.length>0){const e=s[0].substring(10).split(\" \");return{port:parseInt(e[0],10),protocol:e[1],maxMessageSize:r}}},t.writeSctpDescription=function(e,t){let i=[];return i=\"DTLS/SCTP\"!==e.protocol?[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.protocol+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctp-port:\"+t.port+\"\\r\\n\"]:[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.port+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctpmap:\"+t.port+\" \"+t.protocol+\" 65535\\r\\n\"],void 0!==t.maxMessageSize&&i.push(\"a=max-message-size:\"+t.maxMessageSize+\"\\r\\n\"),i.join(\"\")},t.generateSessionId=function(){return Math.random().toString().substr(2,22)},t.writeSessionBoilerplate=function(e,i,n){let r;const o=void 0!==i?i:2;r=e||t.generateSessionId();return\"v=0\\r\\no=\"+(n||\"thisisadapterortc\")+\" \"+r+\" \"+o+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},t.getDirection=function(e,i){const n=t.splitLines(e);for(let e=0;e<n.length;e++)switch(n[e]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return n[e].substring(2)}return i?t.getDirection(i):\"sendrecv\"},t.getKind=function(e){return t.splitLines(e)[0].split(\" \")[0].substring(2)},t.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},t.parseMLine=function(e){const i=t.splitLines(e)[0].substring(2).split(\" \");return{kind:i[0],port:parseInt(i[1],10),protocol:i[2],fmt:i.slice(3).join(\" \")}},t.parseOLine=function(e){const i=t.matchPrefix(e,\"o=\")[0].substring(2).split(\" \");return{username:i[0],sessionId:i[1],sessionVersion:parseInt(i[2],10),netType:i[3],addressType:i[4],address:i[5]}},t.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;const i=t.splitLines(e);for(let e=0;e<i.length;e++)if(i[e].length<2||\"=\"!==i[e].charAt(1))return!1;return!0},e.exports=t}(Gp);var Wp=Gp.exports,Hp=i(Wp),Kp=e({__proto__:null,default:Hp},[Wp]);function Yp(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)return;const t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if(\"object\"==typeof e&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){const i=new t(e),n=Hp.parseCandidate(e.candidate),r=Object.assign(i,n);return r.toJSON=function(){return{candidate:r.candidate,sdpMid:r.sdpMid,sdpMLineIndex:r.sdpMLineIndex,usernameFragment:r.usernameFragment}},r}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,$n(e,\"icecandidate\",(t=>(t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t)))}function qp(e){!e.RTCIceCandidate||e.RTCIceCandidate&&\"relayProtocol\"in e.RTCIceCandidate.prototype||$n(e,\"icecandidate\",(e=>{if(e.candidate){const t=Hp.parseCandidate(e.candidate.candidate);\"relay\"===t.type&&(e.candidate.relayProtocol={0:\"tls\",1:\"tcp\",2:\"udp\"}[t.priority>>24])}return e}))}function zp(e,t){if(!e.RTCPeerConnection)return;\"sctp\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp}});const i=function(e){if(!e||!e.sdp)return!1;const t=Hp.splitSections(e.sdp);return t.shift(),t.some((e=>{const t=Hp.parseMLine(e);return t&&\"application\"===t.kind&&-1!==t.protocol.indexOf(\"SCTP\")}))},n=function(e){const t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;const i=parseInt(t[1],10);return i!=i?-1:i},r=function(e){let i=65536;return\"firefox\"===t.browser&&(i=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),i},o=function(e,i){let n=65536;\"firefox\"===t.browser&&57===t.version&&(n=65535);const r=Hp.matchPrefix(e.sdp,\"a=max-message-size:\");return r.length>0?n=parseInt(r[0].substr(19),10):\"firefox\"===t.browser&&-1!==i&&(n=2147483637),n},s=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,\"chrome\"===t.browser&&t.version>=76){const{sdpSemantics:e}=this.getConfiguration();\"plan-b\"===e&&Object.defineProperty(this,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(i(arguments[0])){const e=n(arguments[0]),t=r(e),i=o(arguments[0],e);let s;s=0===t&&0===i?Number.POSITIVE_INFINITY:0===t||0===i?Math.max(t,i):Math.min(t,i);const a={};Object.defineProperty(a,\"maxMessageSize\",{get:()=>s}),this._sctp=a}return s.apply(this,arguments)}}function Jp(e){if(!e.RTCPeerConnection||!(\"createDataChannel\"in e.RTCPeerConnection.prototype))return;function t(e,t){const i=e.send;e.send=function(){const n=arguments[0],r=n.length||n.size||n.byteLength;if(\"open\"===e.readyState&&t.sctp&&r>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return i.apply(e,arguments)}}const i=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){const e=i.apply(this,arguments);return t(e,this),e},$n(e,\"datachannel\",(e=>(t(e.channel,e.target),e)))}function Xp(e){if(!e.RTCPeerConnection||\"connectionState\"in e.RTCPeerConnection.prototype)return;const t=e.RTCPeerConnection.prototype;Object.defineProperty(t,\"connectionState\",{get(){return{completed:\"connected\",checking:\"connecting\"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"onconnectionstatechange\",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener(\"connectionstatechange\",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener(\"connectionstatechange\",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),[\"setLocalDescription\",\"setRemoteDescription\"].forEach((e=>{const i=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;const i=new Event(\"connectionstatechange\",e);t.dispatchEvent(i)}return e},this.addEventListener(\"iceconnectionstatechange\",this._connectionstatechangepoly)),i.apply(this,arguments)}}))}function Qp(e,t){if(!e.RTCPeerConnection)return;if(\"chrome\"===t.browser&&t.version>=71)return;if(\"safari\"===t.browser&&t.version>=605)return;const i=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf(\"\\na=extmap-allow-mixed\")){const i=t.sdp.split(\"\\n\").filter((e=>\"a=extmap-allow-mixed\"!==jp(e).call(e))).join(\"\\n\");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:i}):t.sdp=i}return i.apply(this,arguments)}}function Zp(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.addIceCandidate;i&&0!==i.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?(\"chrome\"===t.browser&&t.version<78||\"firefox\"===t.browser&&t.version<68||\"safari\"===t.browser)&&arguments[0]&&\"\"===arguments[0].candidate?Gh.resolve():i.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Gh.resolve())})}function $p(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.setLocalDescription;i&&0!==i.length&&(e.RTCPeerConnection.prototype.setLocalDescription=function(){let e=arguments[0]||{};if(\"object\"!=typeof e||e.type&&e.sdp)return i.apply(this,arguments);if(e={type:e.type,sdp:e.sdp},!e.type)switch(this.signalingState){case\"stable\":case\"have-local-offer\":case\"have-remote-pranswer\":e.type=\"offer\";break;default:e.type=\"answer\"}if(e.sdp||\"offer\"!==e.type&&\"answer\"!==e.type)return i.apply(this,[e]);return(\"offer\"===e.type?this.createOffer:this.createAnswer).apply(this).then((e=>i.apply(this,[e])))})}var e_=Object.freeze({__proto__:null,removeExtmapAllowMixed:Qp,shimAddIceCandidateNullOrEmpty:Zp,shimConnectionState:Xp,shimMaxMessageSize:zp,shimParameterlessSetLocalDescription:$p,shimRTCIceCandidate:Yp,shimRTCIceCandidateRelayProtocol:qp,shimSendThrowTypeError:Jp});!function(){let{window:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shimChrome:!0,shimFirefox:!0,shimSafari:!0};const i=ir,n=function(e){const t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser=\"Not a browser.\",t;const{navigator:i}=e;if(i.mozGetUserMedia)t.browser=\"firefox\",t.version=Zn(i.userAgent,/Firefox\\/(\\d+)\\./,1);else if(i.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection)t.browser=\"chrome\",t.version=Zn(i.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else{if(!e.RTCPeerConnection||!i.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return t.browser=\"Not a supported browser.\",t;t.browser=\"safari\",t.version=Zn(i.userAgent,/AppleWebKit\\/(\\d+)\\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&\"currentDirection\"in e.RTCRtpTransceiver.prototype}return t}(e),r={browserDetails:n,commonShim:e_,extractVersion:Zn,disableLog:er,disableWarnings:tr,sdp:Kp};switch(n.browser){case\"chrome\":if(!ep||!Zh||!t.shimChrome)return i(\"Chrome shim is not included in this adapter release.\"),r;if(null===n.version)return i(\"Chrome shim can not determine version, not shimming.\"),r;i(\"adapter.js shimming chrome.\"),r.browserShim=ep,Zp(e,n),$p(e),Hh(e,n),Kh(e),Zh(e,n),Yh(e),Qh(e,n),qh(e),zh(e),Jh(e),$h(e,n),Yp(e),qp(e),Xp(e),zp(e,n),Jp(e),Qp(e,n);break;case\"firefox\":if(!hp||!np||!t.shimFirefox)return i(\"Firefox shim is not included in this adapter release.\"),r;i(\"adapter.js shimming firefox.\"),r.browserShim=hp,Zp(e,n),$p(e),tp(e,n),np(e,n),ip(e),sp(e),rp(e),op(e),ap(e),cp(e),dp(e),lp(e),up(e),Yp(e),Xp(e),zp(e,n),Jp(e);break;case\"safari\":if(!Cp||!t.shimSafari)return i(\"Safari shim is not included in this adapter release.\"),r;i(\"adapter.js shimming safari.\"),r.browserShim=Cp,Zp(e,n),$p(e),Tp(e),gp(e),Ep(e),pp(e),_p(e),Sp(e),mp(e),Rp(e),Yp(e),qp(e),zp(e,n),Jp(e),Qp(e,n);break;default:i(\"Unsupported browser!\")}}({window:\"undefined\"==typeof window?void 0:window});var t_=Xi(\"Array\").keys,i_=pn,n_=Ze,r_=l,o_=t_,s_=Array.prototype,a_={DOMTokenList:!0,NodeList:!0},c_=function(e){var t=e.keys;return e===s_||r_(s_,e)&&t===s_.keys||n_(a_,i_(e))?o_:t},d_=i(c_),l_=be,u_=TypeError,h_=Ct,p_=Qt,__=B,E_=function(e,t,i){var n=h_(t);n in e?p_.f(e,n,__(0,i)):e[n]=i},m_=xi,f_=Gi,T_=E_,S_=Array,g_=Math.max,R_=function(e,t,i){for(var n=f_(e),r=m_(t,n),o=m_(void 0===i?n:i,n),s=S_(g_(o-r,0)),a=0;r<o;r++,a++)T_(s,a,e[r]);return s.length=a,s},C_=R_,I_=Math.floor,v_=function(e,t){var i=e.length,n=I_(i/2);return i<8?y_(e,t):A_(e,v_(C_(e,0,n),t),v_(C_(e,n),t),t)},y_=function(e,t){for(var i,n,r=e.length,o=1;o<r;){for(n=o,i=e[o];n&&t(e[n-1],i)>0;)e[n]=e[--n];n!==o++&&(e[n]=i)}return e},A_=function(e,t,i,n){for(var r=t.length,o=i.length,s=0,a=0;s<r||a<o;)e[s+a]=s<r&&a<o?n(t[s],i[a])<=0?t[s++]:i[a++]:s<r?t[s++]:i[a++];return e},b_=v_,w_=ce.match(/firefox\\/(\\d+)/i),O_=!!w_&&+w_[1],N_=/MSIE|Trident/.test(ce),D_=ce.match(/AppleWebKit\\/(\\d+)\\./),P_=!!D_&&+D_[1],L_=wi,k_=d,M_=De,U_=Je,x_=Gi,V_=function(e,t){if(!delete e[t])throw u_(\"Cannot delete property \"+l_(t)+\" of \"+l_(e))},F_=mn,B_=n,j_=b_,G_=Bn,W_=O_,H_=N_,K_=Ee,Y_=P_,q_=[],z_=k_(q_.sort),J_=k_(q_.push),X_=B_((function(){q_.sort(void 0)})),Q_=B_((function(){q_.sort(null)})),Z_=G_(\"sort\"),$_=!B_((function(){if(K_)return K_<70;if(!(W_&&W_>3)){if(H_)return!0;if(Y_)return Y_<603;var e,t,i,n,r=\"\";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:i=3;break;case 68:case 71:i=4;break;default:i=2}for(n=0;n<47;n++)q_.push({k:t+n,v:i})}for(q_.sort((function(e,t){return t.v-e.v})),n=0;n<q_.length;n++)t=q_[n].k.charAt(0),r.charAt(r.length-1)!==t&&(r+=t);return\"DGBEFHACIJK\"!==r}}));L_({target:\"Array\",proto:!0,forced:X_||!Q_||!Z_||!$_},{sort:function(e){void 0!==e&&M_(e);var t=U_(this);if($_)return void 0===e?z_(t):z_(t,e);var i,n,r=[],o=x_(t);for(n=0;n<o;n++)n in t&&J_(r,t[n]);for(j_(r,function(e){return function(t,i){return void 0===i?-1:void 0===t?1:void 0!==e?+e(t,i)||0:F_(t)>F_(i)?1:-1}}(e)),i=x_(r),n=0;n<i;)t[n]=r[n++];for(;n<o;)V_(t,n++);return t}});var eE,tE,iE=Xi(\"Array\").sort,nE=l,rE=iE,oE=Array.prototype,sE=function(e){var t=e.sort;return e===oE||nE(oE,e)&&t===oE.sort?rE:t},aE=i(sE),cE={exports:{}};eE=cE,tE=cE.exports,function(e,t){var i=\"function\",n=\"undefined\",r=\"object\",o=\"string\",s=\"major\",a=\"model\",c=\"name\",d=\"type\",l=\"vendor\",u=\"version\",h=\"architecture\",p=\"console\",_=\"mobile\",E=\"tablet\",m=\"smarttv\",f=\"wearable\",T=\"embedded\",S=\"Amazon\",g=\"Apple\",R=\"ASUS\",C=\"BlackBerry\",I=\"Browser\",v=\"Chrome\",y=\"Firefox\",A=\"Google\",b=\"Huawei\",w=\"LG\",O=\"Microsoft\",N=\"Motorola\",D=\"Opera\",P=\"Samsung\",L=\"Sharp\",k=\"Sony\",M=\"Xiaomi\",U=\"Zebra\",x=\"Facebook\",V=\"Chromium OS\",F=\"Mac OS\",B=function(e){for(var t={},i=0;i<e.length;i++)t[e[i].toUpperCase()]=e[i];return t},j=function(e,t){return typeof e===o&&-1!==G(t).indexOf(G(e))},G=function(e){return e.toLowerCase()},W=function(e,t){if(typeof e===o)return e=e.replace(/^\\s\\s*/,\"\"),typeof t===n?e:e.substring(0,350)},H=function(e,n){for(var o,s,a,c,d,l,u=0;u<n.length&&!d;){var h=n[u],p=n[u+1];for(o=s=0;o<h.length&&!d&&h[o];)if(d=h[o++].exec(e))for(a=0;a<p.length;a++)l=d[++s],typeof(c=p[a])===r&&c.length>0?2===c.length?typeof c[1]==i?this[c[0]]=c[1].call(this,l):this[c[0]]=c[1]:3===c.length?typeof c[1]!==i||c[1].exec&&c[1].test?this[c[0]]=l?l.replace(c[1],c[2]):t:this[c[0]]=l?c[1].call(this,l,c[2]):t:4===c.length&&(this[c[0]]=l?c[3].call(this,l.replace(c[1],c[2])):t):this[c]=l||t;u+=2}},K=function(e,i){for(var n in i)if(typeof i[n]===r&&i[n].length>0){for(var o=0;o<i[n].length;o++)if(j(i[n][o],e))return\"?\"===n?t:n}else if(j(i[n],e))return\"?\"===n?t:n;return e},Y={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"},q={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[u,[c,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[u,[c,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[c,u],[/opios[\\/ ]+([\\w\\.]+)/i],[u,[c,D+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[u,[c,D]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[c,u],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[u,[c,\"UC\"+I]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[u,[c,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[u,[c,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[u,[c,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[u,[c,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[u,[c,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 Secure \"+I],u],[/\\bfocus\\/([\\w\\.]+)/i],[u,[c,y+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[u,[c,D+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[u,[c,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[u,[c,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[u,[c,D+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[u,[c,\"MIUI \"+I]],[/fxios\\/([-\\w\\.]+)/i],[u,[c,y]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[c,\"360 \"+I]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[c,/(.+)/,\"$1 \"+I],u],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[c,/_/g,\" \"],u],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[c,u],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[c],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[c,x],u],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[c,u],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[u,[c,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[u,[c,v+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[c,v+\" WebView\"],u],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[u,[c,\"Android \"+I]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[c,u],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[u,[c,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[u,c],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[c,[u,K,{\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"}]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[c,u],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[c,\"Netscape\"],u],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[u,[c,y+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[c,u],[/(cobalt)\\/([\\w\\.]+)/i],[c,[u,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,G]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[h,/ower/,\"\",G]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,G]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[a,[l,P],[d,E]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[a,[l,P],[d,_]],[/\\((ip(?:hone|od)[\\w ]*);/i],[a,[l,g],[d,_]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[a,[l,g],[d,E]],[/(macintosh);/i],[a,[l,g]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[a,[l,L],[d,_]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[a,[l,b],[d,E]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[a,[l,b],[d,_]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[a,/_/g,\" \"],[l,M],[d,_]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[a,/_/g,\" \"],[l,M],[d,E]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[a,[l,\"OPPO\"],[d,_]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[a,[l,\"Vivo\"],[d,_]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[a,[l,\"Realme\"],[d,_]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[a,[l,N],[d,_]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[a,[l,N],[d,E]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[a,[l,w],[d,E]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[a,[l,w],[d,_]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[a,[l,\"Lenovo\"],[d,E]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[a,/_/g,\" \"],[l,\"Nokia\"],[d,_]],[/(pixel c)\\b/i],[a,[l,A],[d,E]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[a,[l,A],[d,_]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[a,[l,k],[d,_]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[a,\"Xperia Tablet\"],[l,k],[d,E]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[a,[l,\"OnePlus\"],[d,_]],[/(alexa)webm/i,/(kf[a-z]{2}wi)( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[a,[l,S],[d,E]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[a,/(.+)/g,\"Fire Phone $1\"],[l,S],[d,_]],[/(playbook);[-\\w\\),; ]+(rim)/i],[a,l,[d,E]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[a,[l,C],[d,_]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[a,[l,R],[d,E]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[a,[l,R],[d,_]],[/(nexus 9)/i],[a,[l,\"HTC\"],[d,E]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[l,[a,/_/g,\" \"],[d,_]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[a,[l,\"Acer\"],[d,E]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[a,[l,\"Meizu\"],[d,_]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[l,a,[d,_]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[l,a,[d,E]],[/(surface duo)/i],[a,[l,O],[d,E]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[a,[l,\"Fairphone\"],[d,_]],[/(u304aa)/i],[a,[l,\"AT&T\"],[d,_]],[/\\bsie-(\\w*)/i],[a,[l,\"Siemens\"],[d,_]],[/\\b(rct\\w+) b/i],[a,[l,\"RCA\"],[d,E]],[/\\b(venue[\\d ]{2,7}) b/i],[a,[l,\"Dell\"],[d,E]],[/\\b(q(?:mv|ta)\\w+) b/i],[a,[l,\"Verizon\"],[d,E]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[a,[l,\"Barnes & Noble\"],[d,E]],[/\\b(tm\\d{3}\\w+) b/i],[a,[l,\"NuVision\"],[d,E]],[/\\b(k88) b/i],[a,[l,\"ZTE\"],[d,E]],[/\\b(nx\\d{3}j) b/i],[a,[l,\"ZTE\"],[d,_]],[/\\b(gen\\d{3}) b.+49h/i],[a,[l,\"Swiss\"],[d,_]],[/\\b(zur\\d{3}) b/i],[a,[l,\"Swiss\"],[d,E]],[/\\b((zeki)?tb.*\\b) b/i],[a,[l,\"Zeki\"],[d,E]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[l,\"Dragon Touch\"],a,[d,E]],[/\\b(ns-?\\w{0,9}) b/i],[a,[l,\"Insignia\"],[d,E]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[a,[l,\"NextBook\"],[d,E]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[l,\"Voice\"],a,[d,_]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[l,\"LvTel\"],a,[d,_]],[/\\b(ph-1) /i],[a,[l,\"Essential\"],[d,_]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[a,[l,\"Envizen\"],[d,E]],[/\\b(trio[-\\w\\. ]+) b/i],[a,[l,\"MachSpeed\"],[d,E]],[/\\btu_(1491) b/i],[a,[l,\"Rotor\"],[d,E]],[/(shield[\\w ]+) b/i],[a,[l,\"Nvidia\"],[d,E]],[/(sprint) (\\w+)/i],[l,a,[d,_]],[/(kin\\.[onetw]{3})/i],[[a,/\\./g,\" \"],[l,O],[d,_]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[a,[l,U],[d,E]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[a,[l,U],[d,_]],[/smart-tv.+(samsung)/i],[l,[d,m]],[/hbbtv.+maple;(\\d+)/i],[[a,/^/,\"SmartTV\"],[l,P],[d,m]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[l,w],[d,m]],[/(apple) ?tv/i],[l,[a,g+\" TV\"],[d,m]],[/crkey/i],[[a,v+\"cast\"],[l,A],[d,m]],[/droid.+aft(\\w)( bui|\\))/i],[a,[l,S],[d,m]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[a,[l,L],[d,m]],[/(bravia[\\w ]+)( bui|\\))/i],[a,[l,k],[d,m]],[/(mitv-\\w{5}) bui/i],[a,[l,M],[d,m]],[/Hbbtv.*(technisat) (.*);/i],[l,a,[d,m]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[l,W],[a,W],[d,m]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[d,m]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[l,a,[d,p]],[/droid.+; (shield) bui/i],[a,[l,\"Nvidia\"],[d,p]],[/(playstation [345portablevi]+)/i],[a,[l,k],[d,p]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[a,[l,O],[d,p]],[/((pebble))app/i],[l,a,[d,f]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[a,[l,g],[d,f]],[/droid.+; (glass) \\d/i],[a,[l,A],[d,f]],[/droid.+; (wt63?0{2,3})\\)/i],[a,[l,U],[d,f]],[/(quest( 2| pro)?)/i],[a,[l,x],[d,f]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[l,[d,T]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[a,[d,_]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[a,[d,E]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[d,E]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[d,_]],[/(android[-\\w\\. ]{0,9});.+buil/i],[a,[l,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[u,[c,\"EdgeHTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[u,[c,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i],[c,u],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[u,c]],os:[[/microsoft (windows) (vista|xp)/i],[c,u],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[c,[u,K,Y]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[c,\"Windows\"],[u,K,Y]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/cfnetwork\\/.+darwin/i],[[u,/_/g,\".\"],[c,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[c,F],[u,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[u,c],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[c,u],[/\\(bb(10);/i],[u,[c,C]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[u,[c,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[u,[c,y+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[u,[c,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[u,[c,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[u,[c,v+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[c,V],u],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[c,u],[/(sunos) ?([\\w\\.\\d]*)/i],[[c,\"Solaris\"],u],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,/(unix) ?([\\w\\.]*)/i],[c,u]]},z=function(p,m){if(typeof p===r&&(m=p,p=t),!(this instanceof z))return new z(p,m).getResult();var f=typeof e!==n&&e.navigator?e.navigator:t,T=p||(f&&f.userAgent?f.userAgent:\"\"),S=f&&f.userAgentData?f.userAgentData:t,g=m?function(e,t){var i={};for(var n in e)t[n]&&t[n].length%2==0?i[n]=t[n].concat(e[n]):i[n]=e[n];return i}(q,m):q;return this.getBrowser=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.browser),e[s]=function(e){return typeof e===o?e.replace(/[^\\d\\.]/g,\"\").split(\".\")[0]:t}(e[u]),f&&f.brave&&typeof f.brave.isBrave==i&&(e[c]=\"Brave\"),e},this.getCPU=function(){var e={};return e[h]=t,H.call(e,T,g.cpu),e},this.getDevice=function(){var e={};return e[l]=t,e[a]=t,e[d]=t,H.call(e,T,g.device),!e[d]&&S&&S.mobile&&(e[d]=_),\"Macintosh\"==e[a]&&f&&typeof f.standalone!==n&&f.maxTouchPoints&&f.maxTouchPoints>2&&(e[a]=\"iPad\",e[d]=E),e},this.getEngine=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.engine),e},this.getOS=function(){var e={};return e[c]=t,e[u]=t,H.call(e,T,g.os),!e[c]&&S&&\"Unknown\"!=S.platform&&(e[c]=S.platform.replace(/chrome os/i,V).replace(/macos/i,F)),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return T},this.setUA=function(e){return T=typeof e===o&&e.length>350?W(e,350):e,this},this.setUA(T),this};z.VERSION=\"0.7.34\",z.BROWSER=B([c,u,s]),z.CPU=B([h]),z.DEVICE=B([a,l,d,p,_,m,E,f,T]),z.ENGINE=z.OS=B([c,u]),eE.exports&&(tE=eE.exports=z),tE.UAParser=z;var J=typeof e!==n&&(e.jQuery||e.Zepto);if(J&&!J.ua){var X=new z;J.ua=X.getResult(),J.ua.get=function(){return X.getUA()},J.ua.set=function(e){X.setUA(e);var t=X.getResult();for(var i in t)J.ua[i]=t[i]}}}(\"object\"==typeof window?window:t);var dE=i(cE.exports),lE=pn,uE=Ze,hE=Y,pE=xo,_E=ht(\"iterator\"),EE=Object,mE=function(e){if(hE(e))return!1;var t=EE(e);return void 0!==t[_E]||\"@@iterator\"in t||uE(pE,lE(t))},fE=i(mE),TE=h;wi({global:!0,forced:TE.globalThis!==TE},{globalThis:TE});var SE=i(h);function gE(e,t){return function(){return e.apply(t,arguments)}}const{toString:RE}=Object.prototype,{getPrototypeOf:CE}=Object,IE=(vE=Object.create(null),e=>{const t=RE.call(e);return vE[t]||(vE[t]=t.slice(8,-1).toLowerCase())});var vE;const yE=e=>(e=e.toLowerCase(),t=>IE(t)===e),AE=e=>t=>typeof t===e,{isArray:bE}=Array,wE=AE(\"undefined\");const OE=yE(\"ArrayBuffer\");const NE=AE(\"string\"),DE=AE(\"function\"),PE=AE(\"number\"),LE=e=>null!==e&&\"object\"==typeof e,kE=e=>{if(\"object\"!==IE(e))return!1;const t=CE(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||fE(e))},ME=yE(\"Date\"),UE=yE(\"File\"),xE=yE(\"Blob\"),VE=yE(\"FileList\"),FE=yE(\"URLSearchParams\");function BE(e,t){let i,n,{allOwnKeys:r=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(null!=e)if(\"object\"!=typeof e&&(e=[e]),bE(e))for(i=0,n=e.length;i<n;i++)t.call(null,e[i],i,e);else{const n=r?Object.getOwnPropertyNames(e):Object.keys(e),o=n.length;let s;for(i=0;i<o;i++)s=n[i],t.call(null,e[s],s,e)}}function jE(e,t){t=t.toLowerCase();const i=Object.keys(e);let n,r=i.length;for(;r-- >0;)if(n=i[r],t===n.toLowerCase())return n;return null}const GE=void 0!==SE?SE:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:global,WE=e=>!wE(e)&&e!==GE;const HE=(KE=\"undefined\"!=typeof Uint8Array&&CE(Uint8Array),e=>KE&&e instanceof KE);var KE;const YE=yE(\"HTMLFormElement\"),qE=(e=>{let{hasOwnProperty:t}=e;return(e,i)=>t.call(e,i)})(Object.prototype),zE=yE(\"RegExp\"),JE=(e,t)=>{const i=Object.getOwnPropertyDescriptors(e),n={};BE(i,((i,r)=>{let o;!1!==(o=t(i,r,e))&&(n[r]=o||i)})),Object.defineProperties(e,n)},XE=\"abcdefghijklmnopqrstuvwxyz\",QE=\"0123456789\",ZE={DIGIT:QE,ALPHA:XE,ALPHA_DIGIT:XE+XE.toUpperCase()+QE};const $E=yE(\"AsyncFunction\");var em={isArray:bE,isArrayBuffer:OE,isBuffer:function(e){return null!==e&&!wE(e)&&null!==e.constructor&&!wE(e.constructor)&&DE(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&(\"function\"==typeof FormData&&e instanceof FormData||DE(e.append)&&(\"formdata\"===(t=IE(e))||\"object\"===t&&DE(e.toString)&&\"[object FormData]\"===e.toString()))},isArrayBufferView:function(e){let t;return t=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&OE(e.buffer),t},isString:NE,isNumber:PE,isBoolean:e=>!0===e||!1===e,isObject:LE,isPlainObject:kE,isUndefined:wE,isDate:ME,isFile:UE,isBlob:xE,isRegExp:zE,isFunction:DE,isStream:e=>LE(e)&&DE(e.pipe),isURLSearchParams:FE,isTypedArray:HE,isFileList:VE,forEach:BE,merge:function e(){const{caseless:t}=WE(this)&&this||{},i={},n=(n,r)=>{const o=t&&jE(i,r)||r;kE(i[o])&&kE(n)?i[o]=e(i[o],n):kE(n)?i[o]=e({},n):bE(n)?i[o]=n.slice():i[o]=n};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&BE(arguments[e],n);return i},extend:function(e,t,i){let{allOwnKeys:n}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return BE(t,((t,n)=>{i&&DE(t)?e[n]=gE(t,i):e[n]=t}),{allOwnKeys:n}),e},trim:e=>jp(e)?jp(e).call(e):e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,i,n)=>{e.prototype=Object.create(t.prototype,n),e.prototype.constructor=e,Object.defineProperty(e,\"super\",{value:t.prototype}),i&&Object.assign(e.prototype,i)},toFlatObject:(e,t,i,n)=>{let r,o,s;const a={};if(t=t||{},null==e)return t;do{for(r=Object.getOwnPropertyNames(e),o=r.length;o-- >0;)s=r[o],n&&!n(s,e,t)||a[s]||(t[s]=e[s],a[s]=!0);e=!1!==i&&CE(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:IE,kindOfTest:yE,endsWith:(e,t,i)=>{e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;const n=e.indexOf(t,i);return-1!==n&&n===i},toArray:e=>{if(!e)return null;if(bE(e))return e;let t=e.length;if(!PE(t))return null;const i=new Array(t);for(;t-- >0;)i[t]=e[t];return i},forEachEntry:(e,t)=>{const i=(e&&e[Symbol.iterator]).call(e);let n;for(;(n=i.next())&&!n.done;){const i=n.value;t.call(e,i[0],i[1])}},matchAll:(e,t)=>{let i;const n=[];for(;null!==(i=e.exec(t));)n.push(i);return n},isHTMLForm:YE,hasOwnProperty:qE,hasOwnProp:qE,reduceDescriptors:JE,freezeMethods:e=>{JE(e,((t,i)=>{if(DE(e)&&-1!==[\"arguments\",\"caller\",\"callee\"].indexOf(i))return!1;const n=e[i];DE(n)&&(t.enumerable=!1,\"writable\"in t?t.writable=!1:t.set||(t.set=()=>{throw Error(\"Can not rewrite read-only method '\"+i+\"'\")}))}))},toObjectSet:(e,t)=>{const i={},n=e=>{e.forEach((e=>{i[e]=!0}))};return bE(e)?n(e):n(String(e).split(t)),i},toCamelCase:e=>e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(e,t,i){return t.toUpperCase()+i})),noop:()=>{},toFiniteNumber:(e,t)=>(e=+e,Number.isFinite(e)?e:t),findKey:jE,global:GE,isContextDefined:WE,ALPHABET:ZE,generateString:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:16,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ZE.ALPHA_DIGIT,i=\"\";const{length:n}=t;for(;e--;)i+=t[Math.random()*n|0];return i},isSpecCompliantForm:function(e){return!!(e&&DE(e.append)&&\"FormData\"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),i=(e,n)=>{if(LE(e)){if(t.indexOf(e)>=0)return;if(!(\"toJSON\"in e)){t[n]=e;const r=bE(e)?[]:{};return BE(e,((e,t)=>{const o=i(e,n+1);!wE(o)&&(r[t]=o)})),t[n]=void 0,r}}return e};return i(e,0)},isAsyncFn:$E,isThenable:e=>e&&(LE(e)||DE(e))&&DE(e.then)&&DE(e.catch)};function tm(e,t,i,n,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name=\"AxiosError\",t&&(this.code=t),i&&(this.config=i),n&&(this.request=n),r&&(this.response=r)}em.inherits(tm,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:em.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const im=tm.prototype,nm={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((e=>{nm[e]={value:e}})),Object.defineProperties(tm,nm),Object.defineProperty(im,\"isAxiosError\",{value:!0}),tm.from=(e,t,i,n,r,o)=>{const s=Object.create(im);return em.toFlatObject(e,s,(function(e){return e!==Error.prototype}),(e=>\"isAxiosError\"!==e)),tm.call(s,e.message,t,i,n,r),s.cause=e,s.name=e.name,o&&Object.assign(s,o),s};function rm(e){return em.isPlainObject(e)||em.isArray(e)}function om(e){return em.endsWith(e,\"[]\")?e.slice(0,-2):e}function sm(e,t,i){return e?e.concat(t).map((function(e,t){return e=om(e),!i&&t?\"[\"+e+\"]\":e})).join(i?\".\":\"\"):t}const am=em.toFlatObject(em,{},null,(function(e){return/^is[A-Z]/.test(e)}));function cm(e,t,i){if(!em.isObject(e))throw new TypeError(\"target must be an object\");t=t||new FormData;const n=(i=em.toFlatObject(i,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!em.isUndefined(t[e])}))).metaTokens,r=i.visitor||d,o=i.dots,s=i.indexes,a=(i.Blob||\"undefined\"!=typeof Blob&&Blob)&&em.isSpecCompliantForm(t);if(!em.isFunction(r))throw new TypeError(\"visitor must be a function\");function c(e){if(null===e)return\"\";if(em.isDate(e))return e.toISOString();if(!a&&em.isBlob(e))throw new tm(\"Blob is not supported. Use a Buffer instead.\");return em.isArrayBuffer(e)||em.isTypedArray(e)?a&&\"function\"==typeof Blob?new Blob([e]):Buffer.from(e):e}function d(e,i,r){let a=e;if(e&&!r&&\"object\"==typeof e)if(em.endsWith(i,\"{}\"))i=n?i:i.slice(0,-2),e=JSON.stringify(e);else if(em.isArray(e)&&function(e){return em.isArray(e)&&!e.some(rm)}(e)||(em.isFileList(e)||em.endsWith(i,\"[]\"))&&(a=em.toArray(e)))return i=om(i),a.forEach((function(e,n){!em.isUndefined(e)&&null!==e&&t.append(!0===s?sm([i],n,o):null===s?i:i+\"[]\",c(e))})),!1;return!!rm(e)||(t.append(sm(r,i,o),c(e)),!1)}const l=[],u=Object.assign(am,{defaultVisitor:d,convertValue:c,isVisitable:rm});if(!em.isObject(e))throw new TypeError(\"data must be an object\");return function e(i,n){if(!em.isUndefined(i)){if(-1!==l.indexOf(i))throw Error(\"Circular reference detected in \"+n.join(\".\"));l.push(i),em.forEach(i,(function(i,o){!0===(!(em.isUndefined(i)||null===i)&&r.call(t,i,em.isString(o)?jp(o).call(o):o,n,u))&&e(i,n?n.concat(o):[o])})),l.pop()}}(e),t}function dm(e){const t={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function lm(e,t){this._pairs=[],e&&cm(e,this,t)}const um=lm.prototype;function hm(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function pm(e,t,i){if(!t)return e;const n=i&&i.encode||hm,r=i&&i.serialize;let o;if(o=r?r(t,i):em.isURLSearchParams(t)?t.toString():new lm(t,i).toString(n),o){const t=e.indexOf(\"#\");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+o}return e}um.append=function(e,t){this._pairs.push([e,t])},um.toString=function(e){const t=e?function(t){return e.call(this,t,dm)}:dm;return this._pairs.map((function(e){return t(e[0])+\"=\"+t(e[1])}),\"\").join(\"&\")};var _m=class{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){em.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},Em={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},mm={exports:{}},fm=wi,Tm=N,Sm=Qt.f;fm({target:\"Object\",stat:!0,forced:Object.defineProperty!==Sm,sham:!Tm},{defineProperty:Sm});var gm=ie.Object,Rm=mm.exports=function(e,t,i){return gm.defineProperty(e,t,i)};gm.defineProperty.sham&&(Rm.sham=!0);var Cm=i(mm.exports),Im=R,vm=Array.isArray||function(e){return\"Array\"==Im(e)},ym=TypeError,Am=vm,bm=jc,wm=te,Om=ht(\"species\"),Nm=Array,Dm=function(e){var t;return Am(e)&&(t=e.constructor,(bm(t)&&(t===Nm||Am(t.prototype))||wm(t)&&null===(t=t[Om]))&&(t=void 0)),void 0===t?Nm:t},Pm=function(e,t){return new(Dm(e))(0===t?0:t)},Lm=n,km=Ee,Mm=ht(\"species\"),Um=function(e){return km>=51||!Lm((function(){var t=[];return(t.constructor={})[Mm]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},xm=wi,Vm=n,Fm=vm,Bm=te,jm=Je,Gm=Gi,Wm=function(e){if(e>9007199254740991)throw ym(\"Maximum allowed index exceeded\");return e},Hm=E_,Km=Pm,Ym=Um,qm=Ee,zm=ht(\"isConcatSpreadable\"),Jm=qm>=51||!Vm((function(){var e=[];return e[zm]=!1,e.concat()[0]!==e})),Xm=function(e){if(!Bm(e))return!1;var t=e[zm];return void 0!==t?!!t:Fm(e)};xm({target:\"Array\",proto:!0,arity:1,forced:!Jm||!Ym(\"concat\")},{concat:function(e){var t,i,n,r,o,s=jm(this),a=Km(s,0),c=0;for(t=-1,n=arguments.length;t<n;t++)if(Xm(o=-1===t?s:arguments[t]))for(r=Gm(o),Wm(c+r),i=0;i<r;i++,c++)i in o&&Hm(a,c,o[i]);else Wm(c+1),Hm(a,c++,o);return a.length=c,a}});var Qm={},Zm=R,$m=Z,ef=Or.f,tf=R_,nf=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];Qm.f=function(e){return nf&&\"Window\"==Zm(e)?function(e){try{return ef(e)}catch(e){return tf(nf)}}(e):ef($m(e))};var rf={},of=ht;rf.f=of;var sf=ie,af=Ze,cf=rf,df=Qt.f,lf=function(e){var t=sf.Symbol||(sf.Symbol={});af(t,e)||df(t,e,{value:cf.f(e)})},uf=L,hf=ae,pf=ht,_f=ha,Ef=function(){var e=hf(\"Symbol\"),t=e&&e.prototype,i=t&&t.valueOf,n=pf(\"toPrimitive\");t&&!t[n]&&_f(t,n,(function(e){return uf(i,this)}),{arity:1})},mf=Xt,ff=K,Tf=Je,Sf=Gi,gf=Pm,Rf=d([].push),Cf=function(e){var t=1==e,i=2==e,n=3==e,r=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,l,u){for(var h,p,_=Tf(c),E=ff(_),m=mf(d,l),f=Sf(E),T=0,S=u||gf,g=t?S(c,f):i||s?S(c,0):void 0;f>T;T++)if((a||T in E)&&(p=m(h=E[T],T,_),e))if(t)g[T]=p;else if(p)switch(e){case 3:return!0;case 5:return h;case 6:return T;case 2:Rf(g,h)}else switch(e){case 4:return!1;case 7:Rf(g,h)}return o?-1:n||r?r:g}},If={forEach:Cf(0),map:Cf(1),filter:Cf(2),some:Cf(3),every:Cf(4),find:Cf(5),findIndex:Cf(6),filterReject:Cf(7)},vf=wi,yf=h,Af=L,bf=d,wf=N,Of=Se,Nf=n,Df=Ze,Pf=l,Lf=ii,kf=Z,Mf=Ct,Uf=mn,xf=B,Vf=Io,Ff=eo,Bf=Or,jf=Qm,Gf=Br,Wf=O,Hf=Qt,Kf=Qr,Yf=k,qf=ha,zf=hc,Jf=Ye,Xf=Nr,Qf=nt,Zf=ht,$f=rf,eT=lf,tT=Ef,iT=Da,nT=ra,rT=If.forEach,oT=lr(\"hidden\"),sT=\"Symbol\",aT=\"prototype\",cT=nT.set,dT=nT.getterFor(sT),lT=Object[aT],uT=yf.Symbol,hT=uT&&uT[aT],pT=yf.TypeError,_T=yf.QObject,ET=Wf.f,mT=Hf.f,fT=jf.f,TT=Yf.f,ST=bf([].push),gT=Jf(\"symbols\"),RT=Jf(\"op-symbols\"),CT=Jf(\"wks\"),IT=!_T||!_T[aT]||!_T[aT].findChild,vT=wf&&Nf((function(){return 7!=Vf(mT({},\"a\",{get:function(){return mT(this,\"a\",{value:7}).a}})).a}))?function(e,t,i){var n=ET(lT,t);n&&delete lT[t],mT(e,t,i),n&&e!==lT&&mT(lT,t,n)}:mT,yT=function(e,t){var i=gT[e]=Vf(hT);return cT(i,{type:sT,tag:e,description:t}),wf||(i.description=t),i},AT=function(e,t,i){e===lT&&AT(RT,t,i),Lf(e);var n=Mf(t);return Lf(i),Df(gT,n)?(i.enumerable?(Df(e,oT)&&e[oT][n]&&(e[oT][n]=!1),i=Vf(i,{enumerable:xf(0,!1)})):(Df(e,oT)||mT(e,oT,xf(1,{})),e[oT][n]=!0),vT(e,n,i)):mT(e,n,i)},bT=function(e,t){Lf(e);var i=kf(t),n=Ff(i).concat(DT(i));return rT(n,(function(t){wf&&!Af(wT,i,t)||AT(e,t,i[t])})),e},wT=function(e){var t=Mf(e),i=Af(TT,this,t);return!(this===lT&&Df(gT,t)&&!Df(RT,t))&&(!(i||!Df(this,t)||!Df(gT,t)||Df(this,oT)&&this[oT][t])||i)},OT=function(e,t){var i=kf(e),n=Mf(t);if(i!==lT||!Df(gT,n)||Df(RT,n)){var r=ET(i,n);return!r||!Df(gT,n)||Df(i,oT)&&i[oT][n]||(r.enumerable=!0),r}},NT=function(e){var t=fT(kf(e)),i=[];return rT(t,(function(e){Df(gT,e)||Df(Xf,e)||ST(i,e)})),i},DT=function(e){var t=e===lT,i=fT(t?RT:kf(e)),n=[];return rT(i,(function(e){!Df(gT,e)||t&&!Df(lT,e)||ST(n,gT[e])})),n};Of||(qf(hT=(uT=function(){if(Pf(hT,this))throw pT(\"Symbol is not a constructor\");var e=arguments.length&&void 0!==arguments[0]?Uf(arguments[0]):void 0,t=Qf(e),i=function(e){this===lT&&Af(i,RT,e),Df(this,oT)&&Df(this[oT],t)&&(this[oT][t]=!1),vT(this,t,xf(1,e))};return wf&&IT&&vT(lT,t,{configurable:!0,set:i}),yT(t,e)})[aT],\"toString\",(function(){return dT(this).tag})),qf(uT,\"withoutSetter\",(function(e){return yT(Qf(e),e)})),Yf.f=wT,Hf.f=AT,Kf.f=bT,Wf.f=OT,Bf.f=jf.f=NT,Gf.f=DT,$f.f=function(e){return yT(Zf(e),e)},wf&&zf(hT,\"description\",{configurable:!0,get:function(){return dT(this).description}})),vf({global:!0,constructor:!0,wrap:!0,forced:!Of,sham:!Of},{Symbol:uT}),rT(Ff(CT),(function(e){eT(e)})),vf({target:sT,stat:!0,forced:!Of},{useSetter:function(){IT=!0},useSimple:function(){IT=!1}}),vf({target:\"Object\",stat:!0,forced:!Of,sham:!wf},{create:function(e,t){return void 0===t?Vf(e):bT(Vf(e),t)},defineProperty:AT,defineProperties:bT,getOwnPropertyDescriptor:OT}),vf({target:\"Object\",stat:!0,forced:!Of},{getOwnPropertyNames:NT}),tT(),iT(uT,sT),Xf[oT]=!0;var PT=Se&&!!Symbol.for&&!!Symbol.keyFor,LT=wi,kT=ae,MT=Ze,UT=mn,xT=Ye,VT=PT,FT=xT(\"string-to-symbol-registry\"),BT=xT(\"symbol-to-string-registry\");LT({target:\"Symbol\",stat:!0,forced:!VT},{for:function(e){var t=UT(e);if(MT(FT,t))return FT[t];var i=kT(\"Symbol\")(t);return FT[t]=i,BT[i]=t,i}});var jT=wi,GT=Ze,WT=ye,HT=be,KT=PT,YT=Ye(\"symbol-to-string-registry\");jT({target:\"Symbol\",stat:!0,forced:!KT},{keyFor:function(e){if(!WT(e))throw TypeError(HT(e)+\" is not a symbol\");if(GT(YT,e))return YT[e]}});var qT=vm,zT=w,JT=R,XT=mn,QT=d([].push),ZT=wi,$T=ae,eS=f,tS=L,iS=d,nS=n,rS=w,oS=ye,sS=Xc,aS=function(e){if(zT(e))return e;if(qT(e)){for(var t=e.length,i=[],n=0;n<t;n++){var r=e[n];\"string\"==typeof r?QT(i,r):\"number\"!=typeof r&&\"Number\"!=JT(r)&&\"String\"!=JT(r)||QT(i,XT(r))}var o=i.length,s=!0;return function(e,t){if(s)return s=!1,t;if(qT(this))return t;for(var n=0;n<o;n++)if(i[n]===e)return t}}},cS=Se,dS=String,lS=$T(\"JSON\",\"stringify\"),uS=iS(/./.exec),hS=iS(\"\".charAt),pS=iS(\"\".charCodeAt),_S=iS(\"\".replace),ES=iS(1..toString),mS=/[\\uD800-\\uDFFF]/g,fS=/^[\\uD800-\\uDBFF]$/,TS=/^[\\uDC00-\\uDFFF]$/,SS=!cS||nS((function(){var e=$T(\"Symbol\")();return\"[null]\"!=lS([e])||\"{}\"!=lS({a:e})||\"{}\"!=lS(Object(e))})),gS=nS((function(){return'\"\\\\udf06\\\\ud834\"'!==lS(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==lS(\"\\udead\")})),RS=function(e,t){var i=sS(arguments),n=aS(t);if(rS(n)||void 0!==e&&!oS(e))return i[1]=function(e,t){if(rS(n)&&(t=tS(n,this,dS(e),t)),!oS(t))return t},eS(lS,null,i)},CS=function(e,t,i){var n=hS(i,t-1),r=hS(i,t+1);return uS(fS,e)&&!uS(TS,r)||uS(TS,e)&&!uS(fS,n)?\"\\\\u\"+ES(pS(e,0),16):e};lS&&ZT({target:\"JSON\",stat:!0,arity:3,forced:SS||gS},{stringify:function(e,t,i){var n=sS(arguments),r=eS(SS?RS:lS,null,n);return gS&&\"string\"==typeof r?_S(r,mS,CS):r}});var IS=Br,vS=Je;wi({target:\"Object\",stat:!0,forced:!Se||n((function(){IS.f(1)}))},{getOwnPropertySymbols:function(e){var t=IS.f;return t?t(vS(e)):[]}}),lf(\"asyncIterator\"),lf(\"hasInstance\"),lf(\"isConcatSpreadable\"),lf(\"iterator\"),lf(\"match\"),lf(\"matchAll\"),lf(\"replace\"),lf(\"search\"),lf(\"species\"),lf(\"split\");var yS=Ef;lf(\"toPrimitive\"),yS();var AS=ae,bS=Da;lf(\"toStringTag\"),bS(AS(\"Symbol\"),\"Symbol\"),lf(\"unscopables\"),Da(h.JSON,\"JSON\",!0);var wS=ie.Symbol,OS=ht,NS=Qt.f,DS=OS(\"metadata\"),PS=Function.prototype;void 0===PS[DS]&&NS(PS,DS,{value:null}),lf(\"dispose\"),lf(\"metadata\");var LS=wS;lf(\"asyncDispose\");var kS=d,MS=ae(\"Symbol\"),US=MS.keyFor,xS=kS(MS.prototype.valueOf),VS=MS.isRegisteredSymbol||function(e){try{return void 0!==US(xS(e))}catch(e){return!1}};wi({target:\"Symbol\",stat:!0},{isRegisteredSymbol:VS});for(var FS=Ye,BS=ae,jS=d,GS=ye,WS=ht,HS=BS(\"Symbol\"),KS=HS.isWellKnownSymbol,YS=BS(\"Object\",\"getOwnPropertyNames\"),qS=jS(HS.prototype.valueOf),zS=FS(\"wks\"),JS=0,XS=YS(HS),QS=XS.length;JS<QS;JS++)try{var ZS=XS[JS];GS(HS[ZS])&&WS(ZS)}catch(e){}var $S=function(e){if(KS&&KS(e))return!0;try{for(var t=qS(e),i=0,n=YS(zS),r=n.length;i<r;i++)if(zS[n[i]]==t)return!0}catch(e){}return!1};wi({target:\"Symbol\",stat:!0,forced:!0},{isWellKnownSymbol:$S}),lf(\"matcher\"),lf(\"observable\"),wi({target:\"Symbol\",stat:!0,name:\"isRegisteredSymbol\"},{isRegistered:VS}),wi({target:\"Symbol\",stat:!0,name:\"isWellKnownSymbol\",forced:!0},{isWellKnown:$S}),lf(\"metadataKey\"),lf(\"patternMatch\"),lf(\"replaceAll\");var eg=i(LS),tg=i(rf.f(\"iterator\"));function ig(e){return ig=\"function\"==typeof eg&&\"symbol\"==typeof tg?function(e){return typeof e}:function(e){return e&&\"function\"==typeof eg&&e.constructor===eg&&e!==eg.prototype?\"symbol\":typeof e},ig(e)}var ng=i(rf.f(\"toPrimitive\"));function rg(e){var t=function(e,t){if(\"object\"!==ig(e)||null===e)return e;var i=e[ng];if(void 0!==i){var n=i.call(e,t||\"default\");if(\"object\"!==ig(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===ig(t)?t:String(t)}function og(e,t,i){return(t=rg(t))in e?Cm(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var sg=n,ag=ht(\"iterator\"),cg=!sg((function(){var e=new URL(\"b?a=1&b=2&c=3\",\"http://a\"),t=e.searchParams,i=new URLSearchParams(\"a=1&a=2\"),n=\"\";return e.pathname=\"c%20d\",t.forEach((function(e,i){t.delete(\"b\"),n+=i+e})),i.delete(\"a\",2),!e.toJSON||!i.has(\"a\",1)||i.has(\"a\",2)||!t.size&&true||!t.sort||\"http://a/c%20d?a=1&c=3\"!==e.href||\"3\"!==t.get(\"c\")||\"a=1\"!==String(new URLSearchParams(\"?a=1\"))||!t[ag]||\"a\"!==new URL(\"https://a@b\").username||\"b\"!==new URLSearchParams(new URLSearchParams(\"a=b\")).get(\"a\")||\"xn--e1aybc\"!==new URL(\"http://ÑÐµÑÑ\").host||\"#%D0%B1\"!==new URL(\"http://a#Ð±\").hash||\"a1c3\"!==n||\"x\"!==new URL(\"http://x\",void 0).host})),dg=ha,lg=wi,ug=h,hg=L,pg=d,_g=N,Eg=cg,mg=ha,fg=hc,Tg=function(e,t,i){for(var n in t)i&&i.unsafe&&e[n]?e[n]=t[n]:dg(e,n,t[n],i);return e},Sg=Da,gg=Va,Rg=ra,Cg=Sc,Ig=w,vg=Ze,yg=Xt,Ag=pn,bg=ii,wg=te,Og=mn,Ng=Io,Dg=B,Pg=es,Lg=qo,kg=Zc,Mg=b_,Ug=ht(\"iterator\"),xg=\"URLSearchParams\",Vg=xg+\"Iterator\",Fg=Rg.set,Bg=Rg.getterFor(xg),jg=Rg.getterFor(Vg),Gg=Object.getOwnPropertyDescriptor,Wg=function(e){if(!_g)return ug[e];var t=Gg(ug,e);return t&&t.value},Hg=Wg(\"fetch\"),Kg=Wg(\"Request\"),Yg=Wg(\"Headers\"),qg=Kg&&Kg.prototype,zg=Yg&&Yg.prototype,Jg=ug.RegExp,Xg=ug.TypeError,Qg=ug.decodeURIComponent,Zg=ug.encodeURIComponent,$g=pg(\"\".charAt),eR=pg([].join),tR=pg([].push),iR=pg(\"\".replace),nR=pg([].shift),rR=pg([].splice),oR=pg(\"\".split),sR=pg(\"\".slice),aR=/\\+/g,cR=Array(4),dR=function(e){return cR[e-1]||(cR[e-1]=Jg(\"((?:%[\\\\da-f]{2}){\"+e+\"})\",\"gi\"))},lR=function(e){try{return Qg(e)}catch(t){return e}},uR=function(e){var t=iR(e,aR,\" \"),i=4;try{return Qg(t)}catch(e){for(;i;)t=iR(t,dR(i--),lR);return t}},hR=/[!'()~]|%20/g,pR={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\"},_R=function(e){return pR[e]},ER=function(e){return iR(Zg(e),hR,_R)},mR=gg((function(e,t){Fg(this,{type:Vg,iterator:Pg(Bg(e).entries),kind:t})}),\"Iterator\",(function(){var e=jg(this),t=e.kind,i=e.iterator.next(),n=i.value;return i.done||(i.value=\"keys\"===t?n.key:\"values\"===t?n.value:[n.key,n.value]),i}),!0),fR=function(e){this.entries=[],this.url=null,void 0!==e&&(wg(e)?this.parseObject(e):this.parseQuery(\"string\"==typeof e?\"?\"===$g(e,0)?sR(e,1):e:Og(e)))};fR.prototype={type:xg,bindURL:function(e){this.url=e,this.update()},parseObject:function(e){var t,i,n,r,o,s,a,c=Lg(e);if(c)for(i=(t=Pg(e,c)).next;!(n=hg(i,t)).done;){if(o=(r=Pg(bg(n.value))).next,(s=hg(o,r)).done||(a=hg(o,r)).done||!hg(o,r).done)throw Xg(\"Expected sequence with length 2\");tR(this.entries,{key:Og(s.value),value:Og(a.value)})}else for(var d in e)vg(e,d)&&tR(this.entries,{key:d,value:Og(e[d])})},parseQuery:function(e){if(e)for(var t,i,n=oR(e,\"&\"),r=0;r<n.length;)(t=n[r++]).length&&(i=oR(t,\"=\"),tR(this.entries,{key:uR(nR(i)),value:uR(eR(i,\"=\"))}))},serialize:function(){for(var e,t=this.entries,i=[],n=0;n<t.length;)e=t[n++],tR(i,ER(e.key)+\"=\"+ER(e.value));return eR(i,\"&\")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var TR=function(){Cg(this,SR);var e=Fg(this,new fR(arguments.length>0?arguments[0]:void 0));_g||(this.size=e.entries.length)},SR=TR.prototype;if(Tg(SR,{append:function(e,t){var i=Bg(this);kg(arguments.length,2),tR(i.entries,{key:Og(e),value:Og(t)}),_g||this.length++,i.updateURL()},delete:function(e){for(var t=Bg(this),i=kg(arguments.length,1),n=t.entries,r=Og(e),o=i<2?void 0:arguments[1],s=void 0===o?o:Og(o),a=0;a<n.length;){var c=n[a];if(c.key!==r||void 0!==s&&c.value!==s)a++;else if(rR(n,a,1),void 0!==s)break}_g||(this.size=n.length),t.updateURL()},get:function(e){var t=Bg(this).entries;kg(arguments.length,1);for(var i=Og(e),n=0;n<t.length;n++)if(t[n].key===i)return t[n].value;return null},getAll:function(e){var t=Bg(this).entries;kg(arguments.length,1);for(var i=Og(e),n=[],r=0;r<t.length;r++)t[r].key===i&&tR(n,t[r].value);return n},has:function(e){for(var t=Bg(this).entries,i=kg(arguments.length,1),n=Og(e),r=i<2?void 0:arguments[1],o=void 0===r?r:Og(r),s=0;s<t.length;){var a=t[s++];if(a.key===n&&(void 0===o||a.value===o))return!0}return!1},set:function(e,t){var i=Bg(this);kg(arguments.length,1);for(var n,r=i.entries,o=!1,s=Og(e),a=Og(t),c=0;c<r.length;c++)(n=r[c]).key===s&&(o?rR(r,c--,1):(o=!0,n.value=a));o||tR(r,{key:s,value:a}),_g||(this.size=r.length),i.updateURL()},sort:function(){var e=Bg(this);Mg(e.entries,(function(e,t){return e.key>t.key?1:-1})),e.updateURL()},forEach:function(e){for(var t,i=Bg(this).entries,n=yg(e,arguments.length>1?arguments[1]:void 0),r=0;r<i.length;)n((t=i[r++]).value,t.key,this)},keys:function(){return new mR(this,\"keys\")},values:function(){return new mR(this,\"values\")},entries:function(){return new mR(this,\"entries\")}},{enumerable:!0}),mg(SR,Ug,SR.entries,{name:\"entries\"}),mg(SR,\"toString\",(function(){return Bg(this).serialize()}),{enumerable:!0}),_g&&fg(SR,\"size\",{get:function(){return Bg(this).entries.length},configurable:!0,enumerable:!0}),Sg(TR,xg),lg({global:!0,constructor:!0,forced:!Eg},{URLSearchParams:TR}),!Eg&&Ig(Yg)){var gR=pg(zg.has),RR=pg(zg.set),CR=function(e){if(wg(e)){var t,i=e.body;if(Ag(i)===xg)return t=e.headers?new Yg(e.headers):new Yg,gR(t,\"content-type\")||RR(t,\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"),Ng(e,{body:Dg(0,Og(i)),headers:Dg(0,t)})}return e};if(Ig(Hg)&&lg({global:!0,enumerable:!0,dontCallGetSet:!0,forced:!0},{fetch:function(e){return Hg(e,arguments.length>1?CR(arguments[1]):{})}}),Ig(Kg)){var IR=function(e){return Cg(this,qg),new Kg(e,arguments.length>1?CR(arguments[1]):{})};qg.constructor=IR,IR.prototype=qg,lg({global:!0,constructor:!0,dontCallGetSet:!0,forced:!0},{Request:IR})}}var vR={URLSearchParams:TR,getState:Bg},yR=i(ie.URLSearchParams),AR={isBrowser:!0,classes:{URLSearchParams:void 0!==yR?yR:lm,FormData:\"undefined\"!=typeof FormData?FormData:null,Blob:\"undefined\"!=typeof Blob?Blob:null},protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]};const bR=\"undefined\"!=typeof window&&\"undefined\"!=typeof document,wR=(OR=\"undefined\"!=typeof navigator&&navigator.product,bR&&[\"ReactNative\",\"NativeScript\",\"NS\"].indexOf(OR)<0);var OR;const NR=\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&\"function\"==typeof self.importScripts;function DR(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function PR(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?DR(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):DR(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var LR=PR(PR({},Object.freeze({__proto__:null,hasBrowserEnv:bR,hasStandardBrowserEnv:wR,hasStandardBrowserWebWorkerEnv:NR})),AR);var kR=ii,MR=L,UR=Ze,xR=l,VR=function(){var e=kR(this),t=\"\";return e.hasIndices&&(t+=\"d\"),e.global&&(t+=\"g\"),e.ignoreCase&&(t+=\"i\"),e.multiline&&(t+=\"m\"),e.dotAll&&(t+=\"s\"),e.unicode&&(t+=\"u\"),e.unicodeSets&&(t+=\"v\"),e.sticky&&(t+=\"y\"),t},FR=RegExp.prototype,BR=function(e){var t=e.flags;return void 0!==t||\"flags\"in FR||UR(e,\"flags\")||!xR(FR,e)?t:MR(VR,e)},jR=Ch.charAt,GR=L,WR=ii,HR=w,KR=R,YR=/./.exec,qR=TypeError,zR=wi,JR=L,XR=v,QR=Va,ZR=ic,$R=J,eC=Bi,tC=mn,iC=ii,nC=Y,rC=R,oC=tn,sC=BR,aC=ke,cC=n,dC=Jc,lC=function(e,t,i){return t+(i?jR(e,t).length:1)},uC=function(e,t){var i=e.exec;if(HR(i)){var n=GR(i,e,t);return null!==n&&WR(n),n}if(\"RegExp\"===KR(e))return GR(YR,e,t);throw qR(\"RegExp#exec called on incompatible receiver\")},hC=ra,pC=ht(\"matchAll\"),_C=\"RegExp String\",EC=_C+\" Iterator\",mC=hC.set,fC=hC.getterFor(EC),TC=TypeError,SC=XR(\"\".indexOf),gC=XR(\"\".matchAll),RC=!!gC&&!cC((function(){gC(\"a\",/./)})),CC=QR((function(e,t,i,n){mC(this,{type:EC,regexp:e,string:t,global:i,unicode:n,done:!1})}),_C,(function(){var e=fC(this);if(e.done)return ZR(void 0,!0);var t=e.regexp,i=e.string,n=uC(t,i);return null===n?(e.done=!0,ZR(void 0,!0)):e.global?(\"\"===tC(n[0])&&(t.lastIndex=lC(i,eC(t.lastIndex),e.unicode)),ZR(n,!1)):(e.done=!0,ZR(n,!1))})),IC=function(e){var t,i,n,r=iC(this),o=tC(e),s=dC(r,RegExp),a=tC(sC(r));return t=new s(s===RegExp?r.source:r,a),i=!!~SC(a,\"g\"),n=!!~SC(a,\"u\"),t.lastIndex=eC(r.lastIndex),new CC(t,o,i,n)};zR({target:\"String\",proto:!0,forced:RC},{matchAll:function(e){var t,i,n,r,o=$R(this);if(nC(e)){if(RC)return gC(o,e)}else{if(oC(e)&&(t=tC($R(sC(e))),!~SC(t,\"g\")))throw TC(\"`.matchAll` does not allow non-global regexes\");if(RC)return gC(o,e);if(void 0===(n=aC(e,pC))&&\"RegExp\"==rC(e)&&(n=IC),n)return JR(n,e,o)}return i=tC(o),r=new RegExp(e,\"g\"),JR(IC,r,i)}});var vC=Xi(\"String\").matchAll,yC=l,AC=vC,bC=String.prototype,wC=function(e){var t=e.matchAll;return\"string\"==typeof e||e===bC||yC(bC,e)&&t===bC.matchAll?AC:t},OC=i(wC);function NC(e){function t(e,i,n,r){let o=e[r++];if(\"__proto__\"===o)return!0;const s=Number.isFinite(+o),a=r>=e.length;if(o=!o&&em.isArray(n)?n.length:o,a)return em.hasOwnProp(n,o)?n[o]=[n[o],i]:n[o]=i,!s;n[o]&&em.isObject(n[o])||(n[o]=[]);return t(e,i,n[o],r)&&em.isArray(n[o])&&(n[o]=function(e){const t={},i=Object.keys(e);let n;const r=i.length;let o;for(n=0;n<r;n++)o=i[n],t[o]=e[o];return t}(n[o])),!s}if(em.isFormData(e)&&em.isFunction(e.entries)){const i={};return em.forEachEntry(e,((e,n)=>{t(function(e){return OC(em).call(em,/\\w+|\\[(\\w*)]/g,e).map((e=>\"[]\"===e[0]?\"\":e[1]||e[0]))}(e),n,i,0)})),i}return null}const DC={transitional:Em,adapter:[\"xhr\",\"http\"],transformRequest:[function(e,t){const i=t.getContentType()||\"\",n=i.indexOf(\"application/json\")>-1,r=em.isObject(e);r&&em.isHTMLForm(e)&&(e=new FormData(e));if(em.isFormData(e))return n?JSON.stringify(NC(e)):e;if(em.isArrayBuffer(e)||em.isBuffer(e)||em.isStream(e)||em.isFile(e)||em.isBlob(e))return e;if(em.isArrayBufferView(e))return e.buffer;if(em.isURLSearchParams(e))return t.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),e.toString();let o;if(r){if(i.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(e,t){return cm(e,new LR.classes.URLSearchParams,Object.assign({visitor:function(e,t,i,n){return LR.isNode&&em.isBuffer(e)?(this.append(t,e.toString(\"base64\")),!1):n.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((o=em.isFileList(e))||i.indexOf(\"multipart/form-data\")>-1){const t=this.env&&this.env.FormData;return cm(o?{\"files[]\":e}:e,t&&new t,this.formSerializer)}}return r||n?(t.setContentType(\"application/json\",!1),function(e,t,i){if(em.isString(e))try{return(t||JSON.parse)(e),jp(em).call(em,e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(i||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||DC.transitional,i=t&&t.forcedJSONParsing,n=\"json\"===this.responseType;if(e&&em.isString(e)&&(i&&!this.responseType||n)){const i=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(e){if(i){if(\"SyntaxError\"===e.name)throw tm.from(e,tm.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:LR.classes.FormData,Blob:LR.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":void 0}}};em.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\"],(e=>{DC.headers[e]={}}));var PC=DC;const LC=em.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]);const kC=Symbol(\"internals\");function MC(e){var t;return e&&jp(t=String(e)).call(t).toLowerCase()}function UC(e){return!1===e||null==e?e:em.isArray(e)?e.map(UC):String(e)}function xC(e,t,i,n,r){return em.isFunction(n)?n.call(this,t,i):(r&&(t=i),em.isString(t)?em.isString(n)?-1!==t.indexOf(n):em.isRegExp(n)?n.test(t):void 0:void 0)}class VC{constructor(e){e&&this.set(e)}set(e,t,i){const n=this;function r(e,t,i){const r=MC(t);if(!r)throw new Error(\"header name must be a non-empty string\");const o=em.findKey(n,r);(!o||void 0===n[o]||!0===i||void 0===i&&!1!==n[o])&&(n[o||t]=UC(e))}const o=(e,t)=>em.forEach(e,((e,i)=>r(e,i,t)));var s;return em.isPlainObject(e)||e instanceof this.constructor?o(e,t):em.isString(e)&&(e=jp(e).call(e))&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(jp(s=e).call(s))?o((e=>{const t={};let i,n,r;return e&&e.split(\"\\n\").forEach((function(e){var o,s;r=e.indexOf(\":\"),i=jp(o=e.substring(0,r)).call(o).toLowerCase(),n=jp(s=e.substring(r+1)).call(s),!i||t[i]&&LC[i]||(\"set-cookie\"===i?t[i]?t[i].push(n):t[i]=[n]:t[i]=t[i]?t[i]+\", \"+n:n)})),t})(e),t):null!=e&&r(t,e,i),this}get(e,t){if(e=MC(e)){const i=em.findKey(this,e);if(i){const e=this[i];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),i=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let n;for(;n=i.exec(e);)t[n[1]]=n[2];return t}(e);if(em.isFunction(t))return t.call(this,e,i);if(em.isRegExp(t))return t.exec(e);throw new TypeError(\"parser must be boolean|regexp|function\")}}}has(e,t){if(e=MC(e)){const i=em.findKey(this,e);return!(!i||void 0===this[i]||t&&!xC(0,this[i],i,t))}return!1}delete(e,t){const i=this;let n=!1;function r(e){if(e=MC(e)){const r=em.findKey(i,e);!r||t&&!xC(0,i[r],r,t)||(delete i[r],n=!0)}}return em.isArray(e)?e.forEach(r):r(e),n}clear(e){const t=Object.keys(this);let i=t.length,n=!1;for(;i--;){const r=t[i];e&&!xC(0,this[r],r,e,!0)||(delete this[r],n=!0)}return n}normalize(e){const t=this,i={};return em.forEach(this,((n,r)=>{var o;const s=em.findKey(i,r);if(s)return t[s]=UC(n),void delete t[r];const a=e?function(e){return jp(e).call(e).toLowerCase().replace(/([a-z\\d])(\\w*)/g,((e,t,i)=>t.toUpperCase()+i))}(r):jp(o=String(r)).call(o);a!==r&&delete t[r],t[a]=UC(n),i[a]=!0})),this}concat(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return this.constructor.concat(this,...t)}toJSON(e){const t=Object.create(null);return em.forEach(this,((i,n)=>{null!=i&&!1!==i&&(t[n]=e&&em.isArray(i)?i.join(\", \"):i)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((e=>{let[t,i]=e;return t+\": \"+i})).join(\"\\n\")}get[Symbol.toStringTag](){return\"AxiosHeaders\"}static from(e){return e instanceof this?e:new this(e)}static concat(e){const t=new this(e);for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];return n.forEach((e=>t.set(e))),t}static accessor(e){const t=(this[kC]=this[kC]={accessors:{}}).accessors,i=this.prototype;function n(e){const n=MC(e);t[n]||(!function(e,t){const i=em.toCamelCase(\" \"+t);[\"get\",\"set\",\"has\"].forEach((n=>{Object.defineProperty(e,n+i,{value:function(e,i,r){return this[n].call(this,t,e,i,r)},configurable:!0})}))}(i,e),t[n]=!0)}return em.isArray(e)?e.forEach(n):n(e),this}}VC.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\",\"Authorization\"]),em.reduceDescriptors(VC.prototype,((e,t)=>{let{value:i}=e,n=t[0].toUpperCase()+t.slice(1);return{get:()=>i,set(e){this[n]=e}}})),em.freezeMethods(VC);var FC=VC;function BC(e,t){const i=this||PC,n=t||i,r=FC.from(n.headers);let o=n.data;return em.forEach(e,(function(e){o=e.call(i,o,r.normalize(),t?t.status:void 0)})),r.normalize(),o}function jC(e){return!(!e||!e.__CANCEL__)}function GC(e,t,i){tm.call(this,null==e?\"canceled\":e,tm.ERR_CANCELED,t,i),this.name=\"CanceledError\"}em.inherits(GC,tm,{__CANCEL__:!0});var WC=LR.hasStandardBrowserEnv?{write(e,t,i,n,r,o){const s=[e+\"=\"+encodeURIComponent(t)];em.isNumber(i)&&s.push(\"expires=\"+new Date(i).toGMTString()),em.isString(n)&&s.push(\"path=\"+n),em.isString(r)&&s.push(\"domain=\"+r),!0===o&&s.push(\"secure\"),document.cookie=s.join(\"; \")},read(e){const t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,\"\",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function HC(e,t){return e&&!function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)}(t)?function(e,t){return t?e.replace(/\\/?\\/$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e}(e,t):t}var KC=LR.hasStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement(\"a\");let i;function n(i){let n=i;return e&&(t.setAttribute(\"href\",n),n=t.href),t.setAttribute(\"href\",n),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,\"\"):\"\",host:t.host,search:t.search?t.search.replace(/^\\?/,\"\"):\"\",hash:t.hash?t.hash.replace(/^#/,\"\"):\"\",hostname:t.hostname,port:t.port,pathname:\"/\"===t.pathname.charAt(0)?t.pathname:\"/\"+t.pathname}}return i=n(window.location.href),function(e){const t=em.isString(e)?n(e):e;return t.protocol===i.protocol&&t.host===i.host}}():function(){return!0};function YC(e,t){let i=0;const n=function(e,t){e=e||10;const i=new Array(e),n=new Array(e);let r,o=0,s=0;return t=void 0!==t?t:1e3,function(a){const c=Date.now(),d=n[s];r||(r=c),i[o]=a,n[o]=c;let l=s,u=0;for(;l!==o;)u+=i[l++],l%=e;if(o=(o+1)%e,o===s&&(s=(s+1)%e),c-r<t)return;const h=d&&c-d;return h?Math.round(1e3*u/h):void 0}}(50,250);return r=>{const o=r.loaded,s=r.lengthComputable?r.total:void 0,a=o-i,c=n(a);i=o;const d={loaded:o,total:s,progress:s?o/s:void 0,bytes:a,rate:c||void 0,estimated:c&&s&&o<=s?(s-o)/c:void 0,event:r};d[t?\"download\":\"upload\"]=!0,e(d)}}var qC=\"undefined\"!=typeof XMLHttpRequest&&function(e){return new Gh((function(t,i){let n=e.data;const r=FC.from(e.headers).normalize();let o,s,{responseType:a,withXSRFToken:c}=e;function d(){e.cancelToken&&e.cancelToken.unsubscribe(o),e.signal&&e.signal.removeEventListener(\"abort\",o)}if(em.isFormData(n))if(LR.hasStandardBrowserEnv||LR.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if(!1!==(s=r.getContentType())){const[e,...t]=s?s.split(\";\").map((e=>jp(e).call(e))).filter(Boolean):[];r.setContentType([e||\"multipart/form-data\",...t].join(\"; \"))}let l=new XMLHttpRequest;if(e.auth){const t=e.auth.username||\"\",i=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";r.set(\"Authorization\",\"Basic \"+btoa(t+\":\"+i))}const u=HC(e.baseURL,e.url);function h(){if(!l)return;const n=FC.from(\"getAllResponseHeaders\"in l&&l.getAllResponseHeaders());!function(e,t,i){const n=i.config.validateStatus;i.status&&n&&!n(i.status)?t(new tm(\"Request failed with status code \"+i.status,[tm.ERR_BAD_REQUEST,tm.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i)):e(i)}((function(e){t(e),d()}),(function(e){i(e),d()}),{data:a&&\"text\"!==a&&\"json\"!==a?l.response:l.responseText,status:l.status,statusText:l.statusText,headers:n,config:e,request:l}),l=null}if(l.open(e.method.toUpperCase(),pm(u,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,\"onloadend\"in l?l.onloadend=h:l.onreadystatechange=function(){l&&4===l.readyState&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf(\"file:\"))&&setTimeout(h)},l.onabort=function(){l&&(i(new tm(\"Request aborted\",tm.ECONNABORTED,e,l)),l=null)},l.onerror=function(){i(new tm(\"Network Error\",tm.ERR_NETWORK,e,l)),l=null},l.ontimeout=function(){let t=e.timeout?\"timeout of \"+e.timeout+\"ms exceeded\":\"timeout exceeded\";const n=e.transitional||Em;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),i(new tm(t,n.clarifyTimeoutError?tm.ETIMEDOUT:tm.ECONNABORTED,e,l)),l=null},LR.hasStandardBrowserEnv&&(c&&em.isFunction(c)&&(c=c(e)),c||!1!==c&&KC(u))){const t=e.xsrfHeaderName&&e.xsrfCookieName&&WC.read(e.xsrfCookieName);t&&r.set(e.xsrfHeaderName,t)}void 0===n&&r.setContentType(null),\"setRequestHeader\"in l&&em.forEach(r.toJSON(),(function(e,t){l.setRequestHeader(t,e)})),em.isUndefined(e.withCredentials)||(l.withCredentials=!!e.withCredentials),a&&\"json\"!==a&&(l.responseType=e.responseType),\"function\"==typeof e.onDownloadProgress&&l.addEventListener(\"progress\",YC(e.onDownloadProgress,!0)),\"function\"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener(\"progress\",YC(e.onUploadProgress)),(e.cancelToken||e.signal)&&(o=t=>{l&&(i(!t||t.type?new GC(null,e,l):t),l.abort(),l=null)},e.cancelToken&&e.cancelToken.subscribe(o),e.signal&&(e.signal.aborted?o():e.signal.addEventListener(\"abort\",o)));const p=function(e){const t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return t&&t[1]||\"\"}(u);p&&-1===LR.protocols.indexOf(p)?i(new tm(\"Unsupported protocol \"+p+\":\",tm.ERR_BAD_REQUEST,e)):l.send(n||null)}))};const zC={http:null,xhr:qC};em.forEach(zC,((e,t)=>{if(e){try{Object.defineProperty(e,\"name\",{value:t})}catch(e){}Object.defineProperty(e,\"adapterName\",{value:t})}}));const JC=e=>\"- \".concat(e),XC=e=>em.isFunction(e)||null===e||!1===e;var QC={getAdapter:e=>{e=em.isArray(e)?e:[e];const{length:t}=e;let i,n;const r={};for(let o=0;o<t;o++){let t;if(i=e[o],n=i,!XC(i)&&(n=zC[(t=String(i)).toLowerCase()],void 0===n))throw new tm(\"Unknown adapter '\".concat(t,\"'\"));if(n)break;r[t||\"#\"+o]=n}if(!n){const e=Object.entries(r).map((e=>{let[t,i]=e;return\"adapter \".concat(t,\" \")+(!1===i?\"is not supported by the environment\":\"is not available in the build\")}));throw new tm(\"There is no suitable adapter to dispatch the request \"+(t?e.length>1?\"since :\\n\"+e.map(JC).join(\"\\n\"):\" \"+JC(e[0]):\"as no adapter specified\"),\"ERR_NOT_SUPPORT\")}return n},adapters:zC};function ZC(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new GC(null,e)}function $C(e){ZC(e),e.headers=FC.from(e.headers),e.data=BC.call(e,e.transformRequest),-1!==[\"post\",\"put\",\"patch\"].indexOf(e.method)&&e.headers.setContentType(\"application/x-www-form-urlencoded\",!1);return QC.getAdapter(e.adapter||PC.adapter)(e).then((function(t){return ZC(e),t.data=BC.call(e,e.transformResponse,t),t.headers=FC.from(t.headers),t}),(function(t){return jC(t)||(ZC(e),t&&t.response&&(t.response.data=BC.call(e,e.transformResponse,t.response),t.response.headers=FC.from(t.response.headers))),Gh.reject(t)}))}function eI(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const tI=e=>e instanceof FC?function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?eI(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):eI(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},e):e;function iI(e,t){t=t||{};const i={};function n(e,t,i){return em.isPlainObject(e)&&em.isPlainObject(t)?em.merge.call({caseless:i},e,t):em.isPlainObject(t)?em.merge({},t):em.isArray(t)?t.slice():t}function r(e,t,i){return em.isUndefined(t)?em.isUndefined(e)?void 0:n(void 0,e,i):n(e,t,i)}function o(e,t){if(!em.isUndefined(t))return n(void 0,t)}function s(e,t){return em.isUndefined(t)?em.isUndefined(e)?void 0:n(void 0,e):n(void 0,t)}function a(i,r,o){return o in t?n(i,r):o in e?n(void 0,i):void 0}const c={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,withXSRFToken:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:a,headers:(e,t)=>r(tI(e),tI(t),!0)};return em.forEach(Object.keys(Object.assign({},e,t)),(function(n){const o=c[n]||r,s=o(e[n],t[n],n);em.isUndefined(s)&&o!==a||(i[n]=s)})),i}const nI=\"1.6.8\",rI={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((e,t)=>{rI[e]=function(i){return typeof i===e||\"a\"+(t<1?\"n \":\" \")+e}}));const oI={};rI.transitional=function(e,t,i){function n(e,t){return\"[Axios v\"+nI+\"] Transitional option '\"+e+\"'\"+t+(i?\". \"+i:\"\")}return(i,r,o)=>{if(!1===e)throw new tm(n(r,\" has been removed\"+(t?\" in \"+t:\"\")),tm.ERR_DEPRECATED);return t&&!oI[r]&&(oI[r]=!0,console.warn(n(r,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(i,r,o)}};var sI={assertOptions:function(e,t,i){if(\"object\"!=typeof e)throw new tm(\"options must be an object\",tm.ERR_BAD_OPTION_VALUE);const n=Object.keys(e);let r=n.length;for(;r-- >0;){const o=n[r],s=t[o];if(s){const t=e[o],i=void 0===t||s(t,o,e);if(!0!==i)throw new tm(\"option \"+o+\" must be \"+i,tm.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new tm(\"Unknown option \"+o,tm.ERR_BAD_OPTION)}},validators:rI};const aI=sI.validators;let cI=class{constructor(e){this.defaults=e,this.interceptors={request:new _m,response:new _m}}async request(e,t){try{return await this._request(e,t)}catch(e){if(e instanceof Error){let t;Error.captureStackTrace?Error.captureStackTrace(t={}):t=new Error;const i=t.stack?t.stack.replace(/^.+\\n/,\"\"):\"\";e.stack?i&&!String(e.stack).endsWith(i.replace(/^.+\\n.+\\n/,\"\"))&&(e.stack+=\"\\n\"+i):e.stack=i}throw e}}_request(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{},t=iI(this.defaults,t);const{transitional:i,paramsSerializer:n,headers:r}=t;void 0!==i&&sI.assertOptions(i,{silentJSONParsing:aI.transitional(aI.boolean),forcedJSONParsing:aI.transitional(aI.boolean),clarifyTimeoutError:aI.transitional(aI.boolean)},!1),null!=n&&(em.isFunction(n)?t.paramsSerializer={serialize:n}:sI.assertOptions(n,{encode:aI.function,serialize:aI.function},!0)),t.method=(t.method||this.defaults.method||\"get\").toLowerCase();let o=r&&em.merge(r.common,r[t.method]);r&&em.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(e=>{delete r[e]})),t.headers=FC.concat(o,r);const s=[];let a=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(a=a&&e.synchronous,s.unshift(e.fulfilled,e.rejected))}));const c=[];let d;this.interceptors.response.forEach((function(e){c.push(e.fulfilled,e.rejected)}));let l,u=0;if(!a){const e=[$C.bind(this),void 0];for(e.unshift.apply(e,s),e.push.apply(e,c),l=e.length,d=Gh.resolve(t);u<l;)d=d.then(e[u++],e[u++]);return d}l=s.length;let h=t;for(u=0;u<l;){const e=s[u++],t=s[u++];try{h=e(h)}catch(e){t.call(this,e);break}}try{d=$C.call(this,h)}catch(e){return Gh.reject(e)}for(u=0,l=c.length;u<l;)d=d.then(c[u++],c[u++]);return d}getUri(e){return pm(HC((e=iI(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}};em.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){cI.prototype[e]=function(t,i){return this.request(iI(i||{},{method:e,url:t,data:(i||{}).data}))}})),em.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(i,n,r){return this.request(iI(r||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:i,data:n}))}}cI.prototype[e]=t(),cI.prototype[e+\"Form\"]=t(!0)}));var dI=cI;class lI{constructor(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");let t;this.promise=new Gh((function(e){t=e}));const i=this;this.promise.then((e=>{if(!i._listeners)return;let t=i._listeners.length;for(;t-- >0;)i._listeners[t](e);i._listeners=null})),this.promise.then=e=>{let t;const n=new Gh((e=>{i.subscribe(e),t=e})).then(e);return n.cancel=function(){i.unsubscribe(t)},n},e((function(e,n,r){i.reason||(i.reason=new GC(e,n,r),t(i.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new lI((function(t){e=t})),cancel:e}}}var uI=lI;const hI={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(hI).forEach((e=>{let[t,i]=e;hI[i]=t}));var pI=hI;const _I=function e(t){const i=new dI(t),n=gE(dI.prototype.request,i);return em.extend(n,dI.prototype,i,{allOwnKeys:!0}),em.extend(n,i,null,{allOwnKeys:!0}),n.create=function(i){return e(iI(t,i))},n}(PC);_I.Axios=dI,_I.CanceledError=GC,_I.CancelToken=uI,_I.isCancel=jC,_I.VERSION=nI,_I.toFormData=cm,_I.AxiosError=tm,_I.Cancel=_I.CanceledError,_I.all=function(e){return Gh.all(e)},_I.spread=function(e){return function(t){return e.apply(null,t)}},_I.isAxiosError=function(e){return em.isObject(e)&&!0===e.isAxiosError},_I.mergeConfig=iI,_I.AxiosHeaders=FC,_I.formToJSON=e=>NC(em.isHTMLForm(e)?new FormData(e):e),_I.getAdapter=QC.getAdapter,_I.HttpStatusCode=pI,_I.default=_I;var EI=_I;const mI=()=>{};function fI(){const e={promise:void 0,isResolved:!1,isRejected:!1,isFinished:!1,resolve:void 0,reject:void 0,cancel:mI};return e.promise=new Gh(((t,i)=>{e.resolve=i=>{e.isFinished||(e.isResolved=!0,e.isFinished=!0,t(i),e.value=i)},e.reject=t=>{e.isFinished||(e.isRejected=!0,e.isFinished=!0,i(t))}})),e}const TI=new Map,SI=new Map,gI=new Map;let RI=function(e){return e.WIN_10=\"Windows 10\",e.WIN_81=\"Windows 8.1\",e.WIN_8=\"Windows 8\",e.WIN_7=\"Windows 7\",e.WIN_VISTA=\"Windows Vista\",e.WIN_SERVER_2003=\"Windows Server 2003\",e.WIN_XP=\"Windows XP\",e.WIN_2000=\"Windows 2000\",e.ANDROID=\"Android\",e.HARMONY_OS=\"HarmonyOS\",e.OPEN_BSD=\"Open BSD\",e.SUN_OS=\"Sun OS\",e.LINUX=\"Linux\",e.IOS=\"iOS\",e.MAC_OS=\"Mac OS\",e.CHROMIUM_OS=\"Chromium OS\",e.QNX=\"QNX\",e.UNIX=\"UNIX\",e.BEOS=\"BeOS\",e.OS_2=\"OS/2\",e.SEARCH_BOT=\"Search Bot\",e}({}),CI=function(e){return e.CHROME=\"Chrome\",e.SAFARI=\"Safari\",e.EDGE=\"Edge\",e.FIREFOX=\"Firefox\",e.OPERA=\"OPR\",e.QQ=\"QQBrowser\",e.WECHAT=\"MicroMessenger\",e}({});const II=new dE;let vI=II.getResult(),yI=null;function AI(e){if(!yI){e&&II.setUA(e),vI=II.getResult();const t=function(e){if(\"Blink\"===e.engine.name&&\"WeChat\"!==e.browser.name)return CI.CHROME;switch(e.browser.name){case\"Chrome Headless\":case\"Chrome\":case\"Chromium\":return CI.CHROME;case\"Safari\":case\"Mobile Safari\":return CI.SAFARI;case\"Edge\":return CI.EDGE;case\"Firefox\":return CI.FIREFOX;case\"QQ\":case\"QQBrowser\":return CI.QQ;case\"Opera\":return CI.OPERA;case\"WeChat\":return CI.WECHAT;default:return e.browser.name||\"\"}}(vI),i=bI(vI),n=function(e){return\"Windows\"===e.os.name?e.os.version?e.os.name+\" \"+e.os.version:e.os.name:e.os.name||\"\"}(vI),r=vI.os.version,o=bI(vI,!1),s=vI.device.type;if(!(t&&i&&n&&r))return{name:t,version:i,os:n,osVersion:r,browserVersion:o,deviceType:s};yI={name:t,version:i,os:n,osVersion:r,browserVersion:o,deviceType:s}}return yI}function bI(e){let t,i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return t=\"Blink\"===e.engine.name?e.engine.version||\"\":e.browser.version||\"\",i?t.split(\".\")[0]:t}function wI(){return AI().os}function OI(){const e=AI();return\"\".concat(e.os,\" \").concat(e.osVersion)}function NI(){const e=AI();return!!(\"WebKit\"===vI.engine.name&&e.os===RI.MAC_OS&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0&&e.name!==CI.SAFARI||MI()&&e.name!==CI.SAFARI)}function DI(){return AI().name===CI.CHROME}function PI(){return AI().name===CI.SAFARI}function LI(){return AI().name===CI.EDGE}function kI(){return AI().name===CI.FIREFOX}function MI(){return AI().os===RI.IOS}function UI(e){const t=AI();return!(t.name!==CI.CHROME||!t.osVersion)&&Number(t.version)>=e}function xI(e){const t=AI();return!(t.name!==CI.CHROME||!t.osVersion)&&Number(t.version)<e}function VI(e){const t=AI();return!(t.name!==CI.EDGE||!t.osVersion)&&Number(t.version)>=e}function FI(e){const t=AI();return!(t.name!==CI.SAFARI||!t.osVersion)&&Number(t.version)>=e}function BI(e,t,i){const n=AI();if(n.os!==RI.IOS||!n.osVersion)return!1;const r=n.osVersion.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}function jI(e,t,i){const n=AI();if(n.name!==CI.SAFARI||!n.osVersion||!n.browserVersion)return!1;const r=n.browserVersion.split(\".\");return i?t&&Number(r[0])===e&&Number(r[1])<t||Number(r[0])<e:t?Number(r[0])===e&&Number(r[1])<=t||Number(r[0])<e:Number(r[0])<=e}function GI(e){const t=AI();return!(t.name!==CI.OPERA||!t.osVersion)&&Number(t.version)>=e}function WI(){const e=AI();if(e.os!==RI.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return Number(t[0])<14||14===Number(t[0])&&Number(t[1])<=6}function HI(){const e=AI();if(e.os!==RI.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])}function KI(){const e=AI();if(e.os!==RI.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 16===Number(t[0])}function YI(){const e=AI();if(e.os!==RI.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=1}function qI(){return PI()&&navigator.maxTouchPoints>0}function zI(){return AI().name===CI.WECHAT}function JI(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)&&window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1]<=35}function XI(){const e=wI();return function(){const{deviceType:e}=AI();return\"mobile\"===e||\"tablet\"===e}()||e===RI.ANDROID||e===RI.IOS||e===RI.HARMONY_OS}function QI(){const e=AI();return e.name!==CI.EDGE&&e.name!==CI.SAFARI&&!!navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]./i)}function ZI(){return wI()===RI.ANDROID}function $I(){const e=AI();return ZI()&&(e.name===CI.CHROME||e.name===CI.WECHAT||/chrome|chromium/i.test(navigator.userAgent))}function ev(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function tv(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function iv(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?tv(Object(i),!0).forEach((function(t){ev(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):tv(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let nv=function(e){return e.UNEXPECTED_ERROR=\"UNEXPECTED_ERROR\",e.UNEXPECTED_RESPONSE=\"UNEXPECTED_RESPONSE\",e.TIMEOUT=\"TIMEOUT\",e.INVALID_PARAMS=\"INVALID_PARAMS\",e.NOT_READABLE=\"NOT_READABLE\",e.NOT_SUPPORTED=\"NOT_SUPPORTED\",e.INVALID_OPERATION=\"INVALID_OPERATION\",e.OPERATION_ABORTED=\"OPERATION_ABORTED\",e.WEB_SECURITY_RESTRICT=\"WEB_SECURITY_RESTRICT\",e.EXCHANGE_SDP_FAILED=\"EXCHANGE_SDP_FAILED\",e.ADD_CANDIDATE_FAILED=\"ADD_CANDIDATE_FAILED\",e.DATACHANNEL_FAILED=\"DATACHANNEL_FAILED\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.NETWORK_TIMEOUT=\"NETWORK_TIMEOUT\",e.NETWORK_RESPONSE_ERROR=\"NETWORK_RESPONSE_ERROR\",e.API_INVOKE_TIMEOUT=\"API_INVOKE_TIMEOUT\",e.ENUMERATE_DEVICES_FAILED=\"ENUMERATE_DEVICES_FAILED\",e.DEVICE_NOT_FOUND=\"DEVICE_NOT_FOUND\",e.ELECTRON_IS_NULL=\"ELECTRON_IS_NULL\",e.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR=\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",e.CHROME_PLUGIN_NO_RESPONSE=\"CHROME_PLUGIN_NO_RESPONSE\",e.CHROME_PLUGIN_NOT_INSTALL=\"CHROME_PLUGIN_NOT_INSTALL\",e.MEDIA_OPTION_INVALID=\"MEDIA_OPTION_INVALID\",e.PERMISSION_DENIED=\"PERMISSION_DENIED\",e.CONSTRAINT_NOT_SATISFIED=\"CONSTRAINT_NOT_SATISFIED\",e.TRACK_IS_DISABLED=\"TRACK_IS_DISABLED\",e.GET_VIDEO_ELEMENT_VISIBLE_ERROR=\"GET_VIDEO_ELEMENT_VISIBLE_ERROR\",e.SHARE_AUDIO_NOT_ALLOWED=\"SHARE_AUDIO_NOT_ALLOWED\",e.LOW_STREAM_ENCODING_ERROR=\"LOW_STREAM_ENCODING_ERROR\",e.SET_ENCODING_PARAMETER_ERROR=\"SET_ENCODING_PARAMETER_ERROR\",e.TRACK_STATE_UNREACHABLE=\"TRACK_STATE_UNREACHABLE\",e.INVALID_UINT_UID_FROM_STRING_UID=\"INVALID_UINT_UID_FROM_STRING_UID\",e.CAN_NOT_GET_PROXY_SERVER=\"CAN_NOT_GET_PROXY_SERVER\",e.CAN_NOT_GET_GATEWAY_SERVER=\"CAN_NOT_GET_GATEWAY_SERVER\",e.VOID_GATEWAY_ADDRESS=\"VOID_GATEWAY_ADDRESS\",e.UID_CONFLICT=\"UID_CONFLICT\",e.MULTI_UNILBS_RESPONSE_ERROR=\"MULTI_UNILBS_RESPONSE_ERROR\",e.UPDATE_TICKET_FAILED=\"UPDATE_TICKET_FAILED\",e.INVALID_LOCAL_TRACK=\"INVALID_LOCAL_TRACK\",e.INVALID_TRACK=\"INVALID_TRACK\",e.SENDER_NOT_FOUND=\"SENDER_NOT_FOUND\",e.CREATE_OFFER_FAILED=\"CREATE_OFFER_FAILED\",e.SET_ANSWER_FAILED=\"SET_ANSWER_FAILED\",e.ICE_FAILED=\"ICE_FAILED\",e.PC_CLOSED=\"PC_CLOSED\",e.SENDER_REPLACE_FAILED=\"SENDER_REPLACE_FAILED\",e.GET_LOCAL_CAPABILITIES_FAILED=\"GET_LOCAL_CAPABILITIES_FAILED\",e.GET_LOCAL_CONNECTION_PARAMS_FAILED=\"GET_LOCAL_CONNECTION_PARAMS_FAILED\",e.SUBSCRIBE_FAILED=\"SUBSCRIBE_FAILED\",e.UNSUBSCRIBE_FAILED=\"UNSUBSCRIBE_FAILED\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NO_ICE_CANDIDATE=\"NO_ICE_CANDIDATE\",e.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS=\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",e.EXIST_DISABLED_VIDEO_TRACK=\"EXIST_DISABLED_VIDEO_TRACK\",e.INVALID_REMOTE_USER=\"INVALID_REMOTE_USER\",e.REMOTE_USER_IS_NOT_PUBLISHED=\"REMOTE_USER_IS_NOT_PUBLISHED\",e.CUSTOM_REPORT_SEND_FAILED=\"CUSTOM_REPORT_SEND_FAILED\",e.CUSTOM_REPORT_FREQUENCY_TOO_HIGH=\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",e.FETCH_AUDIO_FILE_FAILED=\"FETCH_AUDIO_FILE_FAILED\",e.READ_LOCAL_AUDIO_FILE_ERROR=\"READ_LOCAL_AUDIO_FILE_ERROR\",e.DECODE_AUDIO_FILE_FAILED=\"DECODE_AUDIO_FILE_FAILED\",e.WS_ABORT=\"WS_ABORT\",e.WS_DISCONNECT=\"WS_DISCONNECT\",e.WS_ERR=\"WS_ERR\",e.EXTERNAL_SIGNAL_ABORT=\"EXTERNAL_SIGNAL_ABORT\",e.LIVE_STREAMING_TASK_CONFLICT=\"LIVE_STREAMING_TASK_CONFLICT\",e.LIVE_STREAMING_INVALID_ARGUMENT=\"LIVE_STREAMING_INVALID_ARGUMENT\",e.LIVE_STREAMING_INTERNAL_SERVER_ERROR=\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",e.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED=\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",e.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED=\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",e.LIVE_STREAMING_CDN_ERROR=\"LIVE_STREAMING_CDN_ERROR\",e.LIVE_STREAMING_INVALID_RAW_STREAM=\"LIVE_STREAMING_INVALID_RAW_STREAM\",e.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT=\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",e.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE=\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",e.LIVE_STREAMING_WARN_FREQUENT_REQUEST=\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",e.WEBGL_INTERNAL_ERROR=\"WEBGL_INTERNAL_ERROR\",e.BEAUTY_PROCESSOR_INTERNAL_ERROR=\"BEAUTY_PROCESSOR_INTERNAL_ERROR\",e.CROSS_CHANNEL_WAIT_STATUS_ERROR=\"CROSS_CHANNEL_WAIT_STATUS_ERROR\",e.CROSS_CHANNEL_FAILED_JOIN_SRC=\"CROSS_CHANNEL_FAILED_JOIN_SEC\",e.CROSS_CHANNEL_FAILED_JOIN_DEST=\"CROSS_CHANNEL_FAILED_JOIN_DEST\",e.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST=\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",e.CROSS_CHANNEL_SERVER_ERROR_RESPONSE=\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",e.METADATA_OUT_OF_RANGE=\"METADATA_OUT_OF_RANGE\",e.LOCAL_AEC_ERROR=\"LOCAL_AEC_ERROR\",e.INVALID_PLUGIN=\"INVALID_PLUGIN\",e.DISCONNECT_P2P=\"DISCONNECT_P2P\",e.CONVERTING_IMAGEDATA_TO_BLOB_FAILED=\"CONVERTING_IMAGEDATA_TO_BLOB_FAILED\",e.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED=\"CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED\",e.INIT_DATACHANNEL_TIMEOUT=\"INIT_DATACHANNEL_TIMEOUT\",e.CREATE_DATACHANNEL_ERROR=\"CREATE_DATACHANNEL_ERROR\",e.DATACHANNEL_CONNECTION_TIMEOUT=\"DATACHANNEL_CONNECTION_TIMEOUT\",e.PROHIBITED_OPERATION=\"PROHIBITED_OPERATION\",e.IMAGE_MODERATION_UPLOAD_FAILED=\"IMAGE_MODERATION_UPLOAD_FAILED\",e.P2P_MESSAGE_FAILED=\"P2P_MESSAGE_FAILED\",e}({}),rv=class extends Error{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",i=arguments.length>2?arguments[2]:void 0;super(t),ev(this,\"code\",void 0),ev(this,\"message\",void 0),ev(this,\"data\",void 0),ev(this,\"name\",\"AgoraRTCException\"),this.code=e,this.message=\"AgoraRTCError \".concat(this.code,\": \").concat(t),this.data=i}toString(){return this.data?\"data: \".concat(JSON.stringify(this.data),\"\\n\").concat(this.stack):\"\".concat(this.stack)}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\",t=arguments.length>1?arguments[1]:void 0;return\"error\"===e&&(t||console).error(this.toString()),\"warning\"===e&&(t||console).warn(this.toString()),this}throw(e){throw this.print(\"error\",e),this}};function ov(e,t){if(\"boolean\"!=typeof e)throw new rv(nv.INVALID_PARAMS,\"Invalid \".concat(t,\": The value is of the boolean type.\"))}function sv(e,t,i){if(!Dn(i).call(i,e))throw new rv(nv.INVALID_PARAMS,\"\".concat(t,\" can only be set as \").concat(JSON.stringify(i)))}function av(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e4;if(e<i||e>n||(!(arguments.length>4&&void 0!==arguments[4])||arguments[4])&&!function(e){return\"number\"==typeof e&&e%1==0}(e))throw new rv(nv.INVALID_PARAMS,\"invalid \".concat(t,\": the value range is [\").concat(i,\", \").concat(n,\"]. integer only\"))}function cv(e,t){if(\"number\"!=typeof e){if(!(e.min||e.max||e.ideal||e.exact))throw new rv(nv.INVALID_PARAMS,\"\".concat(t,\" is not a valid ConstrainLong\"));void 0!==e.min&&av(e.min,\"\".concat(t,\".min\"),0,1/0),void 0!==e.max&&av(e.max,\"\".concat(t,\".max\"),1,1/0),void 0!==e.exact&&av(e.exact,\"\".concat(t,\".exact\"),1,1/0),void 0!==e.ideal&&av(e.ideal,\"\".concat(t,\".ideal\"),1,1/0)}else av(e,t,1,1/0)}function dv(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:255,r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(null==e)throw new rv(nv.INVALID_PARAMS,\"\".concat(t||\"param\",\" cannot be empty\"));if(!hv(e,i,n,r))throw new rv(nv.INVALID_PARAMS,\"Invalid \".concat(t||\"string param\",\": Length of the string: [\").concat(i,\",\").concat(n,\"].\").concat(r?\" ASCII characters only.\":\"\"))}function lv(e,t){if(!Array.isArray(e))throw new rv(nv.INVALID_PARAMS,\"\".concat(t,\" should be an array\"))}function uv(e){return null==e}function hv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:255,n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return\"string\"==typeof e&&e.length<=i&&e.length>=t&&(!n||function(e){if(\"string\"!=typeof e)return!1;for(let t=0;t<e.length;t+=1){const i=e.charCodeAt(t);if(i<0||i>255)return!1}return!0}(e))}var pv=function(e){return e.COVERED=\"COVERED\",e.POSITION=\"POSITION\",e.SIZE=\"SIZE\",e.STYLE=\"STYLE\",e}(pv||{}),_v=function(e){return e.UNMOUNTED=\"UNMOUNTED\",e.INVALID_HTML_ELEMENT=\"INVALID_HTML_ELEMENT\",e}(_v||{});const Ev=new class{constructor(){ev(this,\"_clientSize\",null),ev(this,\"getClientWidth\",(()=>document.documentElement?document.documentElement.clientWidth:document.body.clientWidth)),ev(this,\"getClientHeight\",(()=>document.documentElement?document.documentElement.clientHeight:document.body.clientHeight)),ev(this,\"getStyle\",(e=>window.getComputedStyle(e,null))),ev(this,\"checkCssVisibleProperty\",(e=>{var t;let i=!0;const n=this.getStyle(e),{display:r,visibility:o,opacity:s,filter:a}=n;return(\"none\"===r||Dn(t=[\"hidden\",\"collapse\"]).call(t,o)||Number(s)<.1)&&(i=!1),!!i&&(a&&a.split(\" \").filter((e=>{var t;const i=e.split(\"(\")[0];return Dn(t=[\"brightness\",\"blur\",\"opacity\"]).call(t,i)})).map((e=>{const[t,i]=e.split(/\\(|\\)/);return[t,Number(i.match(/^[0-9\\.]+/))]})).forEach((e=>{const[t,n]=e;switch(t){case\"brightness\":(n<.1||n>3)&&(i=!1);break;case\"blur\":n>3&&(i=!1);break;case\"opacity\":n<.1&&(i=!1)}})),i)})),ev(this,\"checkPropertyUpToAllParentNodes\",((e,t)=>{let i=!0,n=!0;const r=e=>t(e);let o=e;for(;o&&n;)r(o)||(i=!1,n=!1),o=o.parentElement,o||(n=!1);return i})),ev(this,\"checkActualCssVisibleIncludeInherit\",(e=>this.checkPropertyUpToAllParentNodes(e,this.checkCssVisibleProperty))),ev(this,\"getSizeAboutClient\",(e=>{const{width:t,height:i,left:n,right:r,top:o,bottom:s}=e.getBoundingClientRect(),a=this.getClientWidth(),c=this.getClientHeight();return{width:t,height:i,left:n,right:r,top:o,bottom:s,clientWidth:a,clientHeight:c,clientMin:Math.min(a,c)}})),ev(this,\"checkActualSize\",(()=>{const{width:e,height:t,clientMin:i}=this._clientSize;return this.checkSizeIsVisible(e,t,i)})),ev(this,\"elementFromPoint\",((e,t)=>document.elementFromPoint?document.elementFromPoint(e,t):null)),ev(this,\"checkCoverForAPoint\",((e,t,i)=>{const n=this.elementFromPoint(e,t);return null!==n&&n!==i})),ev(this,\"getPointPositionList\",(()=>{const{width:e,height:t,left:i,top:n}=this._clientSize,r=e/6,o=t/6,s=[],a=10**6;for(let e=0;e<5;e++)for(let t=0;t<5;t++){const c=(i*a+(0===e?.1:4===e?(r*e*a-1e5)/a:r*e)*a)/a,d=(n*a+(0===t?.1:4===t?(o*t*a-1e5)/a:o*t)*a)/a;s.push({x:c,y:d})}return[...s]})),ev(this,\"checkElementCover\",(e=>this.getPointPositionList().map((t=>this.checkCoverForAPoint(t.x,t.y,e))).filter((e=>!!e)).length>6)),ev(this,\"checkSizeIsVisible\",((e,t,i)=>(e>50||i/e<=10)&&(t>50||i/t<=10))),ev(this,\"checkSizeOfPartInClient\",(()=>{const{left:e,right:t,top:i,bottom:n,clientHeight:r,clientWidth:o,clientMin:s}=this._clientSize;let a,c,d,l;if(e<0)a=0;else{if(!(e<o))return!1;a=e}if(t<0)return!1;if(c=t<o?t:o,i<0)d=0;else{if(!(i<r))return!1;d=i}if(n<0)return!1;l=n<r?n:r;const u=c-a,h=l-d;return this.checkSizeIsVisible(u,h,s)})),ev(this,\"returnHiddenResult\",(e=>(this._clientSize=null,{visible:!1,reason:e}))),ev(this,\"checkOneElementVisible\",(e=>{if(e instanceof HTMLElement){if(this.checkElementIsMountedOnDom(e)){if(this.checkActualCssVisibleIncludeInherit(e)){if(this._clientSize=this.getSizeAboutClient(e),this.checkElementCover(e))return this.returnHiddenResult(pv.COVERED);{const e=this.checkActualSize(),t=this.checkSizeOfPartInClient();return e&&!t?this.returnHiddenResult(pv.POSITION):e?(this._clientSize=null,{visible:!0}):this.returnHiddenResult(pv.SIZE)}}return this.returnHiddenResult(pv.STYLE)}return this.returnHiddenResult(_v.UNMOUNTED)}return this.returnHiddenResult(_v.INVALID_HTML_ELEMENT)})),ev(this,\"checkElementIsMountedOnDom\",(e=>this.checkPropertyUpToAllParentNodes(e,(e=>\"HTML\"!==e.nodeName.toUpperCase()?null!==e.parentElement:!!document.documentElement))))}};function mv(e){return(new TextEncoder).encode(e)}const fv=function(e,t){const i=new Uint8Array(e.byteLength+t.byteLength);return i.set(new Uint8Array(e),0),i.set(new Uint8Array(t),e.byteLength),i};const Tv=async e=>function(e,t){let i=\"\";return new Uint8Array(e).forEach((e=>{i+=e.toString(t).padStart(2,\"0\")})),i}(await crypto.subtle.digest(\"SHA-256\",mv(e)),16);let Sv=class{constructor(){ev(this,\"_events\",{}),ev(this,\"addListener\",this.on)}getListeners(e){return this._events[e]?this._events[e].map((e=>e.listener)):[]}on(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const i=this._events[e],n=this._indexOfListener(i,t);-1!==n&&i.splice(n,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map((e=>e));for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];for(let i=0;i<t.length;i+=1){const r=t[i];r.once&&this.off(e,r.listener),r.listener.apply(this,n||[])}}safeEmit(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];[...this._events[e]||[]].forEach((t=>{t.once&&this.off(e,t.listener);try{t.listener.apply(this,i)}catch(t){console.error(\"safeEmit event:\".concat(e,\" error \").concat(null==t?void 0:t.toString()))}}))}_indexOfListener(e,t){let i=e.length;for(;i--;)if(e[i].listener===t)return i;return-1}};let gv=null;function Rv(){if(gv)return gv;if(window.electron)return gv=window.electron;if(!window.require)return null;try{return gv=window.require(\"electron\"),gv}catch(e){return null}}let Cv=function(e){return e.CREATE_CLIENT=\"createClient\",e.CHECK_SYSTEM_REQUIREMENTS=\"checkSystemRequirements\",e.SET_AREA=\"setArea\",e.PRELOAD=\"PRELOAD\",e.CHECK_VIDEO_TRACK_IS_ACTIVE=\"checkVideoTrackIsActive\",e.CHECK_AUDIO_TRACK_IS_ACTIVE=\"checkAudioTrackIsActive\",e.CREATE_MIC_AUDIO_TRACK=\"createMicrophoneAudioTrack\",e.CREATE_CUSTOM_AUDIO_TRACK=\"createCustomAudioTrack\",e.CREATE_BUFFER_AUDIO_TRACK=\"createBufferSourceAudioTrack\",e.CREATE_CAM_VIDEO_TRACK=\"createCameraVideoTrack\",e.CREATE_CUSTOM_VIDEO_TRACK=\"createCustomVideoTrack\",e.CREATE_MIC_AND_CAM_TRACKS=\"createMicrophoneAndCameraTracks\",e.CREATE_SCREEN_VIDEO_TRACK=\"createScreenVideoTrack\",e.SET_ENCRYPTION_CONFIG=\"Client.setEncryptionConfig\",e.START_PROXY_SERVER=\"Client.startProxyServer\",e.STOP_PROXY_SERVER=\"Client.stopProxyServer\",e.SET_PROXY_SERVER=\"Client.setProxyServer\",e.SET_TURN_SERVER=\"Client.setTurnServer\",e.SET_CLIENT_ROLE=\"Client.setClientRole\",e.SET_LOW_STREAM_PARAMETER=\"Client.setLowStreamParameter\",e.ENABLE_DUAL_STREAM=\"Client.enableDualStream\",e.DISABLE_DUAL_STREAM=\"Client.disableDualStream\",e.JOIN=\"Client.join\",e.LEAVE=\"Client.leave\",e.PUBLISH=\"Client.publish\",e.UNPUBLISH=\"Client.unpublish\",e.SUBSCRIBE=\"Client.subscribe\",e.MASS_SUBSCRIBE=\"Client.massSubscribe\",e.MASS_UNSUBSCRIBE=\"Client.massUnsubscribe\",e.UNSUBSCRIBE=\"Client.unsubscribe\",e.RENEW_TOKEN=\"Client.renewToken\",e.SET_REMOTE_VIDEO_STREAM_TYPE=\"Client.setRemoteVideoStreamType\",e.SET_STREAM_FALLBACK_OPTION=\"Client.setStreamFallbackOption\",e.ENABLE_AUDIO_VOLUME_INDICATOR=\"Client.enableAudioVolumeIndicator\",e.SEND_CUSTOM_REPORT_MESSAGE=\"Client.sendCustomReportMessage\",e.INSPECT_VIDEO_CONTENT=\"Client.inspectVideoContent\",e.STOP_INSPECT_VIDEO_CONTENT=\"Client.stopInspectVideoContent\",e.JOIN_FALLBACK_TO_PROXY=\"Client._joinFallbackToProxy\",e.ON_LIVE_STREAM_WARNING=\"Client.onLiveStreamWarning\",e.ON_LIVE_STREAM_ERROR=\"Client.onLiveStreamingError\",e.START_LIVE_STREAMING=\"Client.startLiveStreaming\",e.SET_LIVE_TRANSCODING=\"Client.setLiveTranscoding\",e.STOP_LIVE_STREAMING=\"Client.stopLiveStreaming\",e.START_CHANNEL_MEDIA_RELAY=\"Client.startChannelMediaRelay\",e.UPDATE_CHANNEL_MEDIA_RELAY=\"Client.updateChannelMediaRelay\",e.STOP_CHANNEL_MEDIA_RELAY=\"Client.stopChannelMediaRelay\",e.REQUEST_CONFIG_DISTRIBUTE=\"_config-distribute-request\",e.SET_CONFIG_DISTRIBUTE=\"_configDistribute\",e.LOCAL_TRACK_SET_MUTED=\"LocalTrack.setMute\",e.LOCAL_AUDIO_TRACK_PLAY=\"LocalAudioTrack.play\",e.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT=\"LocalAudioTrack.playInElement\",e.LOCAL_AUDIO_TRACK_STOP=\"LocalAudioTrack.stop\",e.LOCAL_AUDIO_TRACK_SET_VOLUME=\"LocalAudioTrack.setVolume\",e.MIC_AUDIO_TRACK_SET_DEVICE=\"MicrophoneAudioTrack.setDevice\",e.BUFFER_AUDIO_TRACK_START=\"BufferSourceAudioTrack.startProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_STOP=\"BufferSourceAudioTrack.stopProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_PAUSE=\"BufferSourceAudioTrack.pauseProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_RESUME=\"BufferSourceAudioTrack.resumeProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_SEEK=\"BufferSourceAudioTrack.seekAudioBuffer\",e.LOCAL_VIDEO_TRACK_PLAY=\"LocalVideoTrack.play\",e.LOCAL_VIDEO_TRACK_STOP=\"LocalVideoTrack.stop\",e.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"LocalVideoTrack.getVideoElementVisibleStatus\",e.LOCAL_VIDEO_TRACK_BEAUTY=\"LocalVideoTrack.setBeautyEffect\",e.LOCAL_VIDEO_SEND_SEI_DATA=\"LocalVideoTrack.sendSeiData\",e.CAM_VIDEO_TRACK_SET_DEVICE=\"CameraVideoTrack.setDevice\",e.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG=\"CameraVideoTrack.setEncoderConfiguration\",e.REMOTE_VIDEO_TRACK_PLAY=\"RemoteVideoTrack.play\",e.REMOTE_VIDEO_TRACK_STOP=\"RemoteVideoTrack.stop\",e.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"RemoteVideoTrack.getVideoElementVisibleStatus\",e.REMOTE_AUDIO_TRACK_PLAY=\"RemoteAudioTrack.play\",e.REMOTE_AUDIO_TRACK_STOP=\"RemoteAudioTrack.stop\",e.REMOTE_AUDIO_SET_VOLUME=\"RemoteAudioTrack.setVolume\",e.REMOTE_AUDIO_SET_OUTPUT_DEVICE=\"RemoteAudioTrack.setOutputDevice\",e.GET_MEDIA_STREAM_TRACK=\"Track.getMediaStreamTrack\",e.STREAM_TYPE_CHANGE=\"streamTypeChange\",e.CONNECTION_STATE_CHANGE=\"connectionStateChange\",e.LOAD_CONFIG_FROM_LOCALSTORAGE=\"loadConfigFromLocalStorage\",e.IMAGE_MODERATION_UPLOAD=\"imageModerationUpload\",e}({}),Iv=function(e){return e.TRACER=\"tracer\",e}({});function vv(e){return av(e.timeout,\"config.timeout\",0,1e5),av(e.timeoutFactor,\"config.timeoutFactor\",0,100,!1),av(e.maxRetryCount,\"config.maxRetryConfig\",0,1/0),av(e.maxRetryTimeout,\"config.maxRetryTimeout\",0,1/0),!0}let yv=function(e){return e[e.AUDIENCE_LEVEL_LOW_LATENCY=1]=\"AUDIENCE_LEVEL_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_ULTRA_LOW_LATENCY=2]=\"AUDIENCE_LEVEL_ULTRA_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_SYNC_LATENCY=3]=\"AUDIENCE_LEVEL_SYNC_LATENCY\",e}({}),Av=function(e){return e.LEAVE=\"LEAVE\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.UID_BANNED=\"UID_BANNED\",e.FALLBACK=\"FALLBACK\",e.IP_BANNED=\"IP_BANNED\",e.CHANNEL_BANNED=\"CHANNEL_BANNED\",e.LICENSE_MISSING=\"LICENSE_MISSING\",e.LICENSE_EXPIRED=\"LICENSE_EXPIRED\",e.LICENSE_MINUTES_EXCEEDED=\"LICENSE_MINUTES_EXCEEDED\",e.LICENSE_PERIOD_INVALID=\"LICENSE_PERIOD_INVALID\",e.LICENSE_MULTIPLE_SDK_SERVICE=\"LICENSE_MULTIPLE_SDK_SERVICE\",e.LICENSE_ILLEGAL=\"LICENSE_ILLEGAL\",e.TOKEN_EXPIRE=\"TOKEN_EXPIRE\",e}({});function bv(e){if(!Array.isArray(e)||e.length<1)return!1;try{e.forEach((e=>{if(!e.urls)throw Error()}))}catch(e){return!1}return!0}function wv(e){return dv(e.turnServerURL,\"turnServerURL\"),dv(e.username,\"username\"),dv(e.password,\"password\"),e.udpport&&av(e.udpport,\"udpport\",1,99999,!0),e.forceturn&&ov(e.forceturn,\"forceturn\"),e.security&&ov(e.security,\"security\"),e.tcpport&&av(e.tcpport,\"tcpport\",1,99999,!0),!0}function Ov(e){return void 0!==e.level&&sv(e.level,\"level\",[1,2,3]),void 0!==e.delay&&av(e.delay,\"delay\",0,3e3,!0),!0}let Nv=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.MEDIA_RECONNECT_START=\"media-reconnect-start\",e.MEDIA_RECONNECT_END=\"media-reconnect-end\",e.IS_USING_CLOUD_PROXY=\"is-using-cloud-proxy\",e.USER_JOINED=\"user-joined\",e.USER_LEAVED=\"user-left\",e.USER_PUBLISHED=\"user-published\",e.USER_UNPUBLISHED=\"user-unpublished\",e.USER_INFO_UPDATED=\"user-info-updated\",e.CLIENT_BANNED=\"client-banned\",e.CHANNEL_MEDIA_RELAY_STATE=\"channel-media-relay-state\",e.CHANNEL_MEDIA_RELAY_EVENT=\"channel-media-relay-event\",e.VOLUME_INDICATOR=\"volume-indicator\",e.CRYPT_ERROR=\"crypt-error\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"token-privilege-will-expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"token-privilege-did-expire\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGED=\"stream-type-changed\",e.STREAM_FALLBACK=\"stream-fallback\",e.RECEIVE_METADATA=\"receive-metadata\",e.STREAM_MESSAGE=\"stream-message\",e.LIVE_STREAMING_ERROR=\"live-streaming-error\",e.LIVE_STREAMING_WARNING=\"live-streaming-warning\",e.EXCEPTION=\"exception\",e.ERROR=\"error\",e.P2P_LOST=\"p2p_lost\",e.JOIN_FALLBACK_TO_PROXY=\"join-fallback-to-proxy\",e.CHANNEL_FALLBACK_TO_WEBSOCKET=\"channel-fallback-to-websocket\",e.MEDIA_CONNECTION_TYPE_CHANGE=\"media-connection-type-change\",e.PUBLISHED_USER_LIST=\"published-user-list\",e.CONTENT_INSPECT_CONNECTION_STATE_CHANGE=\"content-inspect-connection-state-change\",e.CONTENT_INSPECT_ERROR=\"content-inspect-error\",e.CONTENT_INSPECT_RESULT=\"content-inspect-result\",e.IMAGE_MODERATION_CONNECTION_STATE_CHANGE=\"image-moderation-connection-state-change\",e}({}),Dv=function(e){return e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\",e}({}),Pv=function(e){return e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\",e}({}),Lv=function(e){return e.NETWORK_STATE_CHANGE=\"NETWORK_STATE_CHANGE\",e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\",e}({});function kv(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return 0===e.getListeners(t).length?Gh.reject(new rv(nv.UNEXPECTED_ERROR,\"can not emit promise\")):new Gh(((i,r)=>{e.emit(t,...n,i,r)}))}function Mv(e,t){if(0===e.getListeners(t).length)return Gh.resolve();for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return kv(e,t,...n)}function Uv(e,t){if(0===e.getListeners(t).length)return null;for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return xv(e,t,...n)}function xv(e,t){let i=null,n=null;for(var r=arguments.length,o=new Array(r>2?r-2:0),s=2;s<r;s++)o[s-2]=arguments[s];if(e.emit(t,...o,(e=>{i=e}),(e=>{n=e})),null!==n)throw n;if(null===i)throw new rv(nv.UNEXPECTED_ERROR,\"handler is not sync\");return i}const Vv=new class extends Sv{set networkState(e){this.emit(Lv.NETWORK_STATE_CHANGE,e,this._networkState),e===Pv.ONLINE?this.emit(Lv.ONLINE):e===Pv.OFFLINE&&(this.onlineWaiter=new Gh((e=>{this.once(Lv.ONLINE,(()=>{this.onlineWaiter=void 0,e(Pv.ONLINE)}))})),this.emit(Lv.OFFLINE)),this._networkState=e}get networkState(){return this._networkState}get isOnline(){return this._networkState===Pv.ONLINE}constructor(){super(),ev(this,\"_moduleName\",\"network-indicator\"),ev(this,\"_networkState\",Pv.ONLINE),ev(this,\"onlineWaiter\",void 0),window.addEventListener(\"online\",(()=>{this.networkState=Pv.ONLINE})),window.addEventListener(\"offline\",(()=>{this.networkState=Pv.OFFLINE}))}};function Fv(e,t){const i=e.indexOf(t);-1!==i&&e.splice(i,1)}function Bv(e){const t=[];return e.forEach((e=>{-1===t.indexOf(e)&&t.push(e)})),t}function jv(e){void 0!==Gh?Gh.resolve().then(e):setTimeout(e,0)}function Gv(e){return JSON.parse(JSON.stringify(e))}function Wv(e){try{return Gv(e)}catch(t){return e}}const Hv={};function Kv(e,t){Hv[t]||(Hv[t]=!0,e())}function Yv(e){const t=window.atob(e),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}function qv(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}function zv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16,i=(new TextEncoder).encode(e);if(i.length>t)i=i.slice(0,t);else if(i.length<t){const e=new Uint8Array(t);e.set(i),i=e}return i}function Jv(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=Jn(t).call(t,((e,t)=>e+t.length),0),r=new Uint8Array(new ArrayBuffer(n));let o=0;return t.forEach((e=>{r.set(e,o),o+=e.length})),r}function Xv(e){return window.TextEncoder?(new TextEncoder).encode(e).length:e.length}function Qv(e){let t=0;return(/DingTalk/i.test(navigator.userAgent)||/AliApp/i.test(navigator.userAgent))&&e.realFormData&&(e=e.realFormData),e.forEach((e=>{t+=\"string\"==typeof e?Xv(e):e.size})),t+138}function Zv(e){const t=new rv(nv.TIMEOUT,\"timeout\");return new Gh(((i,n)=>{window.setTimeout((()=>n(t)),e)}))}function $v(e){return new Gh((t=>{window.setTimeout(t,e)}))}function ey(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const i=Math.random().toString(16).substr(2,e).toLowerCase();return i.length===e?\"\".concat(t).concat(i):\"\".concat(t).concat(i)+ey(e-i.length,\"\")}function ty(){return ey(32,\"\").toUpperCase()}const iy=()=>{},ny=new class{constructor(){ev(this,\"fnMap\",new Map)}throttleByKey(e,t,i,n){for(var r=arguments.length,o=new Array(r>4?r-4:0),s=4;s<r;s++)o[s-4]=arguments[s];if(this.fnMap.has(t)){const r=this.fnMap.get(t);if(r.threshold!==i){r.fn(...r.args),clearTimeout(r.timer);const s=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:s,args:o,skipFn:n})}else r.skipFn&&r.skipFn(...r.args),this.fnMap.set(t,iv(iv({},r),{},{fn:e,args:o,skipFn:n}))}else{const r=window.setTimeout((()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)}),i);this.fnMap.set(t,{fn:e,threshold:i,timer:r,args:o,skipFn:n})}}},ry=ny.throttleByKey.bind(ny);function oy(e){return\"object\"==typeof e&&null!==e&&!(e instanceof RegExp)}function sy(e,t){if(!oy(e)||!oy(t))return t;if(Array.isArray(e)&&!Array.isArray(t)||!Array.isArray(e)&&Array.isArray(t))return t;if(Array.isArray(t)&&Array.isArray(e)){const i=[...e];for(let n=0;n<t.length;n++)i[n]=sy(e[n],t[n]);return i}{const i=iv({},e);for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(Object.prototype.hasOwnProperty.call(e,n)?i[n]=sy(e[n],t[n]):i[n]=t[n]);return i}}function ay(e,t){let i=[0];if(t&&(i=new Array(t).fill(0)),0===e)return i;let n=0;for(;e>0&&(i[n]=255&e,e>>=8,n++,!t||n!==t););return i}function cy(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function dy(e){const t=\"0123456789abcdef\";function i(e){let i,n=\"\";for(i=0;i<=3;i++)n+=t.charAt(e>>8*i+4&15)+t.charAt(e>>8*i&15);return n}function n(e,t){const i=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(i>>16)<<16|65535&i}function r(e,t,i,r,o,s){return n(function(e,t){return e<<t|e>>>32-t}(n(n(t,e),n(r,s)),o),i)}function o(e,t,i,n,o,s,a){return r(t&i|~t&n,e,t,o,s,a)}function s(e,t,i,n,o,s,a){return r(t&n|i&~n,e,t,o,s,a)}function a(e,t,i,n,o,s,a){return r(t^i^n,e,t,o,s,a)}function c(e,t,i,n,o,s,a){return r(i^(t|~n),e,t,o,s,a)}const d=function(e){let t;const i=1+(e.length+8>>6),n=new Array(16*i);for(t=0;t<16*i;t++)n[t]=0;for(t=0;t<e.length;t++)n[t>>2]|=e.charCodeAt(t)<<t%4*8;return n[t>>2]|=128<<t%4*8,n[16*i-2]=8*e.length,n}(e);let l,u,h,p,_,E=1732584193,m=-271733879,f=-1732584194,T=271733878;for(l=0;l<d.length;l+=16)u=E,h=m,p=f,_=T,E=o(E,m,f,T,d[l+0],7,-680876936),T=o(T,E,m,f,d[l+1],12,-389564586),f=o(f,T,E,m,d[l+2],17,606105819),m=o(m,f,T,E,d[l+3],22,-1044525330),E=o(E,m,f,T,d[l+4],7,-176418897),T=o(T,E,m,f,d[l+5],12,1200080426),f=o(f,T,E,m,d[l+6],17,-1473231341),m=o(m,f,T,E,d[l+7],22,-45705983),E=o(E,m,f,T,d[l+8],7,1770035416),T=o(T,E,m,f,d[l+9],12,-1958414417),f=o(f,T,E,m,d[l+10],17,-42063),m=o(m,f,T,E,d[l+11],22,-1990404162),E=o(E,m,f,T,d[l+12],7,1804603682),T=o(T,E,m,f,d[l+13],12,-40341101),f=o(f,T,E,m,d[l+14],17,-1502002290),m=o(m,f,T,E,d[l+15],22,1236535329),E=s(E,m,f,T,d[l+1],5,-165796510),T=s(T,E,m,f,d[l+6],9,-1069501632),f=s(f,T,E,m,d[l+11],14,643717713),m=s(m,f,T,E,d[l+0],20,-373897302),E=s(E,m,f,T,d[l+5],5,-701558691),T=s(T,E,m,f,d[l+10],9,38016083),f=s(f,T,E,m,d[l+15],14,-660478335),m=s(m,f,T,E,d[l+4],20,-405537848),E=s(E,m,f,T,d[l+9],5,568446438),T=s(T,E,m,f,d[l+14],9,-1019803690),f=s(f,T,E,m,d[l+3],14,-187363961),m=s(m,f,T,E,d[l+8],20,1163531501),E=s(E,m,f,T,d[l+13],5,-1444681467),T=s(T,E,m,f,d[l+2],9,-51403784),f=s(f,T,E,m,d[l+7],14,1735328473),m=s(m,f,T,E,d[l+12],20,-1926607734),E=a(E,m,f,T,d[l+5],4,-378558),T=a(T,E,m,f,d[l+8],11,-2022574463),f=a(f,T,E,m,d[l+11],16,1839030562),m=a(m,f,T,E,d[l+14],23,-35309556),E=a(E,m,f,T,d[l+1],4,-1530992060),T=a(T,E,m,f,d[l+4],11,1272893353),f=a(f,T,E,m,d[l+7],16,-155497632),m=a(m,f,T,E,d[l+10],23,-1094730640),E=a(E,m,f,T,d[l+13],4,681279174),T=a(T,E,m,f,d[l+0],11,-358537222),f=a(f,T,E,m,d[l+3],16,-722521979),m=a(m,f,T,E,d[l+6],23,76029189),E=a(E,m,f,T,d[l+9],4,-640364487),T=a(T,E,m,f,d[l+12],11,-421815835),f=a(f,T,E,m,d[l+15],16,530742520),m=a(m,f,T,E,d[l+2],23,-995338651),E=c(E,m,f,T,d[l+0],6,-198630844),T=c(T,E,m,f,d[l+7],10,1126891415),f=c(f,T,E,m,d[l+14],15,-1416354905),m=c(m,f,T,E,d[l+5],21,-57434055),E=c(E,m,f,T,d[l+12],6,1700485571),T=c(T,E,m,f,d[l+3],10,-1894986606),f=c(f,T,E,m,d[l+10],15,-1051523),m=c(m,f,T,E,d[l+1],21,-2054922799),E=c(E,m,f,T,d[l+8],6,1873313359),T=c(T,E,m,f,d[l+15],10,-30611744),f=c(f,T,E,m,d[l+6],15,-1560198380),m=c(m,f,T,E,d[l+13],21,1309151649),E=c(E,m,f,T,d[l+4],6,-145523070),T=c(T,E,m,f,d[l+11],10,-1120210379),f=c(f,T,E,m,d[l+2],15,718787259),m=c(m,f,T,E,d[l+9],21,-343485551),E=n(E,u),m=n(m,h),f=n(f,p),T=n(T,_);return i(E)+i(m)+i(f)+i(T)}let ly=1,uy=console,hy=class{static setLogger(e){uy=e}constructor(e){ev(this,\"lockingPromise\",Gh.resolve()),ev(this,\"locks\",0),ev(this,\"name\",\"\"),ev(this,\"lockId\",void 0),this.lockId=ly++,e&&(this.name=e),uy.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is created.\"))}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1,uy.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\"));const i=new Gh((i=>{t=()=>{this.locks-=1,uy.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is not locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\")),i()}})),n=this.lockingPromise.then((()=>t));return this.lockingPromise=this.lockingPromise.then((()=>i)),n}};function py(e,t){return function(i,n,r){const o=r.value;if(\"function\"!=typeof o)throw new Error(\"Cannot use mutex on object property.\");return r.value=async function(){const i=this[t];if(!i)throw new Error(\"mutex property key \".concat(t,\" doesn't exist on \").concat(e));const r=await i.lock(\"From \".concat(e,\".\").concat(n));try{for(var s=arguments.length,a=new Array(s),c=0;c<s;c++)a[c]=arguments[c];return await o.apply(this,a)}finally{r()}},r}}const _y={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1e4};function Ey(e,t){const i=Math.floor(t.timeout*Math.pow(t.timeoutFactor,e));return Math.min(t.maxRetryTimeout,i)}function my(e,t,i,n){const r=Object.assign({},_y,n);let o=r.timeout;const s=async()=>{await function(e){return new Gh((t=>{window.setTimeout(t,e)}))}(o),o*=r.timeoutFactor,o=Math.min(r.maxRetryTimeout,o)};let a=!1;const c=new Gh((async(n,o)=>{t=t||(()=>!1),i=i||(()=>!0);for(let c=0;c<r.maxRetryCount;c+=1){if(a)return o(new rv(nv.OPERATION_ABORTED));try{const i=await e();if(!t(i,c))return n(i);if(c+1===r.maxRetryCount)return n(i);await s()}catch(e){if(!i(e,c))return o(e);if(c+1===r.maxRetryCount)return o(e);await s()}}}));return c.cancel=()=>a=!0,c}class fy{constructor(e){ev(this,\"input\",[]),ev(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}mean(){var e;return 0===this.input.length?0:Jn(e=this.input).call(e,((e,t)=>e+t))/this.input.length}}let Ty,Sy=0,gy=0;function Ry(e,t,i,n){return new Gh(((r,o)=>{t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),Sy+=Xv(t.data)):i&&(t.data.size?Sy+=t.data.size:t.data instanceof FormData?Sy+=Qv(t.data):Sy+=Xv(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,EI.request(t).then((e=>{\"string\"==typeof e.data?gy+=Xv(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?gy+=e.data.byteLength:gy+=Xv(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{EI.isCancel(e)?o(new rv(nv.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?o(new rv(nv.NETWORK_TIMEOUT,e.message)):e.response?o(new rv(nv.NETWORK_RESPONSE_ERROR,e.response.status)):o(new rv(nv.NETWORK_ERROR,e.message))}))}))}async function Cy(e,t){const i=new Blob([t.data],{type:\"buffer\"});return await Ry(e,iv(iv({},t),{},{data:i,headers:{\"Content-Type\":\"application/octet-stream\"}}),!0)}const Iy=()=>void 0!==window.isSecureContext;const vy=function(e){if(e.match(/[0-9]+\\.[0-9]+\\.[0-9]+$/))return e;const t=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-alpha\\.([0-9]+)/);if(t&&t[1]&&t[2]){const e=t[1],i=t[2];return\"\".concat(e,\".\").concat(i)}const i=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-special\\.([0-9]+)/);if(i&&i[1]&&i[2]){const e=i[1],t=i[2];return\"\".concat(e,\".\").concat(100*(Number(t)+1))}return\"4.0.0.999\"}(\"4.22.0\"),yy=function(){try{return!0===JSON.parse(\"true\")}catch(e){return!0}}();let Ay=function(e){return e.Default=\"default\",e.Auto=\"auto\",e.Relay=\"relay\",e.SdRtn=\"sd-rtn\",e}({});const by={MIN_FRAME_RATE:1,MAX_FRAME_RATE:30,MAX_THRESHOLD_FRAMERATE:30,BITRATE_MIN_THRESHOLD:100,BITRATE_MAX_THRESHOLD:100,MAX_SCALE:5,BWE_SCALE_UP_THRESHOLD:.6,BWE_SCALE_DOWN_THRESHOLD:.6,PERF_SCALE_UP_THRESHOLD:.7,PERF_SCALE_DOWN_THRESHOLD:.6,MOTION_RESOLUTION_FACTOR:.8,MOTION_BITRATE_FACTOR:.6,DETAIL_FRAMERATE_FACTOR:.8,DETAIL_BITRATE_FACTOR:.6,BALANCE_RESOLUTION_FACTOR:.9,BALANCE_FRAMERATE_FACTOR:.9,BALANCE_BITRATE_FACTOR:.6,OVERUSE_TIMES_THRESHOLD:10,UNDERUSE_TIMES_THRESHOLD:40},wy=\"v4.22.0-0-g8569241d-dirty(8/15/2024, 7:04:06 PM)\",Oy=iv(iv({PROCESS_ID:\"\",ENCRYPT_AES:!0,AREAS:[\"CHINA\",\"GLOBAL\"],WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\",\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\",\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-web-2.ap.sd-rtn.com\",\"cds-ap-web-3.agora.io\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-web-2.ap.sd-rtn.com\",\"sua-ap-web-3.agora.io\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-web-2.ap.sd-rtn.com\",\"uap-ap-web-3.agora.io\",\"uap-web-4.ap.sd-rtn.com\"],LOG_UPLOAD_SERVER:\"logservice.agora.io\",EVENT_REPORT_DOMAIN:\"statscollector-1.agora.io\",EVENT_REPORT_BACKUP_DOMAIN:\"web-2.statscollector.sd-rtn.com\",ENABLE_EVENT_REPORT:!0,GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:\"\",LIVE_STREAMING_ADDRESS:\"\",HTTP_CONNECT_TIMEOUT:5e3,SIGNAL_REQUEST_TIMEOUT:1e4,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:3e3,CONFIG_DISTRIBUTE_INTERVAL:3e5,ENABLE_CONFIG_DISTRIBUTE:!0,CANDIDATE_TIMEOUT:5e3,SHOW_REPORT_INVOKER_LOG:!1,JOIN_EXTEND:\"\",PUB_EXTEND:\"\",SUB_EXTEND:\"\",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2e3,AJAX_REQUEST_CONCURRENT:3,REPORT_APP_SCENARIO:void 0,GATEWAY_DOMAINS:[\"edge.agora.io\",\"edge.sd-rtn.com\"],CONNECT_GATEWAY_WITHOUT_DOMAIN:!1,WORKER_DOMAIN:\"edge.agora.io\",TURN_DOMAIN:\"edge.agora.io\",EVENT_REPORT_RETRY:!0,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3e3,AUDIO_VOLUME_INDICATION_INTERVAL:2e3,VOLUME_VOICE_WEIGHT:10,GET_VOLUME_OF_MUTED_AUDIO_TRACK:!1,STATS_UPDATE_INTERVAL:250,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:\"webnginx-proxy.agora.io\",PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\",\"webrtc-cloud-proxy.agora.io\"],CUSTOM_PUB_ANSWER_MODIFIER:null,CUSTOM_SUB_ANSWER_MODIFIER:null,CUSTOM_PUB_OFFER_MODIFIER:null,CUSTOM_SUB_OFFER_MODIFIER:null,DSCP_TYPE:\"high\",REMOVE_NEW_CODECS:!0,FRAGEMENT_LENGTH:3,WEBSOCKET_COMPRESS:!1,SIMULCAST:!1,PRELOAD_MEDIA_COUNT:0,CHECK_VIDEO_VISIBLE_INTERVAL:3e4,CHECK_LOCAL_STATS_INTERVAL:250,PROFILE_SWITCH_INTERVAL:2e3,UNSUPPORTED_VIDEO_CODEC:[],ENUMERATE_DEVICES_INTERVAL:!1,ENUMERATE_DEVICES_INTERVAL_TIME:1e4,USE_NEW_TOKEN:!1,CLOSE_AFB_FOR_LOCAL_AP:!0,JOIN_MAX_CONCURRENCY:6,JOIN_WITH_FALLBACK_SIGNAL_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE:!1,JOIN_GATEWAY_TRY_443PORT_DURATION:2e3,JOIN_GATEWAY_USE_443PORT_ONLY:!1,JOIN_GATEWAY_USE_DUAL_DOMAIN:!0,JOIN_GATEWAY_FALLBACK_PORT:443,USE_TURN_SERVER_OF_GATEWAY:!1,H264_PROFILE_LEVEL_ID:\"\",USE_NEW_LOG:!1,LOG_VERSION:3,MEDIA_DEVICE_CONSTRAINTS:null,ENCRYPT_PROXY_USERNAME_AND_PSW:!0,SDP_LOGGING:!1,CSP_DETECTED_HOSTNAME_LIST:[\"agora.io\",\"sd-rtn.com\"],REMOTE_AUDIO_TRACK_USES_WEB_AUDIO:!1,LOCAL_AUDIO_TRACK_USES_WEB_AUDIO:!1,BITRATE_ADAPTER_TYPE:\"STANDARD_BITRATE\",AI_DENOISER_PARAMETERS:{excludedLinks:[]},ADJUST_3A_FROM_PLUGINS:!0,RAISE_H264_BASELINE_PRIORITY:!0,FILTER_SEND_H264_BASELINE:!1,X_GOOGLE_START_BITRATE:void 0,NEW_REPORT_SERVER:!1,NEW_REPORT_SERVER_DOMAINS:[\"data-reporting.agora.io\",\"data-reporting.agora.io\"],VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT:3e5,VIDEO_INSPECT_INTERVAL_MINIMUM:1e3,VIDEO_INSPECT_QUALITY_RATIO:.9,VIDEO_INSPECT_WORKER_MANAGER_HOST:\"edge.agora.io\",VIDEO_INSPECT_WORKER_MANAGER_PORT:\"\",VIDEO_INSPECT_WORKER_PORT:\"\",SHOW_VIDEO_INSPECT_WORKER_MESSAGE:!1,STATS_COLLECTOR_PORT:443,FORCE_TURN_TCP:!1,WEBAUDIO_INIT_OPTIONS:void 0,FILTER_VIDEO_FEC:!0,FILTER_AUDIO_FEC:!1,CHROME_DUAL_STREAM_USE_ENCODING:!0,DISABLE_DUAL_STREAM_USE_ENCODING:!1,EXTENSION_USAGE_UPLOAD_INTERVAL:1e4,ICE_RESTART:!0,ICE_RESTART_INTERVAL:1e4,NEW_ICE_RESTART:!1,TRANSMITTER_INITIAL_RTT:30,TRANSMITTER_INITIAL_RTO:30,TRANSMITTER_MAX_BATCH_ACK_COUNT:2,TRANSMITTER_MAX_RTO:500,DATACHANNEL_COMPRESS:!1,FINGERPRINT:null,DC_JOIN_WITH_FAILBACK:5e3,ENABLE_VIDEO_FRAME_CALLBACK:!0,VIDEO_FREEZE_DURATION:500,SPATIALIZER_PARAMETERS:{},UPLOAD_LOG_INTERVAL:3e3,UPLOAD_LOG_REQUEST_RETRY_INTERVAL:2e3,UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL:2e4,UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF:5e3,UPLOAD_LOG_RETRY_INTERVAL_V1:1e4,UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1:200,UPLOAD_LOG_LENGTH_EACH_TIME:10,APP_TYPE:0,DISABLE_WEBAUDIO:!1,CHANNEL_MEDIA_RELAY_SERVERS:void 0,KEEP_LAST_FRAME:!0,FORWARD_P2P_CREATION:!0,SYNC_GROUP:!0,BLOCK_LOCAL_CLIENT:!1,AP_AREA:!0,ENABLE_ENCODED_TRANSFORM:!1,ENABLE_VIDEO_SEI:!1,IMAGE_MODERATION_WORKER_HOST:\"edge.agora.io\",IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT:3e5,IMAGE_MODERATION_INTERVAL_MINIMUM:1e3,SHOW_IMAGE_MODERATION_WORKER_MESSAGE:!1,IMAGE_MODERATION_QUALITY_RATIO:.9,IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL:5e3,SHOW_GLOBAL_CLIENT_LIST:!1,DATASTREAM_MAX_RETRANSMITS:10,TCP_CANDIDATE_ONLY:!1,EXTERNAL_SIGNAL_REQUEST_TIMEOUT:3e3,SHOW_P2P_LOG:!1,MAX_P2P_TIMEOUT:3e4,P2P_TOKEN_INTERVAL:1e3,SHOW_DATASTREAM2_LOG:!1,RESTRICTION_SET_PLAYBACK_DEVICE:!0,USE_PURE_ENCRYPTION_MASTER_KEY:!1,ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,FILEPATH_LENMAX:255,DUALSTREAM_OPERATION_CHECK:!0,MEDIA_ELEMENT_EXISTS_DEPTH:3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,STATS_FILTER:{transportId:!0,googTrackId:!0},FILTER_VIDEO_CODEC:[],USE_NEW_NETWORK_CONFIG:!1,AUTO_RESET_AUDIO_ROUTE:!1,PLUGIN_INFO:[],OVERUSE_DETECTOR_PARAMS:by,ENABLE_AG_ADAPTATION:!0,FORCE_AG_HIGH_FRAMERATE:!1,FORCE_SUPPORT_AG_ADAPTATION:!1,CUSTOM_ADAPTATION_DEFAULT_MODE:\"\",ENCODER_CONFIG_LIMIT:{},CAMERA_CAPTURE_CONFIG:void 0,HIDE_NO_POSTER:!1,AP_CACHE_NUM:10,AP_UPDATE_INTERVAL:12e4,AP_CACHE_LIFETIME:12e4,MAX_PRELOAD_ASYNC_LENGTH:3,ENABLE_PRELOAD:!0},{ENABLE_PUBLISHED_USER_LIST:!0,MAX_SUBSCRIPTION:50,SUBSCRIBE_AUDIO_FILTER_TOPN:void 0,ENABLE_PUBLISH_AUDIO_FILTER:void 0,ENABLE_USER_LICENSE_CHECK:!0,USE_PUB_RTX:!0,USE_SUB_RTX:!0,DISABLE_FEC:void 0,ENABLE_NTP_REPORT:!1,ENABLE_INSTANT_VIDEO:!1,ENABLE_DATASTREAM_2:!1,ENABLE_USER_AUTO_REBALANCE_CHECK:!0,USE_XR:!0,ENABLE_LOSSBASED_BWE:!0,ENABLE_AUT_CC:!1,ENABLE_CC_FALLBACK:void 0,ENABLE_PREALLOC_PC:!1,SUBSCRIBE_TWCC:!0,PUBLISH_TWCC:!1,ENABLE_SVC:!1,ENABLE_SVC_DEFAULT_CODECS:[\"H264\",\"VP8\",\"VP9\",\"AV1\"],SVC:[],ENABLE_FULL_LINK_AV_SYNC:!1,SVC_MODE:null,PRE_SUB_NUM:2,ENABLE_PRE_SUB:!1,ENABLE_AUT_FEEDBACK:!1}),{},{USE_CANDIDATE_FROM_AP_DETAIL:!1});function Ny(e,t,i){var n,r,o;Dn(n=Object.keys(Oy)).call(n,e)&&(!i&&Dn(r=Object.keys(Py)).call(r,e)||(Oy[e]=t,\"ENABLE_VIDEO_SEI\"===e&&!0===t&&(Oy.ENABLE_ENCODED_TRANSFORM=!0),\"USE_NEW_NETWORK_CONFIG\"===e&&t&&(o=!!t,Oy.USE_NEW_NETWORK_CONFIG=o,o&&(Oy.WEBCS_DOMAIN=[\"webrtc2-2.ap.sd-rtn.com\"],Oy.WEBCS_DOMAIN_BACKUP_LIST=[\"webrtc2-4.ap.sd-rtn.com\"],Oy.CDS_AP=[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],Oy.ACCOUNT_REGISTER=[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],Oy.EVENT_REPORT_DOMAIN=\"web-2.statscollector.sd-rtn.com\",Oy.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-1.agora.io\",Oy.GATEWAY_DOMAINS=[\"edge.sd-rtn.com\"])),\"ENABLE_PRE_SUB\"===e&&t&&(Oy.ENABLE_INSTANT_VIDEO=!0,Oy.ENABLE_PREALLOC_PC=!0),\"ENABLE_SVC\"===e&&t&&(Oy.ENABLE_AUT_CC=!0)))}function Dy(e){return Oy[e]}const Py={};var Ly=function(e){return e.SET_SESSION_ID=\"SET_SESSION_ID\",e.SET_P2P_ID=\"SET_P2P_id\",e.SET_DC_ID=\"SET_DC_id\",e.SET_UID=\"SET_UID\",e.SET_INT_UID=\"SET_INT_UID\",e.SET_PUB_ID=\"SET_PUB_ID\",e.SET_CLOUD_PROXY_SERVER_MODE=\"SET_CLOUD_PROXY_SERVER_MODE\",e.KEY_METRIC_CLIENT_CREATED=\"KEY_METRIC_CLIENT_CREATED\",e.KEY_METRIC_JOIN_START=\"KEY_METRIC_JOIN_START\",e.AVOID_JOIN_START=\"AVOID_JOIN_START\",e.KEY_METRIC_JOIN_END=\"KEY_METRIC_JOIN_END\",e.KEY_METRIC_REQUEST_AP_START=\"KEY_METRIC_REQUEST_AP_START\",e.KEY_METRIC_REQUEST_AP_END=\"KEY_METRIC_REQUEST_AP_END\",e.KEY_METRIC_JOIN_GATEWAY_START=\"KEY_METRIC_JOIN_GATEWAY_START\",e.KEY_METRIC_JOIN_GATEWAY_END=\"KEY_METRIC_JOIN_GATEWAY_END\",e.KEY_METRIC_PEER_CONNECTION_START=\"KEY_METRIC_PEER_CONNECTION_START\",e.KEY_METRIC_PEER_CONNECTION_END=\"KEY_METRIC_PEER_CONNECTION_END\",e.KEY_METRIC_DESCRIPTION_START=\"KEY_METRIC_DESCRIPTION_START\",e.KEY_METRIC_ICE_CONNECTION_END=\"KEY_METRIC_ICE_CONNECTION_END\",e.KEY_METRIC_SIGNAL_CHANNEL_OPEN=\"KEY_METRIC_SIGNAL_CHANNEL_OPEN\",e.KEY_METRIC_PUBLISH=\"KEY_METRIC_PUBLISH\",e.KEY_METRIC_SUBSCRIBE=\"KEY_METRIC_SUBSCRIBE\",e.RECORD_JOIN_CHANNEL_SERVICE=\"RECORD_JOIN_CHANNEL_SERVICE\",e.RESET_JOIN_CHANNEL_SERVICE_RECORDS=\"RESET_JOIN_CHANNEL_SERVICE_RECORDS\",e.RESET_KEY_METRICS=\"RESET_KEY_METRICS\",e.SET_USE_P2P=\"SET_USE_P2P\",e.SET_TRANSPORT_TYPE=\"SET_TRANSPORT_TYPE\",e}(Ly||{});class ky{constructor(e,t,i,n){ev(this,\"state\",void 0),this.state={codec:e,audioCodec:t,mode:i,clientId:n,sessionId:null,p2pId:0,dcId:0,pubId:0,subId:0,avoidJoinStart:0,keyMetrics:{publish:[],subscribe:[]},joinChannelServiceRecords:[],cloudProxyServerMode:\"disabled\",useP2P:!1,p2pTransport:Ay.Default}}dispatch(e){this.state=function(e,t){switch(t.type){case Ly.SET_SESSION_ID:return iv(iv({},e),{},{sessionId:t.sessionId});case Ly.SET_P2P_ID:return iv(iv({},e),{},{p2pId:t.p2pId});case Ly.SET_UID:return iv(iv({},e),{},{uid:t.uid});case Ly.SET_INT_UID:return iv(iv({},e),{},{intUid:t.intUid});case Ly.SET_PUB_ID:return iv(iv({},e),{},{pubId:t.pubId});case Ly.KEY_METRIC_CLIENT_CREATED:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{clientCreated:t.metric})});case Ly.KEY_METRIC_JOIN_START:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{joinStart:t.metric})});case Ly.AVOID_JOIN_START:return iv(iv({},e),{},{avoidJoinStart:t.avoidJoinStart});case Ly.KEY_METRIC_JOIN_END:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{joinEnd:t.metric})});case Ly.KEY_METRIC_REQUEST_AP_START:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{requestAPStart:t.metric})});case Ly.KEY_METRIC_REQUEST_AP_END:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{requestAPEnd:t.metric})});case Ly.KEY_METRIC_JOIN_GATEWAY_START:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{joinGatewayStart:t.metric})});case Ly.KEY_METRIC_JOIN_GATEWAY_END:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{joinGatewayEnd:t.metric})});case Ly.KEY_METRIC_PEER_CONNECTION_START:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{peerConnectionStart:t.metric})});case Ly.KEY_METRIC_PEER_CONNECTION_END:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{peerConnectionEnd:t.metric})});case Ly.KEY_METRIC_DESCRIPTION_START:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{descriptionStart:t.metric})});case Ly.KEY_METRIC_SIGNAL_CHANNEL_OPEN:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{signalChannelOpen:t.metric})});case Ly.KEY_METRIC_ICE_CONNECTION_END:return iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{iceConnectionEnd:t.metric})});case Ly.KEY_METRIC_PUBLISH:{const i=e.keyMetrics.publish,n=i.findIndex((e=>e.trackId===t.metric.trackId));return-1!==n?(i[n]=iv(iv({},i[n]),t.metric),iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{publish:[...i]})})):iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{publish:[...e.keyMetrics.publish,t.metric]})})}case Ly.KEY_METRIC_SUBSCRIBE:{const i=e.keyMetrics.subscribe,n=i.findIndex((e=>e.userId===t.metric.userId&&e.type===t.metric.type));return-1!==n?(i[n]=iv(iv({},i[n]),t.metric),iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{subscribe:[...i]})})):iv(iv({},e),{},{keyMetrics:iv(iv({},e.keyMetrics),{},{subscribe:[...e.keyMetrics.subscribe,t.metric]})})}case Ly.SET_CLOUD_PROXY_SERVER_MODE:return e.cloudProxyServerMode=t.mode,e;case Ly.RECORD_JOIN_CHANNEL_SERVICE:return\"number\"!=typeof t.index?e.joinChannelServiceRecords=[...e.joinChannelServiceRecords,t.record]:(e.joinChannelServiceRecords[t.index]=iv(iv({},e.joinChannelServiceRecords[t.index]),t.record),e.joinChannelServiceRecords=[...e.joinChannelServiceRecords]),e;case Ly.RESET_JOIN_CHANNEL_SERVICE_RECORDS:return e.joinChannelServiceRecords=[],e;case Ly.RESET_KEY_METRICS:return e.keyMetrics={publish:[],subscribe:[]},e;case Ly.SET_USE_P2P:return iv(iv({},e),{},{useP2P:t.val});case Ly.SET_TRANSPORT_TYPE:return iv(iv({},e),{},{p2pTransport:t.val});default:return e}}(this.state,e)}set sessionId(e){this.dispatch({type:Ly.SET_SESSION_ID,sessionId:e})}get sessionId(){return this.state.sessionId}set codec(e){this.state.codec=e}get codec(){return this.state.codec}get mode(){return this.state.mode}get audioCodec(){return this.state.audioCodec}get clientId(){return this.state.clientId}set p2pId(e){this.dispatch({type:Ly.SET_P2P_ID,p2pId:e})}get p2pId(){return this.state.p2pId}set dcId(e){this.dispatch({type:Ly.SET_DC_ID,dcId:e})}get dcId(){return this.state.dcId}set uid(e){this.dispatch({type:Ly.SET_UID,uid:e})}get uid(){return this.state.uid}set intUid(e){this.dispatch({type:Ly.SET_INT_UID,intUid:e})}get intUid(){return this.state.intUid}set pubId(e){this.dispatch({type:Ly.SET_PUB_ID,pubId:e})}get pubId(){return this.state.pubId}set cloudProxyServerMode(e){this.dispatch({type:Ly.SET_CLOUD_PROXY_SERVER_MODE,mode:e})}get cloudProxyServerMode(){return this.state.cloudProxyServerMode}set useP2P(e){this.dispatch({type:Ly.SET_USE_P2P,val:e})}get useP2P(){return this.state.useP2P}set p2pTransport(e){this.dispatch({type:Ly.SET_TRANSPORT_TYPE,val:e})}get p2pTransport(){return this.state.p2pTransport}clientCreated(){this.dispatch({type:Ly.KEY_METRIC_CLIENT_CREATED,metric:Date.now()})}joinStart(){this.dispatch({type:Ly.KEY_METRIC_JOIN_START,metric:Date.now()})}joinEnd(){this.dispatch({type:Ly.KEY_METRIC_JOIN_END,metric:Date.now()})}requestAPStart(){this.dispatch({type:Ly.KEY_METRIC_REQUEST_AP_START,metric:Date.now()})}requestAPEnd(){this.dispatch({type:Ly.KEY_METRIC_REQUEST_AP_END,metric:Date.now()})}joinGatewayStart(){this.dispatch({type:Ly.KEY_METRIC_JOIN_GATEWAY_START,metric:Date.now()})}joinGatewayEnd(){this.dispatch({type:Ly.KEY_METRIC_JOIN_GATEWAY_END,metric:Date.now()})}peerConnectionStart(){this.dispatch({type:Ly.KEY_METRIC_PEER_CONNECTION_START,metric:Date.now()})}peerConnectionEnd(){this.dispatch({type:Ly.KEY_METRIC_PEER_CONNECTION_END,metric:Date.now()})}descriptionStart(){this.dispatch({type:Ly.KEY_METRIC_DESCRIPTION_START,metric:Date.now()})}signalChannelOpen(){this.dispatch({type:Ly.KEY_METRIC_SIGNAL_CHANNEL_OPEN,metric:Date.now()})}iceConnectionEnd(){this.dispatch({type:Ly.KEY_METRIC_ICE_CONNECTION_END,metric:Date.now()})}publish(e,t,i,n){this.dispatch({type:Ly.KEY_METRIC_PUBLISH,metric:iv(iv({trackId:e,type:t},i&&{publishStart:i}),n&&{publishEnd:n})})}subscribe(e,t,i,n,r,o,s){this.dispatch({type:Ly.KEY_METRIC_SUBSCRIBE,metric:iv(iv(iv(iv(iv({userId:e,type:t},i&&{subscribeStart:i}),n&&{subscribeEnd:n}),r&&{firstFrame:r}),o&&{streamAdded:o}),s&&{firstDecoded:s})})}massSubscribe(e,t,i,n){e.forEach((e=>{this.dispatch({type:Ly.KEY_METRIC_SUBSCRIBE,metric:iv(iv(iv({userId:e.userId,type:e.type},t&&{subscribeStart:t}),i&&{subscribeEnd:i}),n&&{firstFrame:n})})}))}get keyMetrics(){return this.state.keyMetrics}recordJoinChannelService(e,t){\"gateway\"===e.service&&Array.isArray(e.urls)&&(e.urls=e.urls.map((e=>e.replace(/(\\d+)-\\d+-\\d+-(\\d+)/,\"$1-*-*-$2\"))));try{return\"number\"!=typeof t?(this.dispatch({type:Ly.RECORD_JOIN_CHANNEL_SERVICE,record:iv(iv({},e),{},{sessionId:this.sessionId,cloudProxyMode:this.cloudProxyServerMode,uid:this.uid})}),this.state.joinChannelServiceRecords.length-1):(t<0||t>=this.state.joinChannelServiceRecords.length||this.dispatch({type:Ly.RECORD_JOIN_CHANNEL_SERVICE,record:e,index:t}),t)}catch(e){return 0}}resetJoinChannelServiceRecords(){this.dispatch({type:Ly.RESET_JOIN_CHANNEL_SERVICE_RECORDS})}resetKeyMetrics(){this.dispatch({type:Ly.RESET_KEY_METRICS})}get joinChannelServiceRecords(){try{return this.state.joinChannelServiceRecords}catch(e){return[]}}get avoidJoinStart(){return this.state.avoidJoinStart}set avoidJoinStart(e){this.dispatch({type:Ly.AVOID_JOIN_START,avoidJoinStart:e})}}let My=function(e){return e.h264=\"h264\",e.h265=\"h265\",e.vp8=\"vp8\",e.vp9=\"vp9\",e.av1=\"av1\",e}({});!function(e){e.opus=\"opus\",e.pcma=\"pcma\",e.pcmu=\"pcmu\",e.g722=\"g722\"}({});const Uy=128,xy=96,Vy=1e3,Fy=10;let By=0;function jy(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function Gy(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Wy(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Gy(Object(i),!0).forEach((function(t){jy(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Gy(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const Hy=new class extends Sv{constructor(){super(...arguments),jy(this,\"currentUploadLogID\",0)}reportLogUploadError(e){const{errorRange:t}=e;t[t.length-1]&&t[t.length-1]>this.currentUploadLogID&&(this.currentUploadLogID=t[t.length-1],this.emit(\"REPORT_LOG_UPLOAD\",e))}};class Ky{constructor(e){jy(this,\"logger\",void 0),jy(this,\"prefixLists\",[]),this.logger=e}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.debug(...this.prefixLists,...t)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.info(...this.prefixLists,...t)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.warning(...this.prefixLists,...t)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.error(...this.prefixLists,...t)}prefix(e){return this.prefixLists.push(e),this}popPrefix(){return this.prefixLists.pop(),this}}function Yy(){const e=new Date;return e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}function qy(){const e=new Date,t=/((\\d+:){2}\\d+)/.exec((new Date).toUTCString());return t?(null==t?void 0:t[0])+\":\"+e.getUTCMilliseconds():e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}const zy={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},Jy=Date.now(),Xy=e=>{for(const t in zy)if(Object.prototype.hasOwnProperty.call(zy,t)&&zy[t]===e)return t;return\"DEFAULT\"};const Qy=new class{constructor(){jy(this,\"proxyServerURL\",void 0),jy(this,\"logLevel\",zy.DEBUG),jy(this,\"uploadState\",\"collecting\"),jy(this,\"uploadLogWaitingList\",[]),jy(this,\"uploadLogUploadingList\",[]),jy(this,\"uploadErrorCount\",0),jy(this,\"currentLogID\",0),jy(this,\"url\",void 0),jy(this,\"extLog\",((e,t)=>{this.appendLogToWaitingList(e,...t)}))}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[zy.DEBUG].concat(t);this.log.apply(this,n)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[zy.INFO].concat(t);this.log.apply(this,n)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[zy.WARNING].concat(t);this.log.apply(this,n)}warn(){this.warning(...arguments)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[zy.ERROR].concat(t);this.log.apply(this,n)}upload(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=[zy.DEBUG].concat(t);this.uploadLog.apply(this,n)}setLogLevel(e){e=Math.min(Math.max(0,e),4),this.logLevel=e}enableLogUpload(){Ny(\"UPLOAD_LOG\",!0)}disableLogUpload(){Ny(\"UPLOAD_LOG\",!1),this.uploadLogUploadingList=[],this.uploadLogWaitingList=[]}setProxyServer(e){this.proxyServerURL=e}prefix(e){return new Ky(this).prefix(e)}log(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-Jy<100)return void setTimeout((()=>{this.log(...t)}),Date.now()-Jy);const n=Math.max(0,Math.min(4,t[0]));if(t[0]=Yy()+\" Agora-SDK [\".concat(Xy(n),\"]:\"),this.appendLogToWaitingList(n,...t),n<this.logLevel)return;const r=Yy()+\" %cAgora-SDK [\".concat(Xy(n),\"]:\");let o=[];if(!Dy(\"USE_NEW_LOG\"))switch(n){case zy.DEBUG:o=[r,\"color: #64B5F6;\"].concat(t.slice(1)),console.log.apply(console,o);break;case zy.INFO:o=[r,\"color: #1E88E5; font-weight: bold;\"].concat(t.slice(1)),console.log.apply(console,o);break;case zy.WARNING:o=[r,\"color: #FB8C00; font-weight: bold;\"].concat(t.slice(1)),console.warn.apply(console,o);break;case zy.ERROR:o=[r,\"color: #B00020; font-weight: bold;\"].concat(t.slice(1)),console.error.apply(console,o)}}uploadLog(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-Jy<100)return void setTimeout((()=>{this.uploadLog(...t)}),Date.now()-Jy);const n=Math.max(0,Math.min(4,t[0]));t[0]=Yy()+\" Agora-SDK [\".concat(Xy(n),\"]:\"),this.appendLogToWaitingList(n,...t)}appendLogToWaitingList(e){if(!Dy(\"UPLOAD_LOG\"))return;for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];Array.isArray(i[0])?i[0][0]=qy()+\" Agora-SDK [\".concat(Xy(e),\"]:\"):i[0]=qy()+\" Agora-SDK [\".concat(Xy(e),\"]:\");let r=\"\";i.forEach((e=>{\"object\"==typeof e&&(e=JSON.stringify(e)),r+=\"\".concat(e,\" \")})),this.uploadLogWaitingList.push({payload_str:r,log_level:e,log_item_id:this.currentLogID++}),\"uploading\"===this.uploadState&&0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}startUpload(){this.uploadState=\"uploading\",0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}async uploadLogs(){const e=this.uploadLogUploadingList,t={sdk_version:vy,process_id:Dy(\"PROCESS_ID\"),payload:JSON.stringify(e)};return my((async()=>{const e=await EI.post(this.url||(this.proxyServerURL?\"https://\".concat(this.proxyServerURL,\"/ls/?h=\").concat(Dy(\"LOG_UPLOAD_SERVER\"),\"&p=443&d=upload/v1\"):\"https://\".concat(Dy(\"LOG_UPLOAD_SERVER\"),\"/upload/v1\")),t,{responseType:\"text\"});if(\"OK\"!==e.data){const t=new Error(\"unexpected upload log response\");throw t.response=e,t}}),(()=>(this.uploadLogUploadingList=[],!1)),(t=>{const i={status:-1,message:t.message,errorRange:e.map((e=>e.log_item_id))};return t.response?(i.status=t.response.status,i.data=t.response.data,i.headers=t.response.headers):t.request&&(i.status=t.request.status),Hy.reportLogUploadError(i),!0}),{timeout:Dy(\"UPLOAD_LOG_REQUEST_RETRY_INTERVAL\"),maxRetryTimeout:Dy(\"UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL\")})}uploadLogInterval(){0===this.uploadLogUploadingList.length&&0===this.uploadLogWaitingList.length||(0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=this.uploadLogWaitingList.splice(0,Dy(\"UPLOAD_LOG_LENGTH_EACH_TIME\"))),this.uploadLogs().then((()=>{this.uploadErrorCount=0,this.uploadLogWaitingList.length>0&&window.setTimeout((()=>this.uploadLogInterval()),Dy(\"UPLOAD_LOG_INTERVAL\"))})).catch((e=>{this.uploadErrorCount+=1,this.uploadErrorCount<2?window.setTimeout((()=>this.uploadLogInterval()),Dy(\"UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1\")):window.setTimeout((()=>this.uploadLogInterval()),Dy(\"UPLOAD_LOG_RETRY_INTERVAL_V1\"))})))}};var Zy;function $y(e){return dv(e.reportId,\"params.reportId\",0,100,!1),dv(e.category,\"params.category\",0,100,!1),dv(e.event,\"params.event\",0,100,!1),dv(e.label,\"params.label\",0,100,!1),av(e.value,\"params.value\",Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,!1),!0}(Zy={}).FREE=\"free\",Zy.UPLOADING=\"uploading\",function(e){e[e.MISC=0]=\"MISC\",e[e.INTERNAL_EVENT=1]=\"INTERNAL_EVENT\",e[e.PUBLIC_EVENT=2]=\"PUBLIC_EVENT\",e[e.WEB_EVENT=3]=\"WEB_EVENT\",e[e.INTERNAL_API=4]=\"INTERNAL_API\",e[e.WEB_API=5]=\"WEB_API\",e[e.PUBLIC_API=6]=\"PUBLIC_API\"}({});const eA={sid:\"\",lts:0,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};let tA=function(e){return e.PUBLISH=\"publish\",e.SUBSCRIBE=\"subscribe\",e.WS_COMPRESSOR_INIT=\"ws_compressor_init\",e.SESSION_INIT=\"session_init\",e.JOIN_CHOOSE_SERVER=\"join_choose_server\",e.REQ_USER_ACCOUNT=\"req_user_account\",e.JOIN_GATEWAY=\"join_gateway\",e.REJOIN_GATEWAY=\"rejoin_gateway\",e.STREAM_SWITCH=\"stream_switch\",e.REQUEST_PROXY_WORKER_MANAGER=\"request_proxy_worker_manager\",e.REQUEST_PROXY_APPCENTER=\"request_proxy_appcenter\",e.FIRST_VIDEO_RECEIVED=\"first_video_received\",e.FIRST_AUDIO_RECEIVED=\"first_audio_received\",e.FIRST_VIDEO_DECODE=\"first_video_decode\",e.FIRST_AUDIO_DECODE=\"first_audio_decode\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_UPDATE_STREAM=\"on_update_stream\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.USER_ANALYTICS=\"req_user_analytics\",e.PC_STATS=\"pc_stats\",e.UPDATE_REMOTE_RTPCAPABILITIES=\"update_remote_rtpCapabilities\",e}({}),iA=function(e){return e.SESSION=\"io.agora.pb.Wrtc.Session\",e.JOIN_CHOOSE_SERVER=\"io.agora.pb.Wrtc.JoinChooseServer\",e.REQ_USER_ACCOUNT=\"io.agora.pb.Wrtc.ReqUserAccount\",e.JOIN_GATEWAY=\"io.agora.pb.Wrtc.JoinGateway\",e.RE_JOIN_GATEWAY=\"io.agora.pb.Wrtc.ReJoinGateway\",e.PUBLISH=\"io.agora.pb.Wrtc.Publish\",e.SUBSCRIBE=\"io.agora.pb.Wrtc.Subscribe\",e.WS_COMPRESSOR_INIT=\"io.agora.pb.Wrtc.WsCompressorInit\",e.STREAM_SWITCH=\"io.agora.pb.Wrtc.StreamSwitch\",e.AUDIO_SENDING_STOPPED=\"io.agora.pb.Wrtc.AudioSendingStopped\",e.VIDEO_SENDING_STOPPED=\"io.agora.pb.Wrtc.VideoSendingStopped\",e.REQUEST_PROXY_APPCENTER=\"io.agora.pb.Wrtc.RequestProxyAppCenter\",e.REQUEST_PROXY_WORKER_MANAGER=\"io.agora.pb.Wrtc.RequestProxyWorkerManager\",e.API_INVOKE=\"io.agora.pb.Wrtc.ApiInvoke\",e.FIRST_VIDEO_RECEIVED=\"io.agora.pb.Wrtc.FirstVideoReceived\",e.FIRST_AUDIO_RECEIVED=\"io.agora.pb.Wrtc.FirstAudioReceived\",e.FIRST_VIDEO_DECODE=\"io.agora.pb.Wrtc.FirstVideoDecode\",e.FIRST_AUDIO_DECODE=\"io.agora.pb.Wrtc.FirstAudioDecode\",e.ON_ADD_AUDIO_STREAM=\"io.agora.pb.Wrtc.OnAddAudioStream\",e.ON_ADD_VIDEO_STREAM=\"io.agora.pb.Wrtc.OnAddVideoStream\",e.ON_UPDATE_STREAM=\"io.agora.pb.Wrtc.OnUpdateStream\",e.ON_REMOVE_STREAM=\"io.agora.pb.Wrtc.OnRemoveStream\",e.JOIN_CHANNEL_TIMEOUT=\"io.agora.pb.Wrtc.JoinChannelTimeout\",e.PEER_PUBLISH_STATUS=\"io.agora.pb.Wrtc.PeerPublishStatus\",e.WORKER_EVENT=\"io.agora.pb.Wrtc.WorkerEvent\",e.AP_WORKER_EVENT=\"io.agora.pb.Wrtc.APWorkerEvent\",e.JOIN_WEB_PROXY_AP=\"io.agora.pb.Wrtc.JoinWebProxyAP\",e.WEBSOCKET_QUIT=\"io.agora.pb.Wrtc.WebSocketQuit\",e.USER_ANALYTICS=\"io.agora.pb.Wrtc.UserAnalytics\",e.AUTOPLAY_FAILED=\"io.agora.pb.Wrtc.AutoplayFailed\",e.PC_STATS=\"io.agora.pb.Wrtc.PCStats\",e.UPDATE_REMOTE_RTPCAPABILITIES=\"io.agora.pb.Wrtc.UpdateRemoteRTPCapabilities\",e}({});!function(e){e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\"}({});let nA=function(e){return e[e.SESSION=26]=\"SESSION\",e[e.JOIN_CHOOSE_SERVER=27]=\"JOIN_CHOOSE_SERVER\",e[e.REQ_USER_ACCOUNT=196]=\"REQ_USER_ACCOUNT\",e[e.JOIN_GATEWAY=28]=\"JOIN_GATEWAY\",e[e.PUBLISH=30]=\"PUBLISH\",e[e.SUBSCRIBE=29]=\"SUBSCRIBE\",e[e.WS_COMPRESSOR_INIT=9430]=\"WS_COMPRESSOR_INIT\",e[e.STREAM_SWITCH=32]=\"STREAM_SWITCH\",e[e.AUDIO_SENDING_STOPPED=33]=\"AUDIO_SENDING_STOPPED\",e[e.VIDEO_SENDING_STOPPED=34]=\"VIDEO_SENDING_STOPPED\",e[e.REQUEST_PROXY_APPCENTER=35]=\"REQUEST_PROXY_APPCENTER\",e[e.REQUEST_PROXY_WORKER_MANAGER=36]=\"REQUEST_PROXY_WORKER_MANAGER\",e[e.API_INVOKE=41]=\"API_INVOKE\",e[e.FIRST_VIDEO_RECEIVED=348]=\"FIRST_VIDEO_RECEIVED\",e[e.FIRST_AUDIO_RECEIVED=349]=\"FIRST_AUDIO_RECEIVED\",e[e.FIRST_VIDEO_DECODE=350]=\"FIRST_VIDEO_DECODE\",e[e.FIRST_AUDIO_DECODE=351]=\"FIRST_AUDIO_DECODE\",e[e.ON_ADD_AUDIO_STREAM=352]=\"ON_ADD_AUDIO_STREAM\",e[e.ON_ADD_VIDEO_STREAM=353]=\"ON_ADD_VIDEO_STREAM\",e[e.ON_UPDATE_STREAM=356]=\"ON_UPDATE_STREAM\",e[e.ON_REMOVE_STREAM=355]=\"ON_REMOVE_STREAM\",e[e.JOIN_CHANNEL_TIMEOUT=407]=\"JOIN_CHANNEL_TIMEOUT\",e[e.PEER_PUBLISH_STATUS=408]=\"PEER_PUBLISH_STATUS\",e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\",e[e.JOIN_WEB_PROXY_AP=700]=\"JOIN_WEB_PROXY_AP\",e[e.WEBSOCKET_QUIT=671]=\"WEBSOCKET_QUIT\",e[e.USER_ANALYTICS=1e4]=\"USER_ANALYTICS\",e[e.AUTOPLAY_FAILED=9178]=\"AUTOPLAY_FAILED\",e}({});class rA{constructor(){jy(this,\"baseInfoMap\",new Map),jy(this,\"proxyServer\",void 0),jy(this,\"eventUploadTimer\",void 0),jy(this,\"setSessionIdTimer\",void 0),jy(this,\"url\",void 0),jy(this,\"backupUrl\",void 0),jy(this,\"_appId\",void 0),jy(this,\"keyEventUploadPendingItems\",[]),jy(this,\"normalEventUploadPendingItems\",[]),jy(this,\"apiInvokeUploadPendingItems\",[]),jy(this,\"apiInvokeCount\",0),jy(this,\"ltsList\",[]),jy(this,\"lastSendNormalEventTime\",Date.now()),jy(this,\"customReportCounterTimer\",void 0),jy(this,\"customReportCount\",0),jy(this,\"extApiInvoke\",(async e=>{for(const t of e){const e=Wy(Wy({},t),{},{sid:null,invokeId:++this.apiInvokeCount,tag:Iv.TRACER});this.sendApiInvoke(e)}})),this.eventUploadTimer=window.setInterval(this.doSend.bind(this),Dy(\"EVENT_REPORT_SEND_INTERVAL\")),this.setSessionIdTimer=window.setInterval(this.appendSessionId.bind(this),Dy(\"EVENT_REPORT_SEND_INTERVAL\"))}getBaseInfoBySessionId(e){return this.baseInfoMap.get(e)}adjustSessionStartTime(e){if(!this.baseInfoMap.has(e)&&!this.baseInfoMap.get(e))return void Qy.error(\"adjust session \".concat(e,\" start time, sid is not exist or info is undefined\"));const t=this.baseInfoMap.get(e),i=Date.now(),n=t.startTime;t.startTime=i,Qy.debug(\"rewrite session \".concat(e,\" startTime: \").concat(i,\" , \").concat(i-n,\"ms\")),this.baseInfoMap.set(e,t)}setAppId(e){this._appId=e}reportApiInvoke(e,t,i){t.timeout=t.timeout||6e4,t.reportResult=void 0===t.reportResult||t.reportResult;const n=Date.now();this.apiInvokeCount+=1;const r=this.apiInvokeCount,o=()=>({tag:t.tag,invokeId:r,sid:e,name:t.name,apiInvokeTime:n,options:t.options,states:t.states||null}),s=!!Dy(\"SHOW_REPORT_INVOKER_LOG\");s&&Qy.info(\"\".concat(t.name,\" start\"),t.options);let a=!1;$v(t.timeout).then((()=>{a||(this.sendApiInvoke(Wy(Wy({},o()),{},{error:nv.API_INVOKE_TIMEOUT,success:!1})),Qy.debug(\"\".concat(t.name,\" timeout\")))}));const c=new rv(nv.UNEXPECTED_ERROR,\"\".concat(t.name,\": this api invoke is end\"));return{onSuccess:e=>{const n=()=>{if(a)throw c;return a=!0,this.sendApiInvoke(Wy(Wy({},o()),{},{success:!0},t.reportResult&&{result:e})),s&&Qy.info(\"\".concat(t.name,\" onSuccess\")),e};return i?ry(n,t.name+\"Success\",i,(()=>a=!0)):n()},onError:e=>{const n=()=>{if(a)throw e;a=!0,this.sendApiInvoke(Wy(Wy({},o()),{},{success:!1,error:e})),s&&Qy.info(\"\".concat(t.name,\" onFailure\"),e.toString())};return i?ry(n,t.name+\"Error\",i,(()=>a=!0)):n()}}}sessionInit(e,t){if(this.baseInfoMap.has(e))return;const i=Date.now(),n=this.createBaseInfo(e,i);n.cname=t.cname;const r=Object.assign({},{willUploadConsoleLog:Dy(\"UPLOAD_LOG\"),maxTouchPoints:navigator.maxTouchPoints,areaVersion:yy?\"global\":\"oversea\",areas:Dy(\"AREAS\")&&Dy(\"AREAS\").join(\",\")},t.extend),{stringUid:o,channelProfile:s,channelMode:a,isABTestSuccess:c,lsid:d,clientRole:l}=t,u=Date.now(),h=Wy(Wy({},n),{},{eventType:tA.SESSION_INIT,appid:t.appid,browser:navigator.userAgent,buildFormat:t.buildFormat,build:wy,lts:u,elapse:u-i,extend:JSON.stringify(r),mode:t.mode,process:Dy(\"PROCESS_ID\"),appType:Dy(\"APP_TYPE\"),success:!0,version:vy,stringUid:o,channelProfile:s,channelMode:a,isABTestSuccess:c,lsid:d,clientType:Dn(p=window.navigator.userAgent).call(p,\"AgoraWebView\")?42:20,clientRole:l,serviceId:Dy(\"PROCESS_ID\"),extensionID:Dy(\"PLUGIN_INFO\").join(\",\")||\"\"});var p;this.send({type:iA.SESSION,data:h},!0)}joinChooseServer(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.JOIN_CHOOSE_SERVER,lts:r,eventElapse:t.elapse||r-t.lts,chooseServerAddr:t.csAddr,errorCode:t.ec,elapse:r-i.startTime,success:t.succ,chooseServerAddrList:JSON.stringify(t.serverList),uid:t.uid?parseInt(t.uid):null,cid:t.cid?parseInt(t.cid):null,chooseServerIp:t.csIp||\"\",opid:t.opid,unilbsServerIds:t.unilbsServerIds,extend:t.extend||void 0,isHttp3:t.isHttp3});this.send({type:iA.JOIN_CHOOSE_SERVER,data:o},!0)}reqUserAccount(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.REQ_USER_ACCOUNT,lts:r,success:t.success,serverAddress:t.serverAddr,stringUid:t.stringUid,uid:t.uid,errorCode:t.errorCode,elapse:t.elapse||r-i.startTime,eventElapse:r-t.lts,extend:JSON.stringify(t.extend)});this.send({type:iA.REQ_USER_ACCOUNT,data:o},!0)}joinGateway(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info;t.vid&&(n.vid=t.vid),n.uid=t.uid,n.cid=t.cid;const r=Date.now(),{firstSuccess:o,avoidJoinStartTime:s}=t,a=r-(o&&s?s:i.startTime),c=Wy(Wy({},n),{},{eventType:tA.JOIN_GATEWAY,lts:r,gatewayAddr:t.addr,success:t.succ,errorCode:t.ec,errorMsg:t.errorMsg||\"\",elapse:a,eventElapse:r-t.lts,firstSuccess:o,signalChannel:t.signalChannel,preload:t.preload?1:0});t.succ&&(i.lastJoinSuccessTime=r),this.send({type:iA.JOIN_GATEWAY,data:c},!0)}joinChannelTimeout(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=Date.now(),r=Wy(Wy({},i.info),{},{lts:n,timeout:t,elapse:n-i.startTime});this.send({type:iA.JOIN_CHANNEL_TIMEOUT,data:r},!0)}publish(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.PUBLISH,lts:r,eventElapse:t.eventElapse,elapse:r-i.startTime,success:t.succ,errorCode:t.ec,videoName:t.videoName,audioName:t.audioName,screenName:t.screenName,screenshare:t.screenshare,audio:t.audio,video:t.video,p2pid:t.p2pid,publishRequestid:t.publishRequestid});this.send({type:iA.PUBLISH,data:o},!0)}subscribe(e,t,i){const n=this.baseInfoMap.get(e);if(!n)return;const r=n.info,o=Date.now(),s=Wy(Wy({},r),{},{eventType:tA.SUBSCRIBE,lts:o,eventElapse:t.eventElapse,elapse:o-n.startTime,success:t.succ,errorCode:t.ec,video:t.video,audio:t.audio,subscribeRequestid:t.subscribeRequestid,p2pid:t.p2pid,preSsrc:t.preSsrc?1:0},i&&{extend:JSON.stringify({isMassSubscribe:!0})});\"string\"==typeof t.peerid?s.peerSuid=t.peerid:s.peer=t.peerid,this.send({type:iA.SUBSCRIBE,data:s},!0)}wsCompressorInit(e){var t;const i=[...d_(t=this.baseInfoMap).call(t)],n=i.length?i[0]:\"UnableToGetSid\",r=this.baseInfoMap.get(n);if(!r)return;const o=r.info,s=Date.now(),a=Wy(Wy({},o),{},{eventType:tA.WS_COMPRESSOR_INIT,lts:s,eventElapse:e.eventElapse,elapse:s-r.startTime,status:e.status?1:2});this.send({type:iA.WS_COMPRESSOR_INIT,data:a},!0)}firstRemoteVideoDecode(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=Wy(Wy(Wy({},o),n),{},{elapse:s-r.startTime,eventType:t,lts:s,firstDecodeFrame:Math.max((n.firstFrame||s)-r.startTime,0),apEnd:Math.max(n.apEnd-r.startTime,0),apStart:Math.max(n.apStart-r.startTime,0),joinGwEnd:Math.max(n.joinGwEnd-r.startTime,0),joinGwStart:Math.max(n.joinGwStart-r.startTime,0),pcEnd:Math.max(n.pcEnd-r.startTime,0),pcStart:Math.max(n.pcStart-r.startTime,0),subscriberEnd:Math.max(n.subscriberEnd-r.startTime,0),subscriberStart:Math.max(n.subscriberStart-r.startTime,0),videoAddNotify:Math.max(n.videoAddNotify-r.startTime,0)});this.send({type:i,data:a},!0)}firstRemoteFrame(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=Wy(Wy(Wy({},o),n),{},{elapse:s-r.startTime,eventType:t,lts:s});this.send({type:i,data:a},!0)}pcStats(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy(Wy({},n),t),{},{vid:void 0===n.vid?0:Number(n.vid),elapse:r-i.startTime,eventType:tA.PC_STATS,lts:r,preallocation:t.preallocation?1:0});this.send({type:iA.PC_STATS,data:o},!0)}updateRemoteRTPCapabilities(e,t){if(e){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy(Wy({},n),t),{},{vid:void 0===n.vid?0:Number(n.vid),eventType:tA.UPDATE_REMOTE_RTPCAPABILITIES,lts:r});this.send({type:iA.UPDATE_REMOTE_RTPCAPABILITIES,data:o},!0)}}onGatewayStream(e,t,i,n){const r=this.baseInfoMap.get(e);if(!r)return;const o=r.info,s=Date.now(),a=Wy(Wy(Wy({},o),n),{},{eventType:t,lts:s});this.send({type:i,data:a},!0)}streamSwitch(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.STREAM_SWITCH,lts:r,isDual:t.isdual,elapse:r-i.startTime,success:t.succ});this.send({type:iA.STREAM_SWITCH,data:o},!0)}requestProxyAppCenter(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.REQUEST_PROXY_APPCENTER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,APAddr:t.APAddr,workerManagerList:t.workerManagerList,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:iA.REQUEST_PROXY_APPCENTER,data:o},!0)}requestProxyWorkerManager(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{eventType:tA.REQUEST_PROXY_WORKER_MANAGER,lts:r,eventElapse:r-t.lts,elapse:r-i.startTime,workerManagerAddr:t.workerManagerAddr,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:iA.REQUEST_PROXY_WORKER_MANAGER,data:o},!0)}setProxyServer(e){this.proxyServer=e,e?Qy.debug(\"reportProxyServerurl: \".concat(e)):Qy.debug(\"disable reportProxyServerurl: \".concat(e))}peerPublishStatus(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy({},n),{},{subscribeElapse:t.subscribeElapse,peer:t.peer,peerPublishDuration:Math.max(t.audioPublishDuration,t.videoPublishDuration),audiotag:t.audioPublishDuration>0?1:-1,videotag:t.videoPublishDuration>0?1:-1,lts:r,elapse:r-i.startTime,joinChannelSuccessElapse:r-(i.lastJoinSuccessTime||r),peerPublishDurationVideo:t.videoPublishDuration,peerPublishDurationAudio:t.audioPublishDuration});this.send({type:iA.PEER_PUBLISH_STATUS,data:o},!0)}workerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now();(function(e,t,i){const n=e[t];if(!n||\"string\"!=typeof n)return[e];e[t]=\"\";const r=Xv(JSON.stringify(e));let o=0;const s=[];let a=0;for(let c=0;c<n.length;c++)a+=n.charCodeAt(c)<=127?1:3,a<=i-r||(s[s.length]=iv(iv({},e),{},{[t]:n.substring(o,c)}),o=c,a=n.charCodeAt(c)<=127?1:3);return o!==n.length-1&&(s[s.length]=iv(iv({},e),{},{[t]:n.substring(o)})),s})(Wy(Wy(Wy({},n),t),{},{elapse:r-i.startTime,lts:r,productType:\"WebRTC\"}),\"payload\",1300).forEach((e=>this.send({type:iA.WORKER_EVENT,data:e},!0)))}apworkerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy(Wy({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:iA.AP_WORKER_EVENT,data:o},!0)}joinWebProxyAP(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy(Wy({},n),t),{},{elapse:r-i.startTime,lts:r,extend:t.extend||void 0});this.send({type:iA.JOIN_WEB_PROXY_AP,data:o},!0)}WebSocketQuit(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,r=Date.now(),o=Wy(Wy(Wy({},n),t),{},{elapse:r-i.startTime,lts:r});this.send({type:iA.WEBSOCKET_QUIT,data:o},!0)}async sendCustomReportMessage(e,t){if(this.customReportCount+=t.length,this.customReportCount>Dy(\"CUSTOM_REPORT_LIMIT\"))throw new rv(nv.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval((()=>{this.customReportCount=0}),5e3));const i=Date.now(),n=t.map((t=>({type:iA.USER_ANALYTICS,data:Wy(Wy({sid:e},t),{},{lts:i})})));try{Dy(\"NEW_REPORT_SERVER\")?await this.postDataToStatsCollector2(n):await this.postDataToStatsCollector(n)}catch(e){throw Qy.error(\"send custom report message failed\",e.toString()),new rv(nv.CUSTOM_REPORT_SEND_FAILED,e.message)}}sendApiInvoke(e){const t=Dy(\"NOT_REPORT_EVENT\");if(e.tag&&Dn(t)&&Dn(t).call(t,e.tag))return!1;if(null===e.sid)return this.apiInvokeUploadPendingItems.push(e),!1;const i=this.baseInfoMap.get(e.sid);if(!i)return this.apiInvokeUploadPendingItems.push(e),!1;const{cname:n,uid:r,cid:o}=i.info;let s;if(e.lts=e.lts||Date.now(),e.error)if(e.error instanceof rv){const{code:t,message:i}=e.error;s=t||i||e.error.toString()}else s=e.error.toString();const a={invokeId:e.invokeId,sid:e.sid,cname:n,cid:o,uid:r,lts:e.lts,success:e.success,elapse:e.lts-i.startTime,execElapse:e.lts-e.apiInvokeTime,apiName:e.name,options:e.options?JSON.stringify(e.options):void 0,execStates:e.states?JSON.stringify(e.states):void 0,execResult:e.result?JSON.stringify(e.result):void 0,errorCode:e.error?s:void 0,errorMsg:e.error?JSON.stringify(e.error):void 0};return this.send({type:iA.API_INVOKE,data:a},!1),!0}appendSessionId(){rA.__CLIENT_LIST__.forEach((e=>{if(e._sessionId){const t=this.apiInvokeUploadPendingItems.length;for(let i=0;i<t;i++){const t=this.apiInvokeUploadPendingItems.shift();t&&(t.sid=e._sessionId,this.sendApiInvoke(Object.assign({},t)))}}}))}send(e,t){if(t)return this.keyEventUploadPendingItems.push(e),void this.sendItems(this.keyEventUploadPendingItems,!0);this.normalEventUploadPendingItems.push(e),this.normalEventUploadPendingItems.length>Dy(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&this.normalEventUploadPendingItems.splice(0,1),this.normalEventUploadPendingItems.length>=10&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){this.keyEventUploadPendingItems.length>0&&this.sendItems(this.keyEventUploadPendingItems,!0),this.normalEventUploadPendingItems.length>0&&Date.now()-this.lastSendNormalEventTime>=5e3&&this.sendItems(this.normalEventUploadPendingItems,!1)}sendItems(e,t){const i=[],n=[];for(;e.length;){const t=e.shift();i.length<20?i.push(t):n.push(t)}e.push(...n);for(const e of[...i]){var r;-1!==this.ltsList.indexOf(e.data.lts)?(e.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(e.data.lts)):(this.ltsList.push(e.data.lts),aE(r=this.ltsList).call(r,((e,t)=>e-t)))}return t||(this.lastSendNormalEventTime=Date.now()),Dy(\"ENABLE_EVENT_REPORT\")?(i.length&&(Dy(\"NEW_REPORT_SERVER\")?this.postDataToStatsCollector2(i):this.postDataToStatsCollector(i)).catch((e=>i=>{Dy(\"EVENT_REPORT_RETRY\")&&(t?this.keyEventUploadPendingItems=this.keyEventUploadPendingItems.concat(e):(this.normalEventUploadPendingItems=this.normalEventUploadPendingItems.concat(e),this.normalEventUploadPendingItems.length>Dy(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&(this.normalEventUploadPendingItems.splice(0,this.normalEventUploadPendingItems.length-Dy(\"NORMAL_EVENT_QUEUE_CAPACITY\")),Qy.warning(\"report: drop normal events\"))))})(i)),e):e}async postDataToStatsCollector2(e){Vv.networkState===Pv.OFFLINE&&await Gh.race([Vv.onlineWaiter,$v(2*_y.maxRetryTimeout)]);const t=e=>{let t=new Uint8Array;return e.forEach((e=>{const i=mv(JSON.stringify(e.data)),n=new ArrayBuffer(5),r=(e=>{let t=0;return Object.entries(iA).forEach((i=>{let[n,r]=i;r===e.type&&(t=nA[n])})),t})(e),o=new DataView(n);o.setUint16(0,i.byteLength,!0),o.setUint8(2,255&r),o.setUint8(3,r>>>8&255),o.setUint8(4,r>>>16&255),t=fv(t,new Uint8Array(n)),t=fv(t,i)})),t},i=\"event\";let n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(Dy(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"&p=443&d=\").concat(i):\"https://\".concat(Dy(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"/\").concat(i);for(let r=0;r<2;r+=1){1===r&&(n=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(Dy(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"&p=443&d=\").concat(i):\"https://\".concat(Dy(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"/\").concat(i));try{await Ry(n,{timeout:1e4,data:t(e),headers:Wy(Wy({biz:\"webrtc\",sendts:Math.round(Date.now()/1e3),debug:\"false\"},this._appId&&{appid:this._appId}),{},{\"Content-Type\":\"application/octet-stream\"})},!0)}catch(e){if(1===r)throw e;continue}return}}async postDataToStatsCollector(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i={msgType:\"EventMessages\",sentTs:Math.round(Date.now()/1e3),payloads:e.map((e=>JSON.stringify(e))),vid:(e=>{const t=e&&e.data.sid&&this.baseInfoMap.get(e.data.sid);return t&&t.info.vid&&+t.info.vid||0})(e[0])};Vv.networkState===Pv.OFFLINE&&await Gh.race([Vv.onlineWaiter,$v(2*_y.maxRetryTimeout)]);const n=t?\"/events/proto-raws\":\"/events/messages\";let r=this.url||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(Dy(\"EVENT_REPORT_DOMAIN\"),\"&p=\").concat(Dy(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(Dy(\"EVENT_REPORT_DOMAIN\"),\":\").concat(Dy(\"STATS_COLLECTOR_PORT\")).concat(n));for(let e=0;e<2;e+=1){1===e&&(r=this.backupUrl||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(Dy(\"EVENT_REPORT_BACKUP_DOMAIN\"),\"&p=\").concat(Dy(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(n):\"https://\".concat(Dy(\"EVENT_REPORT_BACKUP_DOMAIN\"),\":\").concat(Dy(\"STATS_COLLECTOR_PORT\")).concat(n)));try{t?await Cy(r,{timeout:1e4,data:i}):await Ry(r,{timeout:1e4,data:i})}catch(t){if(1===e)throw t;continue}return}}createBaseInfo(e,t){const i=Object.assign({},eA);return i.sid=e,this.baseInfoMap.set(e,{info:i,startTime:t}),i}reportResourceTiming(e,t){const i=performance.getEntriesByName(e),n=i[i.length-1];n&&this.reportApiInvoke(t,{name:\"Client.resourceTiming\",options:n,tag:Iv.TRACER}).onSuccess()}}function oA(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t,i,n){const r=n.value;if(\"function\"==typeof r){const o=e.className||t.__className__||(\"AgoraRTCClient\"===t.constructor.name?\"Client\":t.constructor.name);n.value=function(){for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];let a=n;if(e.argsMap)try{a=e.argsMap(this,...n)}catch(e){Qy.warning(e),a=[]}try{JSON.stringify(a)}catch(e){Qy.warning(\"arguments for method \".concat(o,\".\").concat(String(i),\" not serializable for apiInvoke.\")),a=[]}const c=(e.report||sA).reportApiInvoke(this._sessionId||null,{name:\"\".concat(o,\".\").concat(String(i)),options:a,tag:Iv.TRACER,reportResult:e.reportResult},e.throttleTime);try{const t=r.apply(this,n);return t instanceof Gh?t.then((t=>(c.onSuccess(e.reportResult&&t),t))).catch((e=>{throw c.onError(e),e})):(c.onSuccess(e.reportResult&&t),t)}catch(e){throw c.onError(e),e}}}return n}}jy(rA,\"__CLIENT_LIST__\",[]);const sA=new rA;Hy.on(\"REPORT_LOG_UPLOAD\",(e=>{e.networkState=Vv.networkState,sA.reportApiInvoke(null,{name:\"logUploadError\",options:e,tag:Iv.TRACER}).onSuccess(\"logUploadError\")}));const aA=[\"CHINA\",\"GLOBAL\"],cA=function(){const e=\"us\".concat(\"erna\",\"me\"),t=\"pa\".concat(\"sswo\",\"rd\"),i=[\"t\",\"s\",\"t\"];i.splice(1,0,\"e\");const n=i.join(\"\"),r=[];for(let e=0;e<6;e++)r.push(\"1\");const o=r.join(\"\"),s={};return s[e]=n,s[t]=o,Object.assign(s,{turnServerURL:\"\",tcpport:3433,udpport:3478,forceturn:!1})}();window.DEFAULT_TURN_CONFIG=cA,yy||(Oy.WEBCS_DOMAIN=[\"ap-web-1-oversea.agora.io\",\"ap-web-1-north-america.agora.io\"],Oy.WEBCS_DOMAIN_BACKUP_LIST=[\"ap-web-2-oversea.agora.io\",\"ap-web-2-north-america.agora.io\"],Oy.PROXY_CS=[\"proxy-ap-web-oversea.agora.io\",\"proxy-ap-web-america.agora.io\"],Oy.CDS_AP=[\"cds-ap-web-oversea.agora.io\",\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],Oy.ACCOUNT_REGISTER=[\"sua-ap-web-oversea.agora.io\",\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],Oy.UAP_AP=[\"uap-ap-web-oversea.agora.io\",\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],Oy.LOG_UPLOAD_SERVER=\"logservice-oversea.agora.io\",Oy.EVENT_REPORT_DOMAIN=\"statscollector-1-oversea.agora.io\",Oy.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-2-oversea.agora.io\",Oy.PROXY_SERVER_TYPE3=\"webrtc-cloud-proxy.agora.io\",Oy.AREAS=[\"NORTH_AMERICA\",\"OVERSEA\"]);const dA=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],lA=[];function uA(e,t){return!!t&&lA.some((i=>i.uid===e&&i.channelName===t))}rA.__CLIENT_LIST__=lA;var hA=If.forEach,pA=Bn(\"forEach\")?[].forEach:function(e){return hA(this,e,arguments.length>1?arguments[1]:void 0)};wi({target:\"Array\",proto:!0,forced:[].forEach!=pA},{forEach:pA});var _A=Xi(\"Array\").forEach,EA=pn,mA=Ze,fA=l,TA=_A,SA=Array.prototype,gA={DOMTokenList:!0,NodeList:!0},RA=function(e){var t=e.forEach;return e===SA||fA(SA,e)&&t===SA.forEach||mA(gA,EA(e))?TA:t},CA=i(RA),IA=Je,vA=eo;wi({target:\"Object\",stat:!0,forced:n((function(){vA(1)}))},{keys:function(e){return vA(IA(e))}});var yA=i(ie.Object.keys),AA=i(zn),bA=wi,wA=vm,OA=d([].reverse),NA=[1,2];bA({target:\"Array\",proto:!0,forced:String(NA)===String(NA.reverse())},{reverse:function(){return wA(this)&&(this.length=this.length),OA(this)}});var DA=Xi(\"Array\").reverse,PA=l,LA=DA,kA=Array.prototype,MA=function(e){var t=e.reverse;return e===kA||PA(kA,e)&&t===kA.reverse?LA:t},UA=MA,xA=i(UA),VA=wi,FA=vm,BA=jc,jA=te,GA=xi,WA=Gi,HA=Z,KA=E_,YA=ht,qA=Xc,zA=Um(\"slice\"),JA=YA(\"species\"),XA=Array,QA=Math.max;VA({target:\"Array\",proto:!0,forced:!zA},{slice:function(e,t){var i,n,r,o=HA(this),s=WA(o),a=GA(e,s),c=GA(void 0===t?s:t,s);if(FA(o)&&(i=o.constructor,(BA(i)&&(i===XA||FA(i.prototype))||jA(i)&&null===(i=i[JA]))&&(i=void 0),i===XA||void 0===i))return qA(o,a,c);for(n=new(void 0===i?XA:i)(QA(c-a,0)),r=0;a<c;a++,r++)a in o&&KA(n,r,o[a]);return n.length=r,n}});var ZA=Xi(\"Array\").slice,$A=l,eb=ZA,tb=Array.prototype,ib=function(e){var t=e.slice;return e===tb||$A(tb,e)&&t===tb.slice?eb:t},nb=i(ib);function rb(e,t,i,n,r){var o,s,a,c={};return CA(o=yA(n)).call(o,(function(e){c[e]=n[e]})),c.enumerable=!!c.enumerable,c.configurable=!!c.configurable,(\"value\"in c||c.initializer)&&(c.writable=!0),c=AA(s=xA(a=nb(i).call(i)).call(a)).call(s,(function(i,n){return n(e,t,i)||i}),c),r&&void 0!==c.initializer&&(c.value=c.initializer?c.initializer.call(r):void 0,c.initializer=void 0),void 0===c.initializer&&(Cm(e,t,c),c=null),c}let ob=function(e){return e.L1T1=\"L1T1\",e.L1T2=\"L1T2\",e.L1T3=\"L1T3\",e.L1T3_KEY=\"L1T3_KEY\",e.L2T1_KEY=\"L2T1_KEY\",e.L2T2_KEY=\"L2T2_KEY\",e.L2T3_KEY=\"L2T3_KEY\",e.L3T1_KEY=\"L3T1_KEY\",e.L3T2_KEY=\"L3T2_KEY\",e.L3T3_KEY=\"L3T3_KEY\",e}({}),sb=function(e){return e.CERTIFICATE=\"certificate\",e.CODEC=\"codec\",e.CANDIDATE_PAIR=\"candidate-pair\",e.LOCAL_CANDIDATE=\"local-candidate\",e.REMOTE_CANDIDATE=\"remote-candidate\",e.INBOUND=\"inbound-rtp\",e.TRACK=\"track\",e.OUTBOUND=\"outbound-rtp\",e.PC=\"peer-connection\",e.REMOTE_INBOUND=\"remote-inbound-rtp\",e.REMOTE_OUTBOUND=\"remote-outbound-rtp\",e.TRANSPORT=\"transport\",e.CSRC=\"csrc\",e.DATA_CHANNEL=\"data-channel\",e.STREAM=\"stream\",e.SENDER=\"sender\",e.RECEIVER=\"receiver\",e}({}),ab=function(e){return e[e.ACCESS_POINT=101]=\"ACCESS_POINT\",e[e.UNILBS=201]=\"UNILBS\",e[e.STRING_UID_ALLOCATOR=901]=\"STRING_UID_ALLOCATOR\",e}({}),cb=function(e){return e[e.IIIEGAL_APPID=1]=\"IIIEGAL_APPID\",e[e.IIIEGAL_UID=2]=\"IIIEGAL_UID\",e[e.INTERNAL_ERROR=3]=\"INTERNAL_ERROR\",e}({}),db=function(e){return e[e.INVALID_VENDOR_KEY=5]=\"INVALID_VENDOR_KEY\",e[e.INVALID_CHANNEL_NAME=7]=\"INVALID_CHANNEL_NAME\",e[e.INTERNAL_ERROR=8]=\"INTERNAL_ERROR\",e[e.NO_AUTHORIZED=9]=\"NO_AUTHORIZED\",e[e.DYNAMIC_KEY_TIMEOUT=10]=\"DYNAMIC_KEY_TIMEOUT\",e[e.NO_ACTIVE_STATUS=11]=\"NO_ACTIVE_STATUS\",e[e.DYNAMIC_KEY_EXPIRED=13]=\"DYNAMIC_KEY_EXPIRED\",e[e.STATIC_USE_DYNAMIC_KEY=14]=\"STATIC_USE_DYNAMIC_KEY\",e[e.DYNAMIC_USE_STATIC_KEY=15]=\"DYNAMIC_USE_STATIC_KEY\",e[e.USER_OVERLOAD=16]=\"USER_OVERLOAD\",e[e.FORBIDDEN_REGION=18]=\"FORBIDDEN_REGION\",e[e.CANNOT_MEET_AREA_DEMAND=19]=\"CANNOT_MEET_AREA_DEMAND\",e}({}),lb=function(e){return e[e.NO_FLAG_SET=100]=\"NO_FLAG_SET\",e[e.FLAG_SET_BUT_EMPTY=101]=\"FLAG_SET_BUT_EMPTY\",e[e.INVALID_FALG_SET=102]=\"INVALID_FALG_SET\",e[e.FLAG_SET_BUT_NO_RE=103]=\"FLAG_SET_BUT_NO_RE\",e[e.INVALID_SERVICE_ID=104]=\"INVALID_SERVICE_ID\",e[e.NO_SERVICE_AVAILABLE=200]=\"NO_SERVICE_AVAILABLE\",e[e.NO_SERVICE_AVAILABLE_P2P=201]=\"NO_SERVICE_AVAILABLE_P2P\",e[e.NO_SERVICE_AVAILABLE_VOICE=202]=\"NO_SERVICE_AVAILABLE_VOICE\",e[e.NO_SERVICE_AVAILABLE_WEBRTC=203]=\"NO_SERVICE_AVAILABLE_WEBRTC\",e[e.NO_SERVICE_AVAILABLE_CDS=204]=\"NO_SERVICE_AVAILABLE_CDS\",e[e.NO_SERVICE_AVAILABLE_CDN=205]=\"NO_SERVICE_AVAILABLE_CDN\",e[e.NO_SERVICE_AVAILABLE_TDS=206]=\"NO_SERVICE_AVAILABLE_TDS\",e[e.NO_SERVICE_AVAILABLE_REPORT=207]=\"NO_SERVICE_AVAILABLE_REPORT\",e[e.NO_SERVICE_AVAILABLE_APP_CENTER=208]=\"NO_SERVICE_AVAILABLE_APP_CENTER\",e[e.NO_SERVICE_AVAILABLE_ENV0=209]=\"NO_SERVICE_AVAILABLE_ENV0\",e[e.NO_SERVICE_AVAILABLE_VOET=210]=\"NO_SERVICE_AVAILABLE_VOET\",e[e.NO_SERVICE_AVAILABLE_STRING_UID=211]=\"NO_SERVICE_AVAILABLE_STRING_UID\",e[e.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]=\"NO_SERVICE_AVAILABLE_WEBRTC_UNILBS\",e[e.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]=\"NO_SERVICE_AVAILABLE_UNILBS_FLV\",e}({}),ub=function(e){return e[e.K_TIMESTAMP_EXPIRED=2]=\"K_TIMESTAMP_EXPIRED\",e[e.K_CHANNEL_PERMISSION_INVALID=3]=\"K_CHANNEL_PERMISSION_INVALID\",e[e.K_CERTIFICATE_INVALID=4]=\"K_CERTIFICATE_INVALID\",e[e.K_CHANNEL_NAME_EMPTY=5]=\"K_CHANNEL_NAME_EMPTY\",e[e.K_CHANNEL_NOT_FOUND=6]=\"K_CHANNEL_NOT_FOUND\",e[e.K_TICKET_INVALID=7]=\"K_TICKET_INVALID\",e[e.K_CHANNEL_CONFLICTED=8]=\"K_CHANNEL_CONFLICTED\",e[e.K_SERVICE_NOT_READY=9]=\"K_SERVICE_NOT_READY\",e[e.K_SERVICE_TOO_HEAVY=10]=\"K_SERVICE_TOO_HEAVY\",e[e.K_UID_BANNED=14]=\"K_UID_BANNED\",e[e.K_IP_BANNED=15]=\"K_IP_BANNED\",e[e.K_CHANNEL_BANNED=16]=\"K_CHANNEL_BANNED\",e[e.K_AUTO_REBALANCE=28]=\"K_AUTO_REBALANCE\",e[e.WARN_NO_AVAILABLE_CHANNEL=103]=\"WARN_NO_AVAILABLE_CHANNEL\",e[e.WARN_LOOKUP_CHANNEL_TIMEOUT=104]=\"WARN_LOOKUP_CHANNEL_TIMEOUT\",e[e.WARN_LOOKUP_CHANNEL_REJECTED=105]=\"WARN_LOOKUP_CHANNEL_REJECTED\",e[e.WARN_OPEN_CHANNEL_TIMEOUT=106]=\"WARN_OPEN_CHANNEL_TIMEOUT\",e[e.WARN_OPEN_CHANNEL_REJECTED=107]=\"WARN_OPEN_CHANNEL_REJECTED\",e[e.WARN_REQUEST_DEFERRED=108]=\"WARN_REQUEST_DEFERRED\",e[e.ERR_DYNAMIC_KEY_TIMEOUT=109]=\"ERR_DYNAMIC_KEY_TIMEOUT\",e[e.ERR_NO_AUTHORIZED=110]=\"ERR_NO_AUTHORIZED\",e[e.ERR_VOM_SERVICE_UNAVAILABLE=111]=\"ERR_VOM_SERVICE_UNAVAILABLE\",e[e.ERR_NO_CHANNEL_AVAILABLE_CODE=112]=\"ERR_NO_CHANNEL_AVAILABLE_CODE\",e[e.ERR_MASTER_VOCS_UNAVAILABLE=114]=\"ERR_MASTER_VOCS_UNAVAILABLE\",e[e.ERR_INTERNAL_ERROR=115]=\"ERR_INTERNAL_ERROR\",e[e.ERR_NO_ACTIVE_STATUS=116]=\"ERR_NO_ACTIVE_STATUS\",e[e.ERR_INVALID_UID=117]=\"ERR_INVALID_UID\",e[e.ERR_DYNAMIC_KEY_EXPIRED=118]=\"ERR_DYNAMIC_KEY_EXPIRED\",e[e.ERR_STATIC_USE_DYANMIC_KE=119]=\"ERR_STATIC_USE_DYANMIC_KE\",e[e.ERR_DYNAMIC_USE_STATIC_KE=120]=\"ERR_DYNAMIC_USE_STATIC_KE\",e[e.ERR_NO_VOCS_AVAILABLE=2e3]=\"ERR_NO_VOCS_AVAILABLE\",e[e.ERR_NO_VOS_AVAILABLE=2001]=\"ERR_NO_VOS_AVAILABLE\",e[e.ERR_JOIN_CHANNEL_TIMEOUT=2002]=\"ERR_JOIN_CHANNEL_TIMEOUT\",e[e.ERR_REPEAT_JOIN_CHANNEL=2003]=\"ERR_REPEAT_JOIN_CHANNEL\",e[e.ERR_JOIN_BY_MULTI_IP=2004]=\"ERR_JOIN_BY_MULTI_IP\",e[e.ERR_NOT_JOINED=2011]=\"ERR_NOT_JOINED\",e[e.ERR_REPEAT_JOIN_REQUEST=2012]=\"ERR_REPEAT_JOIN_REQUEST\",e[e.ERR_INVALID_VENDOR_KEY=2013]=\"ERR_INVALID_VENDOR_KEY\",e[e.ERR_INVALID_CHANNEL_NAME=2014]=\"ERR_INVALID_CHANNEL_NAME\",e[e.ERR_INVALID_STRINGUID=2015]=\"ERR_INVALID_STRINGUID\",e[e.ERR_TOO_MANY_USERS=2016]=\"ERR_TOO_MANY_USERS\",e[e.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]=\"ERR_SET_CLIENT_ROLE_TIMEOUT\",e[e.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]=\"ERR_SET_CLIENT_ROLE_NO_PERMISSION\",e[e.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]=\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",e[e.ERR_PUBLISH_REQUEST_INVALID=2020]=\"ERR_PUBLISH_REQUEST_INVALID\",e[e.ERR_SUBSCRIBE_REQUEST_INVALID=2021]=\"ERR_SUBSCRIBE_REQUEST_INVALID\",e[e.ERR_NOT_SUPPORTED_MESSAGE=2022]=\"ERR_NOT_SUPPORTED_MESSAGE\",e[e.ERR_ILLEAGAL_PLUGIN=2023]=\"ERR_ILLEAGAL_PLUGIN\",e[e.ERR_REJOIN_TOKEN_INVALID=2024]=\"ERR_REJOIN_TOKEN_INVALID\",e[e.ERR_REJOIN_USER_NOT_JOINED=2025]=\"ERR_REJOIN_USER_NOT_JOINED\",e[e.ERR_INVALID_OPTIONAL_INFO=2027]=\"ERR_INVALID_OPTIONAL_INFO\",e[e.ILLEGAL_AES_PASSWORD=2028]=\"ILLEGAL_AES_PASSWORD\",e[e.ILLEGAL_CLIENT_ROLE_LEVEL=2029]=\"ILLEGAL_CLIENT_ROLE_LEVEL\",e[e.ERR_TOO_MANY_BROADCASTERS=2031]=\"ERR_TOO_MANY_BROADCASTERS\",e[e.ERR_TOO_MANY_SUBSCRIBERS=2032]=\"ERR_TOO_MANY_SUBSCRIBERS\",e[e.ERR_LICENSE_MISSING=32769]=\"ERR_LICENSE_MISSING\",e[e.ERR_LICENSE_EXPIRED=32771]=\"ERR_LICENSE_EXPIRED\",e[e.ERR_LICENSE_MINUTES_EXCEEDED=32773]=\"ERR_LICENSE_MINUTES_EXCEEDED\",e[e.ERR_LICENSE_PERIOD_INVALID=32774]=\"ERR_LICENSE_PERIOD_INVALID\",e[e.ERR_LICENSE_MULTIPLE_SDK_SERVICE=32778]=\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",e[e.ERR_LICENSE_ILLEGAL=32783]=\"ERR_LICENSE_ILLEGAL\",e[e.ERR_TEST_RECOVER=9e3]=\"ERR_TEST_RECOVER\",e[e.ERR_TEST_TRYNEXT=9001]=\"ERR_TEST_TRYNEXT\",e[e.ERR_TEST_RETRY=9002]=\"ERR_TEST_RETRY\",e}({}),hb=function(e){return e.CONNECTING=\"connecting\",e.CONNECTED=\"connected\",e.RECONNECTING=\"reconnecting\",e.CLOSED=\"closed\",e}({}),pb=function(e){return e.WS_CONNECTED=\"ws_connected\",e.WS_RECONNECTING=\"ws_reconnecting\",e.WS_CLOSED=\"ws_closed\",e.WS_RECONNECT_WAITTING_FINISH=\"ws_reconnect_waitting_finish\",e.WS_RECONNECT_CREATE_CONNECTION=\"ws_reconnect_create_connection\",e.ON_BINARY_DATA=\"on_binary_data\",e.REQUEST_RECOVER=\"request_recover\",e.REQUEST_JOIN_INFO=\"request_join_info\",e.REQUEST_REJOIN_INFO=\"req_rejoin_info\",e.IS_P2P_DISCONNECTED=\"is_p2p_dis\",e.DISCONNECT_P2P=\"dis_p2p\",e.ABORT_P2P_EXECUTION=\"abort_p2p_execution\",e.NEED_RENEW_SESSION=\"need-sid\",e.REPORT_JOIN_GATEWAY=\"report_join_gateway\",e.REQUEST_TIMEOUT=\"request_timeout\",e.REQUEST_SUCCESS=\"request_success\",e.JOIN_RESPONSE=\"join_response\",e.PRE_CONNECT_PC=\"pre_connect_pc\",e.P2P_CONNECTION=\"p2p_connection\",e.P2P_REMOTE_CANDIDATE_UPDATE=\"p2p_remote_candidate_update\",e.P2P_SUBSCRIBE=\"p2p_subscribe\",e.P2P_UNSUBSCRIBE=\"p2p_unsubscribe\",e.P2P_EXCHANGE_SDP=\"p2p_exchange_sdp\",e.P2P_ON_ADD_VIDEO_STREAM=\"p2p_on_add_video_stream\",e.P2P_ON_ADD_AUDIO_STREAM=\"p2p_on_add_audio_stream\",e}({}),_b=function(e){return e.PING=\"ping\",e.PING_BACK=\"ping_back\",e.JOIN=\"join_v3\",e.REJOIN=\"rejoin_v3\",e.LEAVE=\"leave\",e.SET_CLIENT_ROLE=\"set_client_role\",e.PUBLISH=\"publish\",e.PUBLISH_DATASTREAM=\"publish_datastream\",e.UNPUBLISH=\"unpublish\",e.UNPUBLISH_DATASTREAM=\"unpublish_datastream\",e.SUBSCRIBE=\"subscribe\",e.PRE_SUBSCRIBE=\"pre_subscribe\",e.SUBSCRIBE_DATASTREAM=\"subscribe_datastream\",e.SUBSCRIBE_STREAMS=\"subscribe_streams\",e.UNSUBSCRIBE=\"unsubscribe\",e.UNSUBSCRIBE_DATASTREAM=\"unsubscribe_datastream\",e.UNSUBSCRIBE_STREAMS=\"unsubscribe_streams\",e.SUBSCRIBE_CHANGE=\"subscribe_change\",e.TRAFFIC_STATS=\"traffic_stats\",e.RENEW_TOKEN=\"renew_token\",e.SWITCH_VIDEO_STREAM=\"switch_video_stream\",e.DEFAULT_VIDEO_STREAM=\"default_video_stream\",e.SET_FALLBACK_OPTION=\"set_fallback_option\",e.GATEWAY_INFO=\"gateway_info\",e.CONTROL=\"control\",e.SEND_METADATA=\"send_metadata\",e.DATA_STREAM=\"data_stream\",e.PICK_SVC_LAYER=\"pick_svc_layer\",e.RESTART_ICE=\"restart_ice\",e.CONNECT_PC=\"connect_pc\",e.SET_VIDEO_PROFILE=\"set_video_profile\",e.SET_PARAMETER=\"set_parameter\",e.SET_RTM2_FLAG=\"set_rtm2_flag\",e}({}),Eb=function(e){return e.WRTC_STATS=\"wrtc_stats\",e.WS_INFLATE_DATA_LENGTH=\"ws_inflate_data_length\",e.DENOISER_STATS=\"denoiser_stats\",e.EXTENSION_USAGE_STATS=\"extension_usage_stats\",e}({}),mb=function(e){return e.ON_USER_ONLINE=\"on_user_online\",e.ON_USER_OFFLINE=\"on_user_offline\",e.ON_STREAM_FALLBACK_UPDATE=\"on_stream_fallback_update\",e.ON_PUBLISH_STREAM=\"on_publish_stream\",e.ON_UPLINK_STATS=\"on_uplink_stats\",e.ON_P2P_LOST=\"on_p2p_lost\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"on_token_privilege_will_expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"on_token_privilege_did_expire\",e.ON_USER_BANNED=\"on_user_banned\",e.ON_USER_LICENSE_BANNED=\"on_user_license_banned\",e.ON_NOTIFICATION=\"on_notification\",e.ON_CRYPT_ERROR=\"on_crypt_error\",e.MUTE_AUDIO=\"mute_audio\",e.MUTE_VIDEO=\"mute_video\",e.UNMUTE_AUDIO=\"unmute_audio\",e.UNMUTE_VIDEO=\"unmute_video\",e.ON_P2P_OK=\"on_p2p_ok\",e.RECEIVE_METADATA=\"receive_metadata\",e.ON_DATA_STREAM=\"on_data_stream\",e.ON_RTP_CAPABILITY_CHANGE=\"on_rtp_capability_change\",e.ON_REMOTE_DATASTREAM_UPDATE=\"on_remote_datastream_update\",e.ON_REMOTE_FULL_DATASTREAM_INFO=\"on_remote_full_datastream_info\",e.ENABLE_LOCAL_VIDEO=\"enable_local_video\",e.DISABLE_LOCAL_VIDEO=\"disable_local_video\",e.ENABLE_LOCAL_AUDIO=\"enable_local_audio\",e.DISABLE_LOCAL_AUDIO=\"disable_local_audio\",e.ON_PUBLISHED_USER_LIST=\"on_published_user_list\",e}({}),fb=function(e){return e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\",e}({}),Tb=function(e){return e.CONNECTED=\"websocket:connected\",e.RECONNECTING=\"websocket:reconnecting\",e.WILL_RECONNECT=\"websocket:will_reconnect\",e.CLOSED=\"websocket:closed\",e.FAILED=\"websocket:failed\",e.ON_MESSAGE=\"websocket:on_message\",e.REQUEST_NEW_URLS=\"websocket:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"websocket:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"websocket:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"websocket:on_token_privilege_did_expire\",e}({});class Sb extends rv{constructor(e){super(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",arguments.length>2?arguments[2]:void 0),og(this,\"name\",\"AgoraRTCException\")}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\";return super.print(e,Qy)}throw(){super.throw(Qy)}}function gb(e){if(\"string\"!=typeof e||!/^[a-zA-Z0-9 \\!\\#\\$\\%\\&\\(\\)\\+\\-\\:\\;\\<\\=\\.\\>\\?\\@\\[\\]\\^\\_\\{\\}\\|\\~\\,]{1,64}$/.test(e))throw Qy.error(\"Invalid Channel Name \".concat(e)),new Sb(nv.INVALID_PARAMS,\"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,\")}function Rb(e){if(!function(e){return\"number\"==typeof e&&Math.floor(e)===e&&0<=e&&e<=4294967295}(e)&&!hv(e,1,255))throw new Sb(nv.INVALID_PARAMS,\"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]\");\"string\"==typeof e&&Qy.warn(\"You input a string as the user ID, to ensure better end-user experience, Agora highly suggests not using a string as the user ID.\")}let Cb=function(e){return e.TRANSCODE=\"mix_streaming\",e.RAW=\"raw_streaming\",e}({});const Ib={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,audioChannel:0},vb={x:0,y:0,width:160,height:160,zOrder:255,alpha:1};function yb(e,t){dv(e.url,\"\".concat(t,\".url\"),1,1e3,!1),uv(e.x)||av(e.x,\"\".concat(t,\".x\"),0,1e4),uv(e.y)||av(e.y,\"\".concat(t,\".y\"),0,1e4),uv(e.width)||av(e.width,\"\".concat(t,\".width\"),0,1e4),uv(e.height)||av(e.height,\"\".concat(t,\".height\"),0,1e4),uv(e.zOrder)||av(e.zOrder,\"\".concat(t,\".zOrder\"),0,255),uv(e.alpha)||av(e.alpha,\"\".concat(t,\".alpha\"),0,1,!1)}const Ab={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:\"\"};let bb=function(e){return e.WARNING=\"@live_uap-warning\",e.ERROR=\"@line_uap-error\",e.PUBLISH_STREAM_STATUS=\"@live_uap-publish-status\",e.WORKER_STATUS=\"@live_uap-worker-status\",e.REQUEST_NEW_ADDRESS=\"@live_uap-request-address\",e}({}),wb=function(e){return e.REQUEST_WORKER_MANAGER_LIST=\"@live_req_worker_manager\",e}({}),Ob=function(e){return e[e.LIVE_STREAM_RESPONSE_SUCCEED=200]=\"LIVE_STREAM_RESPONSE_SUCCEED\",e[e.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]=\"LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM\",e[e.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=450]=\"LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_BAD_STREAM=451]=\"LIVE_STREAM_RESPONSE_BAD_STREAM\",e[e.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]=\"LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]=\"LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST\",e[e.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]=\"LIVE_STREAM_RESPONSE_NOT_AUTHORIZED\",e[e.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]=\"LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE\",e[e.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=429]=\"LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN\",e[e.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]=\"LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH\",e[e.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]=\"LIVE_STREAM_RESPONSE_NOT_SUPPORTED\",e[e.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]=\"LIVE_STREAM_RESPONSE_MAX_STREAM_NUM\",e[e.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]=\"LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WORKER_LOST=501]=\"LIVE_STREAM_RESPONSE_WORKER_LOST\",e[e.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=502]=\"LIVE_STREAM_RESPONSE_RESOURCE_LIMIT\",e[e.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]=\"LIVE_STREAM_RESPONSE_WORKER_QUIT\",e[e.ERROR_FAIL_SEND_MESSAGE=504]=\"ERROR_FAIL_SEND_MESSAGE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH\",e[e.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=33]=\"PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN\",e}({});function Nb(e){if(!e.channelName)throw new Sb(nv.INVALID_PARAMS,\"invalid channelName in info\");if(\"number\"!=typeof e.uid)throw new Sb(nv.INVALID_PARAMS,\"invalid uid in info, uid must be a number\");return e.token&&dv(e.token,\"info.token\",1,2047),Rb(e.uid),gb(e.channelName),!0}let Db=function(e){return e[e.SetSdkProfile=0]=\"SetSdkProfile\",e[e.SetSourceChannel=1]=\"SetSourceChannel\",e[e.SetSourceUserId=2]=\"SetSourceUserId\",e[e.SetDestChannel=3]=\"SetDestChannel\",e[e.StartPacketTransfer=4]=\"StartPacketTransfer\",e[e.StopPacketTransfer=5]=\"StopPacketTransfer\",e[e.UpdateDestChannel=6]=\"UpdateDestChannel\",e[e.Reconnect=7]=\"Reconnect\",e[e.SetVideoProfile=8]=\"SetVideoProfile\",e}({}),Pb=function(e){return e.NETWORK_DISCONNECTED=\"NETWORK_DISCONNECTED\",e.NETWORK_CONNECTED=\"NETWORK_CONNECTED\",e.PACKET_JOINED_SRC_CHANNEL=\"PACKET_JOINED_SRC_CHANNEL\",e.PACKET_JOINED_DEST_CHANNEL=\"PACKET_JOINED_DEST_CHANNEL\",e.PACKET_SENT_TO_DEST_CHANNEL=\"PACKET_SENT_TO_DEST_CHANNEL\",e.PACKET_RECEIVED_VIDEO_FROM_SRC=\"PACKET_RECEIVED_VIDEO_FROM_SRC\",e.PACKET_RECEIVED_AUDIO_FROM_SRC=\"PACKET_RECEIVED_AUDIO_FROM_SRC\",e.PACKET_UPDATE_DEST_CHANNEL=\"PACKET_UPDATE_DEST_CHANNEL\",e.PACKET_UPDATE_DEST_CHANNEL_REFUSED=\"PACKET_UPDATE_DEST_CHANNEL_REFUSED\",e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE=\"PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE\",e}({}),Lb=function(e){return e.RELAY_STATE_IDLE=\"RELAY_STATE_IDLE\",e.RELAY_STATE_CONNECTING=\"RELAY_STATE_CONNECTING\",e.RELAY_STATE_RUNNING=\"RELAY_STATE_RUNNING\",e.RELAY_STATE_FAILURE=\"RELAY_STATE_FAILURE\",e}({}),kb=function(e){return e.RELAY_OK=\"RELAY_OK\",e.SERVER_CONNECTION_LOST=\"SERVER_CONNECTION_LOST\",e.SRC_TOKEN_EXPIRED=\"SRC_TOKEN_EXPIRED\",e.DEST_TOKEN_EXPIRED=\"DEST_TOKEN_EXPIRED\",e}({}),Mb=function(e){return e.High=\"high\",e.Low=\"low\",e.Audio=\"audio\",e.Screen=\"screen\",e.ScreenLow=\"screen_low\",e}({}),Ub=function(e){return e.DISCONNECT=\"disconnect\",e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGE=\"stream-type-change\",e.IS_P2P_DISCONNECTED=\"is-p2p-dis\",e.DISCONNECT_P2P=\"dis-p2p\",e.REQUEST_NEW_GATEWAY_LIST=\"req-gate-url\",e.NEED_RENEW_SESSION=\"need-sid\",e.REQUEST_P2P_CONNECTION_PARAMS=\"request-p2p-connection-params\",e.JOIN_RESPONSE=\"join-response\",e.RESET_CONNECTION_EVENTS=\"reset-connection-events\",e.PRE_CONNECT_PC=\"pre-connect_pc\",e}({}),xb=function(e){return e.P2P_DISCONNECTED=\"P2P_DISCONNECTED\",e.A_ROUND_WS_FAILED=\"A_ROUND_WS_FAILED\",e.TIMEOUT=\"TIMEOUT\",e.UNKNOWN_REASON=\"UNKNOWN_REASON\",e}({}),Vb=function(e){return e[e.Nothing=0]=\"Nothing\",e[e.Audio=1]=\"Audio\",e[e.LwoVideo=2]=\"LwoVideo\",e[e.Video=4]=\"Video\",e[e.Data=8]=\"Data\",e[e.DataStream0=256]=\"DataStream0\",e[e.DataStream1=512]=\"DataStream1\",e[e.DataStream2=1024]=\"DataStream2\",e[e.DataStream3=2048]=\"DataStream3\",e[e.DataStream4=4096]=\"DataStream4\",e[e.DataStream5=8192]=\"DataStream5\",e[e.DataStream6=16384]=\"DataStream6\",e[e.DataStream7=32768]=\"DataStream7\",e}({}),Fb=function(e){return e.CHINA=\"CHINA\",e.ASIA=\"ASIA\",e.NORTH_AMERICA=\"NORTH_AMERICA\",e.EUROPE=\"EUROPE\",e.JAPAN=\"JAPAN\",e.INDIA=\"INDIA\",e.KOREA=\"KOREA\",e.HKMC=\"HKMC\",e.US=\"US\",e.OCEANIA=\"OCEANIA\",e.SOUTH_AMERICA=\"SOUTH_AMERICA\",e.AFRICA=\"AFRICA\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"EXTENSIONS\",e}({});const Bb=[Fb.AFRICA,Fb.ASIA,Fb.CHINA,Fb.EUROPE,Fb.GLOBAL,Fb.INDIA,Fb.JAPAN,Fb.NORTH_AMERICA,Fb.OCEANIA,Fb.OVERSEA,Fb.SOUTH_AMERICA];let jb=function(e){return e.CHINA=\"CN\",e.ASIA=\"AS\",e.NORTH_AMERICA=\"NA\",e.EUROPE=\"EU\",e.JAPAN=\"JP\",e.INDIA=\"IN\",e.KOREA=\"KR\",e.HKMC=\"HK\",e.US=\"US\",e.OCEANIA=\"OC\",e.SOUTH_AMERICA=\"SA\",e.AFRICA=\"AF\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\",e.EXTENSIONS=\"GLOBAL\",e}({});const Gb={CHINA:{},ASIA:{CODE:jb.ASIA,WEBCS_DOMAIN:[\"ap-web-1-asia.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-asia.agora.io\"],PROXY_CS:[\"proxy-ap-web-asia.agora.io\"],CDS_AP:[\"cds-ap-web-asia.agora.io\",\"cds-ap-web-asia2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-asia.agora.io\",\"sua-ap-web-asia2.agora.io\"],UAP_AP:[\"uap-ap-web-asia.agora.io\",\"uap-ap-web-asia2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-asia.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-asia.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-asia.agora.io\"],PROXY_SERVER_TYPE3:[\"southeast-asia.webrtc-cloud-proxy.sd-rtn.com\"]},NORTH_AMERICA:{CODE:jb.NORTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-north-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-north-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-america.agora.io\"],CDS_AP:[\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],UAP_AP:[\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-north-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-north-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-north-america.agora.io\"],PROXY_SERVER_TYPE3:[\"east-usa.webrtc-cloud-proxy.sd-rtn.com\"]},EUROPE:{CODE:jb.EUROPE,WEBCS_DOMAIN:[\"ap-web-1-europe.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-europe.agora.io\"],PROXY_CS:[\"proxy-ap-web-europe.agora.io\"],CDS_AP:[\"cds-ap-web-europe.agora.io\",\"cds-ap-web-europe2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-europe.agora.io\",\"sua-ap-web-europe.agora.io\"],UAP_AP:[\"uap-ap-web-europe.agora.io\",\"uap-ap-web-europe2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-europe.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-europe.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-europe.agora.io\"],PROXY_SERVER_TYPE3:[\"europe.webrtc-cloud-proxy.sd-rtn.com\"]},JAPAN:{CODE:jb.JAPAN,WEBCS_DOMAIN:[\"ap-web-1-japan.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-japan.agora.io\"],PROXY_CS:[\"proxy-ap-web-japan.agora.io\"],CDS_AP:[\"cds-ap-web-japan.agora.io\",\"cds-ap-web-japan2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-japan.agora.io\",\"sua-ap-web-japan2.agora.io\"],UAP_AP:[\"uap-ap-web-japan.agora.io\",\"uap-ap-web-japan2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-japan.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-japan.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-japan.agora.io\"],PROXY_SERVER_TYPE3:[\"japan.webrtc-cloud-proxy.sd-rtn.com\"]},INDIA:{CODE:jb.INDIA,WEBCS_DOMAIN:[\"ap-web-1-india.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-india.agora.io\"],PROXY_CS:[\"proxy-ap-web-india.agora.io\"],CDS_AP:[\"cds-ap-web-india.agora.io\",\"cds-ap-web-india2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-india.agora.io\",\"sua-ap-web-india2.agora.io\"],UAP_AP:[\"uap-ap-web-india.agora.io\",\"uap-ap-web-india2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-india.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-india.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-india.agora.io\"],PROXY_SERVER_TYPE3:[\"india.webrtc-cloud-proxy.sd-rtn.com\"]},KOREA:{CODE:jb.KOREA,WEBCS_DOMAIN:[\"ap-web-1-korea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-korea.agora.io\"],PROXY_CS:[\"proxy-ap-web-korea.agora.io\"],CDS_AP:[\"cds-ap-web-korea.agora.io\",\"cds-ap-web-korea2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-korea.agora.io\",\"sua-ap-web-korea2.agora.io\"],UAP_AP:[\"uap-ap-web-korea.agora.io\",\"uap-ap-web-korea2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-korea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-korea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-korea.agora.io\"],PROXY_SERVER_TYPE3:[\"korea.webrtc-cloud-proxy.sd-rtn.com\"]},HKMC:{CODE:jb.HKMC,WEBCS_DOMAIN:[\"ap-web-1-hkmc.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-hkmc.agora.io\"],PROXY_CS:[\"proxy-ap-web-hkmc.agora.io\"],CDS_AP:[\"cds-ap-web-hkmc.agora.io\",\"cds-ap-web-hkmc2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-hkmc.agora.io\",\"sua-ap-web-hkmc2.agora.io\"],UAP_AP:[\"uap-ap-web-hkmc.agora.io\",\"uap-ap-web-hkmc2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-hkmc.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-hkmc.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-hkmc.agora.io\"],PROXY_SERVER_TYPE3:[\"hkmc.webrtc-cloud-proxy.sd-rtn.com\"]},US:{CODE:jb.US,WEBCS_DOMAIN:[\"ap-web-1-us.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-us.agora.io\"],PROXY_CS:[\"proxy-ap-web-us.agora.io\"],CDS_AP:[\"cds-ap-web-us.agora.io\",\"cds-ap-web-us2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-us.agora.io\",\"sua-ap-web-us2.agora.io\"],UAP_AP:[\"uap-ap-web-us.agora.io\",\"uap-ap-web-us2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-us.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-us.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-us.agora.io\"],PROXY_SERVER_TYPE3:[\"us.webrtc-cloud-proxy.sd-rtn.com\"]},OVERSEA:{CODE:jb.OVERSEA,WEBCS_DOMAIN:[\"ap-web-1-oversea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oversea.agora.io\"],PROXY_CS:[\"proxy-ap-web-oversea.agora.io\"],CDS_AP:[\"cds-ap-web-oversea.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oversea.agora.io\"],UAP_AP:[\"uap-ap-web-oversea.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oversea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oversea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oversea.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.agora.io\"]},GLOBAL:{CODE:jb.GLOBAL,WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-ap-web-3.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-ap-web-3.agora.io\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-ap-web-3.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\"]},OCEANIA:{CODE:jb.OCEANIA,WEBCS_DOMAIN:[\"ap-web-1-oceania.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oceania.agora.io\"],PROXY_CS:[\"proxy-ap-web-oceania.agora.io\"],CDS_AP:[\"cds-ap-web-oceania.agora.io\",\"cds-ap-web-oceania2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oceania.agora.io\",\"sua-ap-web-oceania2.agora.io\"],UAP_AP:[\"uap-ap-web-oceania.agora.io\",\"uap-ap-web-oceania2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oceania.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oceania.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oceania.agora.io\"],PROXY_SERVER_TYPE3:[\"oceania.webrtc-cloud-proxy.sd-rtn.com\"]},SOUTH_AMERICA:{CODE:jb.SOUTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-south-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-south-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-south-america.agora.io\"],CDS_AP:[\"cds-ap-web-south-america.agora.io\",\"cds-ap-web-south-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-south-america.agora.io\",\"sua-ap-web-south-america2.agora.io\"],UAP_AP:[\"uap-ap-web-south-america.agora.io\",\"uap-ap-web-south-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-south-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-south-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-america.agora.io\"],PROXY_SERVER_TYPE3:[\"south-america.webrtc-cloud-proxy.sd-rtn.com\"]},AFRICA:{CODE:jb.AFRICA,WEBCS_DOMAIN:[\"ap-web-1-africa.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-africa.agora.io\"],PROXY_CS:[\"proxy-ap-web-africa.agora.io\"],CDS_AP:[\"cds-ap-web-africa.agora.io\",\"cds-ap-web-africa2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-africa.agora.io\",\"sua-ap-web-africa2.agora.io\"],UAP_AP:[\"uap-ap-web-africa.agora.io\",\"uap-ap-web-africa2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-africa.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-africa.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-africa.agora.io\"],PROXY_SERVER_TYPE3:[\"africa.webrtc-cloud-proxy.sd-rtn.com\"]},EXTENSIONS:{}};yy&&(Gb.CHINA={CODE:jb.CHINA,WEBCS_DOMAIN:[\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"proxy-web.ap.sd-rtn.com\"],CDS_AP:[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-web-2.ap.sd-rtn.com\",\"uap-web-4.ap.sd-rtn.com\"],EVENT_REPORT_DOMAIN:[\"web-3.statscollector.sd-rtn.com\"],EVENT_REPORT_BACKUP_DOMAIN:[\"web-4.statscollector.sd-rtn.com\"],LOG_UPLOAD_SERVER:[\"logservice-china.agora.io\"],PROXY_SERVER_TYPE3:[\"east-cn.webrtc-cloud-proxy.sd-rtn.com\"]});let Wb=function(e){return e.UPDATE_BITRATE_LIMIT=\"update_bitrate_limit\",e}({});class Hb extends Sv{constructor(e,t){super(),og(this,\"onICEConnectionStateChange\",void 0),og(this,\"onConnectionStateChange\",void 0),og(this,\"onDTLSTransportStateChange\",void 0),og(this,\"onDTLSTransportError\",void 0),og(this,\"onICETransportStateChange\",void 0),og(this,\"onFirstAudioReceived\",void 0),og(this,\"onFirstVideoReceived\",void 0),og(this,\"onFirstAudioDecoded\",void 0),og(this,\"onFirstVideoDecoded\",void 0),og(this,\"onFirstVideoDecodedTimeout\",void 0),og(this,\"onSelectedLocalCandidateChanged\",void 0),og(this,\"onSelectedRemoteCandidateChanged\",void 0),og(this,\"getLocalVideoStats\",void 0)}}class Kb extends Hb{constructor(e,t){super(e,t),og(this,\"establishPromise\",void 0)}}let Yb=function(e){return e.VIDEO=\"video\",e.AUDIO=\"audio\",e}({}),qb=function(e){return e[e.UDP=0]=\"UDP\",e[e.TCP=1]=\"TCP\",e[e.RELAY=2]=\"RELAY\",e}({}),zb=function(e){return e[e.FIRST_CONNECTION=0]=\"FIRST_CONNECTION\",e[e.TCP_RESTART=1]=\"TCP_RESTART\",e[e.RELAY_RESTART=2]=\"RELAY_RESTART\",e[e.OLD_FIRST_CONNECTION=10]=\"OLD_FIRST_CONNECTION\",e[e.OLD_RESTART=11]=\"OLD_RESTART\",e[e.DISCONNECTED_OR_FAILED=20]=\"DISCONNECTED_OR_FAILED\",e}({}),Jb=function(e){return e.LocalVideoTrack=\"videoTrack\",e.LocalAudioTrack=\"audioTrack\",e.LocalVideoLowTrack=\"videoLowTrack\",e}({}),Xb=function(e){return e.New=\"new\",e.Connected=\"connected\",e.Reconnecting=\"reconnecting\",e.Disconnected=\"disconnected\",e}({}),Qb=function(e){return e.StateChange=\"stateChange\",e.IceConnectionStateChange=\"iceConnectionStateChange\",e.RequestMuteLocal=\"requestMuteLocal\",e.RequestUnmuteLocal=\"requestUnmuteLocal\",e.RequestRePublish=\"requestRePublish\",e.RequestRePublishDataChannel=\"requestRePublishDataChannel\",e.RequestReSubscribe=\"requestReSubscribe\",e.RequestUploadStats=\"requestUploadStats\",e.RequestUpload=\"requestUpload\",e.MediaReconnectStart=\"MediaReconnectStart\",e.MediaReconnectEnd=\"MediaReconnectEnd\",e.NeedSignalRTT=\"NeedSignalRTT\",e.RequestRestartICE=\"RequestRestartIce\",e.PeerConnectionStateChange=\"PeerConnectionStateChange\",e.RequestReconnect=\"RequestReconnect\",e.RequestReconnectPC=\"RequestReconnectPC\",e.RequestUnpublishForReconnectPC=\"RequestUnpublishForReconnectPC\",e.P2PLost=\"P2PLost\",e.UpdateVideoEncoder=\"UpdateVideoEncoder\",e.ConnectionTypeChange=\"ConnectionTypeChange\",e.RequestLowStreamParameter=\"RequestLowStreamParameter\",e.QueryClientConnectionState=\"QueryClientConnectionState\",e.LocalCandidate=\"LocalCandidate\",e.RequestP2PMuteLocal=\"requestP2PMuteLocal\",e.RequestP2PUnPublish=\"RequestP2PUnPublish\",e.RequestP2PUnmuteRemote=\"RequestP2PUnmuteRemote\",e.RequestP2PMuteRemote=\"RequestP2PMuteRemote\",e.RequestP2PRestartICE=\"RequestP2PRestartICE\",e}({}),Zb=function(e){return e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\",e}({}),$b=function(e){return e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\",e}({}),ew=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\",e}({}),tw=function(e){return e.CONNECTED=\"transmitter:connected\",e.RECONNECTING=\"transmitter:reconnecting\",e.WILL_RECONNECT=\"transmitter:will_reconnect\",e.CLOSED=\"transmitter:closed\",e.FAILED=\"transmitter:failed\",e.ON_MESSAGE=\"transmitter:on_message\",e.REQUEST_NEW_URLS=\"transmitter:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"transmitter:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"transmitter:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"transmitter:on_token_privilege_did_expire\",e.TO_CONNECT_DATACHANNEL=\"transmitter:to_connect_datachannel\",e.FAILBACK=\"transmitter:failback\",e.PRE_CONNECT_PC=\"transmitter:pre_connect_pc\",e}({}),iw=function(e){return e.CAMERA_CHANGED=\"camera-changed\",e.MICROPHONE_CHANGED=\"microphone-changed\",e.PLAYBACK_DEVICE_CHANGED=\"playback-device-changed\",e.AUDIO_AUTOPLAY_FAILED=\"audio-autoplay-failed\",e.AUTOPLAY_FAILED=\"autoplay-failed\",e.AUDIO_CONTEXT_STATE_CHANGED=\"audio-context-state-changed\",e.SECURITY_POLICY_VIOLATION=\"security-policy-violation\",e}({}),nw=function(e){return e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\",e}({}),rw=function(e){return e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\",e}({}),ow=function(e){return e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\",e}({}),sw=function(e){return e.CALL=\"call\",e.CANDIDATE=\"candidate\",e.PUBLISH=\"publish\",e.UNPUBLISH=\"unpublish\",e.CONTROL=\"control\",e.RESTART_ICE=\"restart_ice\",e.ACK=\"ack\",e.RESPONSE=\"response\",e.JOIN=\"join\",e.CHECK=\"check\",e}({}),aw=function(e){return e.ABORT=\"abort\",e}({}),cw=function(e){return e.MUTE_LOCAL_AUDIO=\"mute_local_audio\",e.MUTE_LOCAL_VIDEO=\"mute_local_video\",e.UNMUTE_LOCAL_AUDIO=\"unmute_local_audio\",e.UNMUTE_LOCAL_VIDEO=\"unmute_local_video\",e}({}),dw=function(e){return e.P2P_TOKEN_TIMEOUT=\"p2p_token_timeout\",e.P2P_TOKEN_CHANGED=\"p2p_token_changed\",e}({});const lw={[ab.ACCESS_POINT]:{[lb.NO_FLAG_SET]:{desc:\"flag is zero\",retry:!1},[lb.FLAG_SET_BUT_EMPTY]:{desc:\"flag is empty\",retry:!1},[lb.INVALID_FALG_SET]:{desc:\"invalid flag\",retry:!1},[lb.FLAG_SET_BUT_NO_RE]:{desc:\"flag set unilbs but no request\",retry:!1},[lb.INVALID_SERVICE_ID]:{desc:\"invalid service id\",retry:!1},[lb.NO_SERVICE_AVAILABLE]:{desc:\"no service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_P2P]:{desc:\"no unilbs p2p service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_VOICE]:{desc:\"no unilbs voice service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:\"no unilbs webrtc service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_CDS]:{desc:\"no cds service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_CDN]:{desc:\"no cdn dispatcher service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_TDS]:{desc:\"no tds service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_REPORT]:{desc:\"no unilbs report service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:\"no app center service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_ENV0]:{desc:\"no unilbs sig env0 service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_VOET]:{desc:\"no unilbs voet service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:\"no string uid service available\",retry:!0},[lb.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:\"no webrtc unilbs service available\",retry:!0}},[ab.UNILBS]:{[db.INVALID_VENDOR_KEY]:{desc:\"invalid vendor key, can not find appid\",retry:!1},[db.INVALID_CHANNEL_NAME]:{desc:\"invalid channel name\",retry:!1},[db.INTERNAL_ERROR]:{desc:\"unilbs internal error\",retry:!1},[db.NO_AUTHORIZED]:{desc:\"invalid token, authorized failed\",retry:!1},[db.DYNAMIC_KEY_TIMEOUT]:{desc:\"dynamic key or token timeout\",retry:!1},[db.NO_ACTIVE_STATUS]:{desc:\"no active status\",retry:!1},[db.DYNAMIC_KEY_EXPIRED]:{desc:\"dynamic key expired\",retry:!1},[db.STATIC_USE_DYNAMIC_KEY]:{desc:\"static use dynamic key\",retry:!1},[db.DYNAMIC_USE_STATIC_KEY]:{desc:\"dynamic use static key\",retry:!1},[db.USER_OVERLOAD]:{desc:\"amount of users over load\",retry:!1},[db.FORBIDDEN_REGION]:{desc:\"the request is forbidden in this area\",retry:!1},[db.CANNOT_MEET_AREA_DEMAND]:{desc:\"unable to allocate services in this area\",retry:!1}},[ab.STRING_UID_ALLOCATOR]:{[cb.IIIEGAL_APPID]:{desc:\"invalid appid\",retry:!1},[cb.IIIEGAL_UID]:{desc:\"invalid string uid\",retry:!1},[cb.INTERNAL_ERROR]:{desc:\"string uid allocator internal error\",retry:!0}}};function uw(e){const t=lw[Math.floor(e/1e4)];if(!t)return{desc:\"unknown error\",retry:!1};const i=t[e%1e4];if(!i){if(Math.floor(e/1e4)===ab.ACCESS_POINT){const t=e%1e4;if(\"1\"===t.toString()[0])return{desc:e.toString(),retry:!1};if(\"2\"===t.toString()[0])return{desc:e.toString(),retry:!0}}return{desc:\"unknown error\",retry:!1}}return i}const hw={[ub.K_TIMESTAMP_EXPIRED]:{desc:\"K_TIMESTAMP_EXPIRED\",action:\"failed\"},[ub.K_CHANNEL_PERMISSION_INVALID]:{desc:\"K_CHANNEL_PERMISSION_INVALID\",action:\"failed\"},[ub.K_CERTIFICATE_INVALID]:{desc:\"K_CERTIFICATE_INVALID\",action:\"failed\"},[ub.K_CHANNEL_NAME_EMPTY]:{desc:\"K_CHANNEL_NAME_EMPTY\",action:\"failed\"},[ub.K_CHANNEL_NOT_FOUND]:{desc:\"K_CHANNEL_NOT_FOUND\",action:\"failed\"},[ub.K_TICKET_INVALID]:{desc:\"K_TICKET_INVALID\",action:\"failed\"},[ub.K_CHANNEL_CONFLICTED]:{desc:\"K_CHANNEL_CONFLICTED\",action:\"failed\"},[ub.K_SERVICE_NOT_READY]:{desc:\"K_SERVICE_NOT_READY\",action:\"tryNext\"},[ub.K_SERVICE_TOO_HEAVY]:{desc:\"K_SERVICE_TOO_HEAVY\",action:\"tryNext\"},[ub.K_UID_BANNED]:{desc:\"K_UID_BANNED\",action:\"failed\"},[ub.K_IP_BANNED]:{desc:\"K_IP_BANNED\",action:\"failed\"},[ub.K_AUTO_REBALANCE]:{desc:\"k_AUTO_REBALANCE\",action:\"recover\"},[ub.ERR_INVALID_VENDOR_KEY]:{desc:\"ERR_INVALID_VENDOR_KEY\",action:\"failed\"},[ub.ERR_INVALID_CHANNEL_NAME]:{desc:\"ERR_INVALID_CHANNEL_NAME\",action:\"failed\"},[ub.WARN_NO_AVAILABLE_CHANNEL]:{desc:\"WARN_NO_AVAILABLE_CHANNEL\",action:\"failed\"},[ub.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:\"WARN_LOOKUP_CHANNEL_TIMEOUT\",action:\"tryNext\"},[ub.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:\"WARN_LOOKUP_CHANNEL_REJECTED\",action:\"failed\"},[ub.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:\"WARN_OPEN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[ub.WARN_OPEN_CHANNEL_REJECTED]:{desc:\"WARN_OPEN_CHANNEL_REJECTED\",action:\"failed\"},[ub.WARN_REQUEST_DEFERRED]:{desc:\"WARN_REQUEST_DEFERRED\",action:\"failed\"},[ub.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:\"ERR_DYNAMIC_KEY_TIMEOUT\",action:\"failed\"},[ub.ERR_NO_AUTHORIZED]:{desc:\"ERR_NO_AUTHORIZED\",action:\"failed\"},[ub.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:\"ERR_VOM_SERVICE_UNAVAILABLE\",action:\"tryNext\"},[ub.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:\"ERR_NO_CHANNEL_AVAILABLE_CODE\",action:\"failed\"},[ub.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:\"ERR_MASTER_VOCS_UNAVAILABLE\",action:\"tryNext\"},[ub.ERR_INTERNAL_ERROR]:{desc:\"ERR_INTERNAL_ERROR\",action:\"tryNext\"},[ub.ERR_NO_ACTIVE_STATUS]:{desc:\"ERR_NO_ACTIVE_STATUS\",action:\"failed\"},[ub.ERR_INVALID_UID]:{desc:\"ERR_INVALID_UID\",action:\"failed\"},[ub.ERR_DYNAMIC_KEY_EXPIRED]:{desc:\"ERR_DYNAMIC_KEY_EXPIRED\",action:\"failed\"},[ub.ERR_STATIC_USE_DYANMIC_KE]:{desc:\"ERR_STATIC_USE_DYANMIC_KE\",action:\"failed\"},[ub.ERR_DYNAMIC_USE_STATIC_KE]:{desc:\"ERR_DYNAMIC_USE_STATIC_KE\",action:\"failed\"},[ub.ERR_NO_VOCS_AVAILABLE]:{desc:\"ERR_NO_VOCS_AVAILABLE\",action:\"tryNext\"},[ub.ERR_NO_VOS_AVAILABLE]:{desc:\"ERR_NO_VOS_AVAILABLE\",action:\"tryNext\"},[ub.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:\"ERR_JOIN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[ub.ERR_JOIN_BY_MULTI_IP]:{desc:\"ERR_JOIN_BY_MULTI_IP\",action:\"recover\"},[ub.ERR_NOT_JOINED]:{desc:\"ERR_NOT_JOINED\",action:\"failed\"},[ub.ERR_REPEAT_JOIN_REQUEST]:{desc:\"ERR_REPEAT_JOIN_REQUEST\",action:\"quit\"},[ub.ERR_REPEAT_JOIN_CHANNEL]:{desc:\"ERR_REPEAT_JOIN_CHANNEL\",action:\"quit\"},[ub.ERR_INVALID_STRINGUID]:{desc:\"ERR_INVALID_STRINGUID\",action:\"failed\"},[ub.ERR_TOO_MANY_USERS]:{desc:\"ERR_TOO_MANY_USERS\",action:\"tryNext\"},[ub.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[ub.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[ub.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",action:\"success\"},[ub.ERR_PUBLISH_REQUEST_INVALID]:{desc:\"ERR_PUBLISH_REQUEST_INVALID\",action:\"failed\"},[ub.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:\"ERR_SUBSCRIBE_REQUEST_INVALID\",action:\"failed\"},[ub.ERR_NOT_SUPPORTED_MESSAGE]:{desc:\"ERR_NOT_SUPPORTED_MESSAGE\",action:\"failed\"},[ub.ERR_ILLEAGAL_PLUGIN]:{desc:\"ERR_ILLEAGAL_PLUGIN\",action:\"failed\"},[ub.ILLEGAL_CLIENT_ROLE_LEVEL]:{desc:\"ILLEGAL_CLIENT_ROLE_LEVEL\",action:\"failed\"},[ub.ERR_REJOIN_TOKEN_INVALID]:{desc:\"ERR_REJOIN_TOKEN_INVALID\",action:\"failed\"},[ub.ERR_REJOIN_USER_NOT_JOINED]:{desc:\"ERR_REJOIN_NOT_JOINED\",action:\"failed\"},[ub.ERR_INVALID_OPTIONAL_INFO]:{desc:\"ERR_INVALID_OPTIONAL_INFO\",action:\"quit\"},[ub.ERR_TEST_RECOVER]:{desc:\"ERR_TEST_RECOVER\",action:\"recover\"},[ub.ERR_TEST_TRYNEXT]:{desc:\"ERR_TEST_TRYNEXT\",action:\"recover\"},[ub.ERR_TEST_RETRY]:{desc:\"ERR_TEST_RETRY\",action:\"recover\"},[ub.ILLEGAL_AES_PASSWORD]:{desc:\"ERR_TEST_RETRY\",action:\"failed\"},[ub.ERR_TOO_MANY_BROADCASTERS]:{desc:\"ERR_TOO_MANY_BROADCASTERS\",action:\"failed\"},[ub.ERR_TOO_MANY_SUBSCRIBERS]:{desc:\"ERR_TOO_MANY_SUBSCRIBERS\",action:\"failed\"},[ub.ERR_LICENSE_ILLEGAL]:{desc:\"ERR_LICENSE_ILLEGAL\",action:\"quit\"},[ub.ERR_LICENSE_MISSING]:{desc:\"ERR_LICENSE_MISSING\",action:\"quit\"},[ub.ERR_LICENSE_EXPIRED]:{desc:\"ERR_LICENSE_EXPIRED\",action:\"quit\"},[ub.ERR_LICENSE_MINUTES_EXCEEDED]:{desc:\"ERR_LICENSE_MINUTES_EXCEEDED\",action:\"quit\"},[ub.ERR_LICENSE_PERIOD_INVALID]:{desc:\"ERR_LICENSE_PERIOD_INVALID\",action:\"quit\"},[ub.ERR_LICENSE_MULTIPLE_SDK_SERVICE]:{desc:\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",action:\"quit\"}};function pw(e){const t=hw[e];return t||{desc:\"UNKNOWN_ERROR_\".concat(e),action:\"failed\"}}function _w(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Ew(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?_w(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):_w(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function mw(e){return e.every((e=>e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING))}function fw(e,t){if(\"string\"==typeof e)return e;const{proxy:i,host:n,port:r}=e;if(t){const e=Dy(\"JOIN_GATEWAY_FALLBACK_PORT\")||443;return 443===e?\"wss://\".concat(n,\"/ws/?p=\").concat(Number(r)+150):\"wss://\".concat(n,\":\").concat(e,\"/ws/?p=\").concat(Number(r)+150)}return i?\"wss://\".concat(i,\"/ws/?h=\").concat(n,\"&p=\").concat(r):\"wss://\".concat(n,\":\").concat(r)}const Tw=/wss:\\/\\/(.+)\\/ws\\/\\?h=(.+)&p=([0-9]+)\\/?/,Sw=/wss:\\/\\/(.+)\\/ws\\/\\?p=([0-9]+)\\/?/,gw=/wss:\\/\\/(.+):([0-9]+)\\/?/,Rw=/wss:\\/\\/(.[^\\/]+)\\/?/;let Cw=0;class Iw{constructor(e,t){og(this,\"id\",0),og(this,\"store\",void 0),og(this,\"recordIndex\",void 0),og(this,\"websockets\",[]),og(this,\"try443PortDuration\",2e3),og(this,\"forceCloseWSDuration\",5e3),og(this,\"try443PortTimeout\",null),og(this,\"forceCloseTimeout\",null),og(this,\"isTry443PortFailed\",!1),og(this,\"isNormalPortFailed\",!1),og(this,\"useDoubleDomain\",!1),og(this,\"useProxy\",!1),og(this,\"startTime\",Date.now()),this.id=++Cw,this.try443PortDuration=Dy(\"JOIN_GATEWAY_TRY_443PORT_DURATION\")||2e3,this.forceCloseWSDuration=e||5e3,this.store=t}closeAllWebsockets(){this.websockets.forEach((e=>{e.onopen=null,e.onclose=null,e.onmessage=null,e.close()})),this.websockets.length=0}clearTimeout(){this.forceCloseTimeout&&clearTimeout(this.forceCloseTimeout),this.try443PortTimeout&&clearTimeout(this.try443PortTimeout)}logger(){var e;const t=Date.now()-this.startTime;for(var i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];Qy.debug(\"[choose-best-ws \".concat(null===(e=this.store)||void 0===e?void 0:e.clientId,\" \").concat(this.id,\"] \").concat(t,\"ms:\"),...n)}createWebSocket(e,t,i){this.logger(\"createWebSocket:\",e,{isTry443Port:t,hasTimeoutDetection:i});const n=Dy(\"GATEWAY_DOMAINS\"),r=Date.now(),o=[],s=n.find((t=>{var i;return Dn(i=e.host).call(i,t)}));s||(this.useDoubleDomain=!1);const a=[];if(this.useDoubleDomain)n.forEach((i=>{a.push(fw(Ew(Ew({},e),{},{host:e.host.replace(s,i)}),t))}));else{const i=Ew({},e);if(t&&s){const e=n.find((e=>e!==s));e&&(i.host=i.host.replace(s,e))}a.push(fw(i,t))}try{a.forEach((e=>{const t=new WebSocket(e);t.binaryType=\"arraybuffer\",o.push(t),this.logger(\"ws is connecting:\",t.url)}))}catch(n){if(this.logger(\"ws create failed\"),o.forEach((e=>e.close())),o.length=0,this.useDoubleDomain)return this.useDoubleDomain=!1,this.createWebSocket(e,t,i);if(!t&&443!==Number(e.port))return this.createWebSocket(e,!0,i);throw new Sb(nv.WS_ERR,\"init websocket failed! Error: \".concat(n.toString()))}const c=fI();this.store&&this.store.recordJoinChannelService({urls:o.map((e=>e.url)),service:\"gateway\"},this.recordIndex),o.forEach((e=>{e.onopen=()=>{this.logger(\"onopen: ws \".concat(e.url,\" open cost \").concat(Date.now()-r,\"ms\")),this.websockets.forEach((t=>{t!==e&&(t.onopen=null,t.onclose=null,t.onmessage=null,t.close(),this.logger(\"close backup websocket: \".concat(t.url)))})),this.websockets.length=0,c.resolve(e)},e.onclose=i=>{this.logger(\"onclose: ws \".concat(e.url,\" closed cost \").concat(Date.now()-r,\"ms state: \").concat(e.readyState)),t?this.isTry443PortFailed=mw(o):this.isNormalPortFailed=mw(o),this.logger(\"443: \".concat(this.useProxy?\"not try\":this.isTry443PortFailed?\"failed\":\"trying\",\" 47xx: \").concat(this.isNormalPortFailed?\"failed\":\"trying\")),(t&&this.isTry443PortFailed||!t&&(this.isTry443PortFailed||this.useProxy)&&this.isNormalPortFailed)&&(this.logger(\"onclose: all websocket is closed, \".concat(i.reason)),c.reject({code:i.code,reason:xb.A_ROUND_WS_FAILED}))},e.onmessage=t=>this.logger(\"\".concat(e.url,\" onmessage: \").concat(t.data))})),this.websockets.push(...o);return i||(()=>{const i=()=>{this.logger(\"5s timeout close un-opens, isWebsocket created: \",c.isResolved),this.websockets.forEach((e=>e.readyState!==WebSocket.OPEN&&e.close()))};if(t||this.useProxy)return this.logger(\"add 5s timeout at \".concat(t?\"try-443\":\"proxy\",\" condition\")),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration);this.try443PortTimeout=window.setTimeout((()=>{if(this.logger(\"2s timeout, isWebsocket created: \",c.isResolved),c.isResolved)return i();AI().os===RI.MAC_OS&&kI()&&i(),this.createWebSocket(e,!0,!0).then((e=>c.resolve(e))).catch((e=>{this.isNormalPortFailed&&c.reject(e),this.logger(\"try 443 port to create ws failed\")})),this.forceCloseTimeout=window.setTimeout(i,this.forceCloseWSDuration)}),this.try443PortDuration)})(),c.promise}chooseBestWebsocket(e,t,i,n){return this.useDoubleDomain=!!t,\"string\"==typeof e&&(e=function(e){let t,i,n;return[,t,i,n]=e.match(Tw)||[],t||([,i,n]=e.match(Sw)||[]),i&&n||([,i,n]=e.match(gw)||[]),i&&n||([,i]=e.match(Rw)||[]),i||Qy.warning(\"un-destructible url: \",e),{proxy:t,host:i,port:n||\"443\"}}(e)),this.recordIndex=n,this.useProxy=!!e.proxy,i&&this.useProxy&&(Qy.warn(\"cannot use 443 only when use proxy\"),i=!1),this.createWebSocket(e,!!i,!1).finally((()=>this.clearTimeout()))}}function vw(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class yw extends Sv{get url(){return this.websocket&&this.websocket.url||null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){var t;Dn(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(Tb.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(Tb.CONNECTED):\"closed\"===this._state?this.emit(Tb.CLOSED):\"failed\"===this._state&&this.emit(Tb.FAILED))}resetReconnectCount(e){Qy.debug(\"websocket reset reconnect count, reason: \"+e),this.reconnectCount=0}constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;super(),og(this,\"connectionID\",0),og(this,\"currentURLIndex\",0),og(this,\"urls\",[]),og(this,\"_reconnectMode\",\"tryNext\"),og(this,\"reconnectReason\",void 0),og(this,\"_initMutex\",new hy(\"websocket\")),og(this,\"name\",void 0),og(this,\"_state\",\"closed\"),og(this,\"reconnectInterrupter\",void 0),og(this,\"websocket\",void 0),og(this,\"retryConfig\",void 0),og(this,\"reconnectCount\",0),og(this,\"forceCloseTimeout\",5e3),og(this,\"onlineReconnectListener\",void 0),og(this,\"useCompress\",void 0),og(this,\"tryDoubleDomain\",!1),og(this,\"use443PortOnly\",!1),og(this,\"wsInflateLength\",0),og(this,\"wsDeflateLength\",0),og(this,\"closeEstablishingWs\",(()=>{})),og(this,\"store\",void 0),og(this,\"joinGatewayRecordIndex\",void 0),this.store=o,this.name=e,this.retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vw(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vw(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this.useCompress=i,this.tryDoubleDomain=n,this.use443PortOnly=r;const{timeout:s,timeoutFactor:a}=t,c=Math.max(300,Math.floor(3*s/5)),d=Math.max(1.2,Math.floor(8*a)/10);Pv.ONLINE&&(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d),Vv.on(Lv.NETWORK_STATE_CHANGE,((e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===Pv.ONLINE?(this.retryConfig.timeout=c,this.retryConfig.timeoutFactor=d):(this.retryConfig.timeout=s,this.retryConfig.timeoutFactor=a))}))}getConnection(){return this.websocket||void 0}async init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=await this._initMutex.lock();this.forceCloseTimeout=t,this.urls=e,this.state=\"connecting\";try{const e=fI(),t=this.urls[this.currentURLIndex];Dy(\"ENABLE_PREALLOC_PC\")&&this.emit(tw.PRE_CONNECT_PC),this.createWebSocketConnection(t).then(e.resolve).catch(e.reject),this.once(Tb.CLOSED,(()=>{e.reject(new rv(nv.WS_DISCONNECT))})),this.once(Tb.CONNECTED,e.resolve),await e.promise}catch(e){}finally{i()}}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),this.reconnectInterrupter&&this.reconnectInterrupter(),this.websocket){this.websocket.onclose=null,this.websocket.onopen=null,this.websocket.onmessage=null;const e=this.websocket;t?setTimeout((()=>e.close()),500):e.close(),this.websocket=void 0}this.state=e?\"failed\":\"closed\",this.closeEstablishingWs&&this.closeEstablishingWs()}reconnect(e,t){if(!this.websocket)return void Qy.warning(\"[\".concat(this.name,\"] can not reconnect, no websocket\"));void 0!==e&&(this.reconnectMode=e),Qy.debug(\"[\".concat(this.name,\"] reconnect is triggered initiative\")),\"number\"==typeof this.joinGatewayRecordIndex&&this.store&&this.store.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this.joinGatewayRecordIndex);const i=this.websocket.onclose;this.websocket.onclose=null,this.websocket.close(),i&&i.bind(this.websocket)({code:9999,reason:t})}sendMessage(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new rv(nv.WS_ABORT,\"websocket is not ready\");try{t||(e=JSON.stringify(e)),this.websocket.send(e)}catch(e){throw new rv(nv.WS_ERR,\"send websocket message error\"+e.toString())}}setWsInflateData(e){this.wsDeflateLength=this.wsDeflateLength+e.originLength,this.wsInflateLength=this.wsInflateLength+e.compressedLength}getWsInflateData(){const e=this.wsInflateLength,t=this.wsDeflateLength;return this.clearWsInflateData(),{wsInflateLength:e,wsDeflateLength:t}}clearWsInflateData(){this.wsInflateLength=0,this.wsDeflateLength=0}async createWebSocketConnection(e){var t;const i=fI();this.connectionID+=1,this.joinGatewayRecordIndex=void 0;const n=e=>{var t;null===(t=this.store)||void 0===t||t.signalChannelOpen(),Qy.debug(\"[\".concat(this.name,\"] websocket opened:\"),e),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),i.resolve()},r=async e=>{var t;if(Qy.debug(\"[\".concat(this.name,\"] websocket close \").concat(null===(t=this.websocket)||void 0===t?void 0:t.url,\", code: \").concat(e.code,\", reason: \").concat(e.reason,\", current mode: \").concat(this.reconnectMode)),this.reconnectCount>=this.retryConfig.maxRetryCount)i.reject(new rv(nv.WS_DISCONNECT,\"websocket close: \".concat(e.code))),this.close();else{\"connected\"===this.state&&(this.reconnectReason=e.reason,this.state=\"reconnecting\");const t=Uv(this,Tb.WILL_RECONNECT,this.reconnectMode,e.reason)||this.reconnectMode,n=await this.reconnectWithAction(t);if(\"closed\"===this.state)return void Qy.debug(\"[\".concat(this.connectionID,\"] ws is closed, no need to reconnect\"));if(!n)return i.reject(new rv(nv.WS_DISCONNECT,\"websocket reconnect failed: \".concat(e.code))),this.close(!0);i.resolve()}},o=e=>{this.emit(Tb.ON_MESSAGE,e)},s=e=>{Qy.warn(\"[\".concat(this.connectionID,\"] ws open error \").concat(e))};this.websocket&&(this.websocket.onclose=null,this.websocket.close()),Dy(\"GATEWAY_WSS_ADDRESS\")&&this.name.startsWith(\"gateway\")&&(e=Dy(\"GATEWAY_WSS_ADDRESS\")),Qy.debug(\"[\".concat(this.name,\"] start connect, url:\"),e);const a=null===(t=this.store)||void 0===t?void 0:t.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"});try{var c;const t=await this.chooseBestWebsocketConnection(e);this.websocket=t,n&&n(this.websocket.url),this.websocket.onclose=r,this.websocket.onmessage=o,this.websocket.onerror=s,null===(c=this.store)||void 0===c||c.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),this.joinGatewayRecordIndex=a}catch(e){const t=\"closed\"===this.state,n=e instanceof rv,o=n&&e.code===nv.WS_ABORT,s=n&&e.code===nv.WS_ERR,c=n?e.message:e&&(e.reason||e.toString());Qy.warning(\"[choose-best-ws] chooseBestWebsocket error: \".concat(c)),this.store&&this.store.recordJoinChannelService({endTs:Date.now(),status:o?\"aborted\":\"error\",errors:[e]},a),t||s?(i.reject(t?new rv(nv.WS_DISCONNECT,\"websocket is closed: \".concat(c)):new rv(nv.WS_ERR,\"init websocket failed: \".concat(c))),s&&Qy.error(\"[\".concat(this.name,\"] init websocket failed: \").concat(c))):r&&r(e)}return i.promise}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.reconnectCount>=this.retryConfig.maxRetryCount)return!1;if(0===this.urls.length)return!1;if(\"closed\"===this.state)return!1;Qy.warning(\"[choose-best-ws] action: =>\",e),this.onlineReconnectListener||Vv.isOnline||!Vv.onlineWaiter||(this.onlineReconnectListener=Vv.onlineWaiter.then((()=>{this.onlineReconnectListener=void 0})));let i=!0;if(this.reconnectInterrupter=()=>i=!1,t){const t=Ey(this.reconnectCount,this.retryConfig);Qy.debug(\"[\".concat(this.name,\"] wait \").concat(t,\"ms to reconnect websocket, mode: \").concat(e)),await Gh.race([$v(t),this.onlineReconnectListener||new Gh((()=>{}))])}if(\"closed\"===this._state||!i)return!1;this.reconnectCount+=1;const n=async(e,t)=>{this.emit(Tb.RECONNECT_CREATE_CONNECTION,t),await this.createWebSocketConnection(e)};try{if(\"retry\"===e)this.emit(Tb.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e);else if(\"tryNext\"===e){if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return this.reconnectWithAction(\"recover\",!1);Qy.debug(\"[\".concat(this.name,\"] websocket url length: \").concat(this.urls.length,\" current index: \").concat(this.currentURLIndex)),this.emit(Tb.RECONNECT_WAITTING_FINISH,e),await n(this.urls[this.currentURLIndex],e)}else\"recover\"===e&&(Qy.debug(\"[\".concat(this.name,\"] request new urls\")),this.resetReconnectCount(\"recover mode\"),this.emit(Tb.RECONNECT_WAITTING_FINISH,e),this.urls=await kv(this,Tb.REQUEST_NEW_URLS),this.currentURLIndex=0,await n(this.urls[this.currentURLIndex],e))}catch(i){var r;Qy.error(\"[\".concat(this.name,\"] reconnect failed \").concat(i&&i.toString()));const n=null==i||null===(r=i.data)||void 0===r?void 0:r.desc;return Array.isArray(n)&&Dn(n).call(n,\"dynamic key expired\")?(this.emit(Tb.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):this.reconnectWithAction(e,t)}return!0}}class Aw extends yw{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){const i=fI(),n=function(e,t){return new Iw(e,t)}(this.forceCloseTimeout,this.store);this.closeEstablishingWs=()=>{Qy.debug(\"[choose-best-ws] close establishing websockets\"),n.closeAllWebsockets(),i.reject(new rv(nv.WS_ABORT,\"choose best websocket aborted\"))};const r=Dy(\"GATEWAY_DOMAINS\");return Qy.debug(\"[choose-best-ws] currentDomain: \",e,\", domains: \",r,\"total: \".concat(this.urls.length),\"current: \".concat(this.currentURLIndex+1)),n.chooseBestWebsocket(e,this.tryDoubleDomain,this.use443PortOnly,t).then(i.resolve).catch(i.reject),i.promise.finally((()=>{this.closeEstablishingWs=void 0}))}}class bw extends yw{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],arguments.length>5?arguments[5]:void 0)}async chooseBestWebsocketConnection(e,t){return new Gh(((i,n)=>{let r=!1;const o=[];this.closeEstablishingWs=()=>{Qy.debug(\"[choose-best-ws] close establishing websockets\"),o.forEach((e=>{e.onclose=null,e.onopen=null,e.onmessage=null,e.close()})),n(new rv(nv.WS_ABORT,\"choose best websocket aborted\"))};const s=Dy(\"GATEWAY_DOMAINS\");let a;const c=e.indexOf(\"?h=\"),d=s.find((t=>-1!==c?Dn(e).call(e,t,c):Dn(e).call(e,t)));Qy.debug(\"[choose-best-ws] currentDomain: \",d,\", domains: \",s);let l=!this.tryDoubleDomain||!d;if(!l&&d){var u;const h=Date.now();try{s.forEach((t=>{const i=-1===c?e.replace(d,t):e.substr(0,c)+e.substr(c).replace(d,t),n=new WebSocket(i);n.binaryType=\"arraybuffer\",o.push(n),Qy.debug(\"[choose-best-ws] ws is connecting:\",n.url)}))}catch(e){for(Qy.debug(\"[choose-best-ws] ws create failed, fallback to single url\"),o.forEach((e=>e.close()));o.length;)o.pop();l=!0}null===(u=this.store)||void 0===u||u.recordJoinChannelService({urls:o.map((e=>e.url)),service:\"gateway\"},t),o.forEach((e=>{e.onopen=()=>{if(r)return;const t=Date.now()-h;Qy.debug(\"[choose-best-ws] ws open cost \".concat(t,\"ms\")),o.filter((t=>t!==e)).forEach((e=>{Qy.debug(\"[choose-best-ws]close backup websocket: \".concat(e.url)),e.close()})),r=!0,i(e)},e.onclose=e=>{if(a=e,r)return;o.find((e=>!(e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING)))||(Qy.debug(\"[choose-best-ws] all websocket is closed\"),r=!0,n(a))},e.onmessage=t=>{Qy.debug(\"[choose-best-ws]\".concat(e.url,\" onmessage: \").concat(t.data))}})),$v(this.forceCloseTimeout).then((()=>{o.forEach((e=>{e.readyState!==WebSocket.OPEN&&e.close()}))}))}if(l){var h;let r;Qy.debug(\"[choose-best-ws] use single url: \",e),null===(h=this.store)||void 0===h||h.recordJoinChannelService({urls:[e],service:\"gateway\"},t);try{r=new WebSocket(e),o.push(r),r.binaryType=\"arraybuffer\"}catch(e){const t=new rv(nv.WS_ERR,\"init websocket failed! Error: \".concat(e.toString()));return Qy.error(\"[\".concat(this.name,\"]\").concat(t)),void n(t)}r.onopen=()=>{i(r)},r.onclose=e=>{n(e)},r.onmessage=e=>{Qy.debug(\"[choose-best-ws]\".concat(r.url,\" onmessage: \").concat(e.data))},$v(this.forceCloseTimeout).then((()=>{r&&r.readyState!==WebSocket.OPEN&&r.close()}))}})).then((e=>(this.closeEstablishingWs=void 0,e))).catch((e=>{throw this.closeEstablishingWs=void 0,e}))}}class ww extends Sv{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===hb.CONNECTED?this.emit(pb.WS_CONNECTED):e===hb.RECONNECTING?this.emit(pb.WS_RECONNECTING,this._websocketReconnectReason):e===hb.CLOSED&&this.emit(pb.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),og(this,\"_disconnectedReason\",void 0),og(this,\"_websocketReconnectReason\",void 0),og(this,\"_connectionState\",hb.CLOSED),og(this,\"reconnectToken\",void 0),og(this,\"websocket\",void 0),og(this,\"openConnectionTime\",void 0),og(this,\"clientId\",void 0),og(this,\"lastMsgTime\",Date.now()),og(this,\"uploadCache\",[]),og(this,\"uploadCacheInterval\",void 0),og(this,\"rttRolling\",new fy(5)),og(this,\"pingpongTimer\",void 0),og(this,\"wsInflateDataTimer\",void 0),og(this,\"pingpongTimeoutCount\",0),og(this,\"joinResponse\",void 0),og(this,\"multiIpOption\",void 0),og(this,\"initError\",void 0),og(this,\"spec\",void 0),og(this,\"store\",void 0),og(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(pb.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){if(this.emit(t._type,t._message),t._type===mb.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===mb.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(Av.UID_BANNED);break;case 15:this.close(Av.IP_BANNED);break;case 16:this.close(Av.CHANNEL_BANNED)}if(t._type===mb.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case ub.ERR_LICENSE_MISSING:this.close(Av.LICENSE_MISSING);break;case ub.ERR_LICENSE_EXPIRED:this.close(Av.LICENSE_EXPIRED);break;case ub.ERR_LICENSE_MINUTES_EXCEEDED:this.close(Av.LICENSE_MINUTES_EXCEEDED);break;case ub.ERR_LICENSE_PERIOD_INVALID:this.close(Av.LICENSE_PERIOD_INVALID);break;case ub.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(Av.LICENSE_MULTIPLE_SDK_SERVICE);break;case ub.ERR_LICENSE_ILLEGAL:this.close(Av.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new Aw(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,Dy(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),Dy(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===hb.CONNECTED&&this.reconnect(\"retry\",Dv.OFFLINE)}))}async request(e,t,i,n){const r=ey(6,\"\"),o={_id:r,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new Gh(((t,i)=>{if(this.connectionState===hb.CONNECTED)return t();const n=()=>{this.off(pb.WS_CLOSED,r),t()},r=()=>{this.off(pb.WS_CONNECTED,n),i(new Sb(nv.WS_ABORT))};this.once(pb.WS_CONNECTED,n),this.once(pb.WS_CLOSED,r),e!==_b.PUBLISH&&e!==_b.PUBLISH_DATASTREAM&&e!==_b.SUBSCRIBE&&e!==_b.SUBSCRIBE_DATASTREAM&&e!==_b.UNSUBSCRIBE&&e!==_b.UNSUBSCRIBE_DATASTREAM&&e!==_b.UNPUBLISH&&e!==_b.UNPUBLISH_DATASTREAM&&e!==_b.CONTROL&&e!==_b.RESTART_ICE||this.once(pb.DISCONNECT_P2P,(()=>{i(new Sb(nv.DISCONNECT_P2P))})),e!==_b.PUBLISH&&e!==_b.RESTART_ICE||this.once(pb.ABORT_P2P_EXECUTION,(()=>{i(new Sb(nv.DISCONNECT_P2P))}))}));if(this.connectionState!==hb.CONNECTING&&this.connectionState!==hb.RECONNECTING||e===_b.JOIN||e===_b.REJOIN||await a(),this.websocket.sendMessage(o,!0),n)return;const c=new Gh(((i,n)=>{let o=!1;const a=(n,r)=>{o=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(pb.WS_CLOSED,c),this.off(pb.WS_RECONNECTING,c),this.emit(pb.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new Sb(nv.WS_ABORT,\"type: \".concat(e))),this.off(pb.WS_CLOSED,c),this.off(pb.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(pb.WS_CLOSED,c),this.once(pb.WS_RECONNECTING,c),$v(Dy(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==s||o||(Qy.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(pb.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===hb.CLOSED||e===_b.LEAVE)throw new Sb(nv.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===_b.JOIN||e===_b.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),u=pw(l),h=new Sb(nv.UNEXPECTED_RESPONSE,\"\".concat(u.desc,\": \").concat(d.message.error_str),{code:l,data:d.message,desc:u.desc});return\"success\"===u.action?d.message:(Qy.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(u.desc,\", action: \").concat(u.action)),l===ub.ERR_TOO_MANY_BROADCASTERS?e===_b.JOIN||e===_b.REJOIN?(this.initError=h,this.close(),h.throw()):h.throw():\"failed\"===u.action?h.throw():\"quit\"===u.action?(this.initError=h,this.close(),h.throw()):(l===ub.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,Qy.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",Dv.MULTI_IP)):this.reconnect(u.action,Dv.SERVER_ERROR),e===_b.JOIN||e===_b.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new Gh((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}uploadWRTCStats(e){if(!this.store.sessionId)return void Qy.warn(\"[\".concat(this.clientId,\"] no session id when upload wrtc stats\"));const t={lts:Date.now(),sid:this.store.sessionId,uid:this.store.intUid,stats:e};this.upload(Eb.WRTC_STATS,t)}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=Dy(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==hb.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),Dy(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new Gh(((t,i)=>{this.once(pb.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(pb.WS_CLOSED,(()=>i(this.initError||new Sb(nv.WS_ABORT)))),this.connectionState=hb.CONNECTING,this.websocket.init(e).catch(i),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval((()=>{this.handleWsInflateData()}),2e4)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||Av.LEAVE,this.connectionState=hb.CLOSED,Qy.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close()}async join(){if(!this.joinResponse){this.emit(pb.ABORT_P2P_EXECUTION);const e=await kv(this,pb.REQUEST_JOIN_INFO),t=await this.request(_b.JOIN,e);if(!t)return this.emit(pb.REPORT_JOIN_GATEWAY,xb.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(pb.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=hb.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new Sb(nv.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=xv(this,pb.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(_b.REJOIN,e);return!!t&&(this.connectionState=hb.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach((e=>{this.emit(mb.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(mb.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(mb.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(mb.MUTE_AUDIO,{uid:e.uid}):this.emit(mb.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(mb.MUTE_VIDEO,{uid:e.uid}):this.emit(mb.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(mb.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(mb.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(mb.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(mb.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(mb.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})})),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){Qy.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=pw(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(Av.UID_BANNED),void this.close()):void this.reconnect(t.action,Dv.SERVER_ERROR);Qy.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=Dy(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(Qy.warning(\"[\".concat(this.clientId,\"] PING-PONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>Dy(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",Dv.TIMEOUT):this.request(_b.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),Dy(\"REPORT_STATS\")&&this.send(_b.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Eb.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Tb.RECONNECT_WAITTING_FINISH,(e=>{this.emit(pb.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Tb.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(pb.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Tb.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Tb.CLOSED,(()=>{this.connectionState=hb.CLOSED})),this.websocket.on(Tb.FAILED,(()=>{this._disconnectedReason=Av.NETWORK_ERROR,this.connectionState=hb.CLOSED})),this.websocket.on(Tb.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===hb.CONNECTED?this.connectionState=hb.RECONNECTING:this.connectionState=hb.CONNECTING})),this.websocket.on(Tb.WILL_RECONNECT,((e,t,i)=>{const n=xv(this,pb.IS_P2P_DISCONNECTED),r=n||\"retry\"!==e;n&&\"retry\"===e&&(Qy.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),e=\"tryNext\",t=xb.P2P_DISCONNECTED),r&&(Qy.debug(\"\".concat(this.clientId,\" will renewSession, reconnect mode: \").concat(e)),this.emit(pb.REPORT_JOIN_GATEWAY,t||xb.UNKNOWN_REASON,this.url||\"\"),this.reconnectToken=void 0,this.emit(pb.DISCONNECT_P2P)),i(e)})),this.websocket.on(Tb.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch((e=>{Qy.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),this.reconnect(\"tryNext\",Dv.SERVER_ERROR)})):this.join().catch((e=>{if(this.emit(pb.REPORT_JOIN_GATEWAY,e,this.url||\"\"),e instanceof Sb){if(e.code===nv.UNEXPECTED_RESPONSE&&e.data.code===ub.ERR_NO_AUTHORIZED)return this.initError=new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,\"AgoraRTCError CAN_NOT_GET_GATEWAY_SERVER: dynamic key expired\"),Qy.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",Dv.SERVER_ERROR);Qy.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",Dv.SERVER_ERROR):(this.initError=e,this.close())}}))})),this.websocket.on(Tb.REQUEST_NEW_URLS,((e,t)=>{kv(this,pb.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Tb.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(mb.ON_TOKEN_PRIVILEGE_DID_EXPIRE)})),this.websocket.on(tw.PRE_CONNECT_PC,(()=>{this.emit(pb.PRE_CONNECT_PC)}))}}let Ow=function(e){return e[e.CHOOSE_SERVER=11]=\"CHOOSE_SERVER\",e[e.CLOUD_PROXY=18]=\"CLOUD_PROXY\",e[e.CLOUD_PROXY_5=20]=\"CLOUD_PROXY_5\",e[e.CLOUD_PROXY_FALLBACK=26]=\"CLOUD_PROXY_FALLBACK\",e}({});function Nw(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Dw(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Nw(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Nw(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function Pw(e){return e.match(/^[\\.\\:\\d]+$/)?\"\".concat(e.replace(/[^\\d]/g,\"-\"),\".\").concat(Dy(\"TURN_DOMAIN\")):(Qy.info(\"Unidentified as ip: \".concat(e,\", use as host\")),e)}function Lw(e,t){e.addresses||(e.addresses=[]);const i=function(e,t){if(Dy(\"CONNECT_GATEWAY_WITHOUT_DOMAIN\"))return e.map((e=>{let{ip:t,port:i}=e;return{address:\"\".concat(t,\":\").concat(i)}}));const i=Dy(\"GATEWAY_DOMAINS\");let n=i[1]&&Dn(t).call(t,i[1])?1:0;return e.map((e=>{let{domain_prefix:t,port:r,ip:o}=e;if(t)return{address:\"\".concat(t,\".\").concat(i[n++%i.length],\":\").concat(r)};const s=/^[\\.\\:\\d]+$/.test(o),a=s?\"\".concat(o.replace(/[^\\d]/g,\"-\"),\".\").concat(i[n++%i.length],\":\").concat(r):\"\".concat(o,\":\").concat(r);return s||Qy.info(\"Unidentified as ip: \".concat(o,\", use as host\")),{ip:o,port:r,address:a}}))}(e.addresses,t),n=Array.isArray(e.detail)&&e.detail[18];if(n&&\"string\"==typeof n){const e=n.split(\";\");for(let t=0;t<e.length;t++){var r;const n=jp(r=e[t]).call(r);i[t]&&n&&(i[t].ip6=n)}}const o=e.detail&&e.detail.candidate;let s;if(o){const[e,t]=o.split(\":\");e&&t&&(s={port:Number(t),ip:e,address:\"\".concat(e,\":\").concat(t)})}return{gatewayAddrs:i,apGatewayAddress:s,uid:e.uid,cid:e.cid,cert:e.cert,vid:e.detail&&e.detail[8],uni_lbs_ip:e.detail&&e.detail[1],res:e,csIp:e.detail&&e.detail[502]}}function kw(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function Mw(e){const t=e._encoderConfig;if(!t)return{};const i={resolution:t.width&&t.height?\"\".concat(kw(t.width),\"x\").concat(kw(t.height)):void 0,maxVideoBW:t.bitrateMax,minVideoBW:t.bitrateMin};return\"number\"==typeof t.frameRate?(i.maxFrameRate=t.frameRate,i.minFrameRate=t.frameRate):t.frameRate&&(i.maxFrameRate=t.frameRate.max||t.frameRate.ideal||t.frameRate.exact||t.frameRate.min,i.minFrameRate=t.frameRate.min||t.frameRate.ideal||t.frameRate.exact||t.frameRate.max),i}function Uw(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0}function xw(e,t){let i,n,r;switch(t){case Ow.CHOOSE_SERVER:n=4096,r=\"choose server\";break;case Ow.CLOUD_PROXY:n=1048576,r=\"proxy\";break;case Ow.CLOUD_PROXY_5:n=4194304,r=\"proxy5\";break;case Ow.CLOUD_PROXY_FALLBACK:n=4194310,r=\"proxy fallback\";break;default:throw new Sb(nv.UNEXPECTED_ERROR,\"multi unlibs response transformer get unknown service id\",{csIp:e.detail&&e.detail[502],retry:!1})}if(e.response_body.forEach((t=>{t.buffer&&t.buffer.flag===n&&(i={code:t.buffer.code,addresses:(t.buffer.edges_services||[]).map((e=>Dw(Dw({},e),{},{ticket:t.buffer.cert}))),server_ts:e.enter_ts,uid:t.buffer.uid,cid:t.buffer.cid,cname:t.buffer.cname,detail:Dw(Dw({},t.buffer.detail),e.detail),flag:t.buffer.flag,opid:e.opid,cert:t.buffer.cert})})),!i)throw new Sb(nv.MULTI_UNILBS_RESPONSE_ERROR,\"cannot parse response \".concat(r,\" from multi unilbs response\"),{csIp:e.detail&&e.detail[502]});return i}async function Vw(e,t){return await Gh.all(e.addresses.map((async e=>({address:Pw(e.ip),tcpport:e.port,udpport:e.port,username:t&&Dy(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?t.toString():cA.username,password:t&&Dy(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?await Tv(t.toString()):cA.password}))))}function Fw(e,t){const i=t.getMediaStreamTrack(!0).getSettings(),n=t.videoHeight||i.height,r=t.videoWidth||i.width;return n&&r?Math.max(Math.min(n,r)/Math.min(kw(e.height),kw(e.width)),1):(Qy.warning(\"can't get ori-track's height, default scale down 4 times for low stream\"),4)}function Bw(e){let{candidateType:t,relayProtocol:i,type:n,address:r,port:o,protocol:s}=e;return\"local-candidate\"===n?{candidateType:t,relayProtocol:i,protocol:s}:{candidateType:t,relayProtocol:i,address:r,port:o,protocol:s}}var jw,Gw=i(UA),Ww=Xi(\"Array\").values,Hw=pn,Kw=Ze,Yw=l,qw=Ww,zw=Array.prototype,Jw={DOMTokenList:!0,NodeList:!0},Xw=function(e){var t=e.values;return e===zw||Yw(zw,e)&&t===zw.values||Kw(Jw,Hw(e))?qw:t},Qw=i(Xw),Zw=N,$w=d,eO=L,tO=n,iO=eo,nO=Br,rO=k,oO=Je,sO=K,aO=Object.assign,cO=Object.defineProperty,dO=$w([].concat),lO=!aO||tO((function(){if(Zw&&1!==aO({b:1},aO(cO({},\"a\",{enumerable:!0,get:function(){cO(this,\"b\",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},i=Symbol(),n=\"abcdefghijklmnopqrst\";return e[i]=7,n.split(\"\").forEach((function(e){t[e]=e})),7!=aO({},e)[i]||iO(aO({},t)).join(\"\")!=n}))?function(e,t){for(var i=oO(e),n=arguments.length,r=1,o=nO.f,s=rO.f;n>r;)for(var a,c=sO(arguments[r++]),d=o?dO(iO(c),o(c)):iO(c),l=d.length,u=0;l>u;)a=d[u++],Zw&&!eO(s,c,a)||(i[a]=c[a]);return i}:aO,uO=ii,hO=rs,pO=Xt,_O=L,EO=Je,mO=function(e,t,i,n){try{return n?t(uO(i)[0],i[1]):t(i)}catch(t){hO(e,\"throw\",t)}},fO=jo,TO=jc,SO=Gi,gO=E_,RO=es,CO=qo,IO=Array,vO=d,yO=2147483647,AO=/[^\\0-\\u007E]/,bO=/[.\\u3002\\uFF0E\\uFF61]/g,wO=\"Overflow: input needs wider integers to process\",OO=RangeError,NO=vO(bO.exec),DO=Math.floor,PO=String.fromCharCode,LO=vO(\"\".charCodeAt),kO=vO([].join),MO=vO([].push),UO=vO(\"\".replace),xO=vO(\"\".split),VO=vO(\"\".toLowerCase),FO=function(e){return e+22+75*(e<26)},BO=function(e,t,i){var n=0;for(e=i?DO(e/700):e>>1,e+=DO(e/t);e>455;)e=DO(e/35),n+=36;return DO(n+36*e/(e+38))},jO=function(e){var t=[];e=function(e){for(var t=[],i=0,n=e.length;i<n;){var r=LO(e,i++);if(r>=55296&&r<=56319&&i<n){var o=LO(e,i++);56320==(64512&o)?MO(t,((1023&r)<<10)+(1023&o)+65536):(MO(t,r),i--)}else MO(t,r)}return t}(e);var i,n,r=e.length,o=128,s=0,a=72;for(i=0;i<e.length;i++)(n=e[i])<128&&MO(t,PO(n));var c=t.length,d=c;for(c&&MO(t,\"-\");d<r;){var l=yO;for(i=0;i<e.length;i++)(n=e[i])>=o&&n<l&&(l=n);var u=d+1;if(l-o>DO((yO-s)/u))throw OO(wO);for(s+=(l-o)*u,o=l,i=0;i<e.length;i++){if((n=e[i])<o&&++s>yO)throw OO(wO);if(n==o){for(var h=s,p=36;;){var _=p<=a?1:p>=a+26?26:p-a;if(h<_)break;var E=h-_,m=36-_;MO(t,PO(FO(_+E%m))),h=DO(E/m),p+=36}MO(t,PO(FO(h))),a=BO(s,u,d==c),s=0,d++}}s++,o++}return kO(t,\"\")},GO=wi,WO=N,HO=cg,KO=h,YO=Xt,qO=d,zO=ha,JO=hc,XO=Sc,QO=Ze,ZO=lO,$O=function(e){var t=EO(e),i=TO(this),n=arguments.length,r=n>1?arguments[1]:void 0,o=void 0!==r;o&&(r=pO(r,n>2?arguments[2]:void 0));var s,a,c,d,l,u,h=CO(t),p=0;if(!h||this===IO&&fO(h))for(s=SO(t),a=i?new this(s):IO(s);s>p;p++)u=o?r(t[p],p):t[p],gO(a,p,u);else for(l=(d=RO(t,h)).next,a=i?new this:[];!(c=_O(l,d)).done;p++)u=o?mO(d,r,[c.value,p],!0):c.value,gO(a,p,u);return a.length=p,a},eN=R_,tN=Ch.codeAt,iN=function(e){var t,i,n=[],r=xO(UO(VO(e),bO,\".\"),\".\");for(t=0;t<r.length;t++)i=r[t],MO(n,NO(AO,i)?\"xn--\"+jO(i):i);return kO(n,\".\")},nN=mn,rN=Da,oN=Zc,sN=vR,aN=ra,cN=aN.set,dN=aN.getterFor(\"URL\"),lN=sN.URLSearchParams,uN=sN.getState,hN=KO.URL,pN=KO.TypeError,_N=KO.parseInt,EN=Math.floor,mN=Math.pow,fN=qO(\"\".charAt),TN=qO(/./.exec),SN=qO([].join),gN=qO(1..toString),RN=qO([].pop),CN=qO([].push),IN=qO(\"\".replace),vN=qO([].shift),yN=qO(\"\".split),AN=qO(\"\".slice),bN=qO(\"\".toLowerCase),wN=qO([].unshift),ON=\"Invalid scheme\",NN=\"Invalid host\",DN=\"Invalid port\",PN=/[a-z]/i,LN=/[\\d+-.a-z]/i,kN=/\\d/,MN=/^0x/i,UN=/^[0-7]+$/,xN=/^\\d+$/,VN=/^[\\da-f]+$/i,FN=/[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/,BN=/[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/,jN=/^[\\u0000-\\u0020]+/,GN=/(^|[^\\u0000-\\u0020])[\\u0000-\\u0020]+$/,WN=/[\\t\\n\\r]/g,HN=function(e){var t,i,n,r;if(\"number\"==typeof e){for(t=[],i=0;i<4;i++)wN(t,e%256),e=EN(e/256);return SN(t,\".\")}if(\"object\"==typeof e){for(t=\"\",n=function(e){for(var t=null,i=1,n=null,r=0,o=0;o<8;o++)0!==e[o]?(r>i&&(t=n,i=r),n=null,r=0):(null===n&&(n=o),++r);return r>i&&(t=n,i=r),t}(e),i=0;i<8;i++)r&&0===e[i]||(r&&(r=!1),n===i?(t+=i?\":\":\"::\",r=!0):(t+=gN(e[i],16),i<7&&(t+=\":\")));return\"[\"+t+\"]\"}return e},KN={},YN=ZO({},KN,{\" \":1,'\"':1,\"<\":1,\">\":1,\"`\":1}),qN=ZO({},YN,{\"#\":1,\"?\":1,\"{\":1,\"}\":1}),zN=ZO({},qN,{\"/\":1,\":\":1,\";\":1,\"=\":1,\"@\":1,\"[\":1,\"\\\\\":1,\"]\":1,\"^\":1,\"|\":1}),JN=function(e,t){var i=tN(e,0);return i>32&&i<127&&!QO(t,e)?e:encodeURIComponent(e)},XN={ftp:21,file:null,http:80,https:443,ws:80,wss:443},QN=function(e,t){var i;return 2==e.length&&TN(PN,fN(e,0))&&(\":\"==(i=fN(e,1))||!t&&\"|\"==i)},ZN=function(e){var t;return e.length>1&&QN(AN(e,0,2))&&(2==e.length||\"/\"===(t=fN(e,2))||\"\\\\\"===t||\"?\"===t||\"#\"===t)},$N=function(e){return\".\"===e||\"%2e\"===bN(e)},eD={},tD={},iD={},nD={},rD={},oD={},sD={},aD={},cD={},dD={},lD={},uD={},hD={},pD={},_D={},ED={},mD={},fD={},TD={},SD={},gD={},RD=function(e,t,i){var n,r,o,s=nN(e);if(t){if(r=this.parse(s))throw pN(r);this.searchParams=null}else{if(void 0!==i&&(n=new RD(i,!0)),r=this.parse(s,null,n))throw pN(r);(o=uN(new lN)).bindURL(this),this.searchParams=o}};RD.prototype={type:\"URL\",parse:function(e,t,i){var n,r,o,s,a,c=this,d=t||eD,l=0,u=\"\",h=!1,p=!1,_=!1;for(e=nN(e),t||(c.scheme=\"\",c.username=\"\",c.password=\"\",c.host=null,c.port=null,c.path=[],c.query=null,c.fragment=null,c.cannotBeABaseURL=!1,e=IN(e,jN,\"\"),e=IN(e,GN,\"$1\")),e=IN(e,WN,\"\"),n=$O(e);l<=n.length;){switch(r=n[l],d){case eD:if(!r||!TN(PN,r)){if(t)return ON;d=iD;continue}u+=bN(r),d=tD;break;case tD:if(r&&(TN(LN,r)||\"+\"==r||\"-\"==r||\".\"==r))u+=bN(r);else{if(\":\"!=r){if(t)return ON;u=\"\",d=iD,l=0;continue}if(t&&(c.isSpecial()!=QO(XN,u)||\"file\"==u&&(c.includesCredentials()||null!==c.port)||\"file\"==c.scheme&&!c.host))return;if(c.scheme=u,t)return void(c.isSpecial()&&XN[c.scheme]==c.port&&(c.port=null));u=\"\",\"file\"==c.scheme?d=pD:c.isSpecial()&&i&&i.scheme==c.scheme?d=nD:c.isSpecial()?d=aD:\"/\"==n[l+1]?(d=rD,l++):(c.cannotBeABaseURL=!0,CN(c.path,\"\"),d=TD)}break;case iD:if(!i||i.cannotBeABaseURL&&\"#\"!=r)return ON;if(i.cannotBeABaseURL&&\"#\"==r){c.scheme=i.scheme,c.path=eN(i.path),c.query=i.query,c.fragment=\"\",c.cannotBeABaseURL=!0,d=gD;break}d=\"file\"==i.scheme?pD:oD;continue;case nD:if(\"/\"!=r||\"/\"!=n[l+1]){d=oD;continue}d=cD,l++;break;case rD:if(\"/\"==r){d=dD;break}d=fD;continue;case oD:if(c.scheme=i.scheme,r==jw)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=eN(i.path),c.query=i.query;else if(\"/\"==r||\"\\\\\"==r&&c.isSpecial())d=sD;else if(\"?\"==r)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=eN(i.path),c.query=\"\",d=SD;else{if(\"#\"!=r){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=eN(i.path),c.path.length--,d=fD;continue}c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=eN(i.path),c.query=i.query,c.fragment=\"\",d=gD}break;case sD:if(!c.isSpecial()||\"/\"!=r&&\"\\\\\"!=r){if(\"/\"!=r){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,d=fD;continue}d=dD}else d=cD;break;case aD:if(d=cD,\"/\"!=r||\"/\"!=fN(u,l+1))continue;l++;break;case cD:if(\"/\"!=r&&\"\\\\\"!=r){d=dD;continue}break;case dD:if(\"@\"==r){h&&(u=\"%40\"+u),h=!0,o=$O(u);for(var E=0;E<o.length;E++){var m=o[E];if(\":\"!=m||_){var f=JN(m,zN);_?c.password+=f:c.username+=f}else _=!0}u=\"\"}else if(r==jw||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()){if(h&&\"\"==u)return\"Invalid authority\";l-=$O(u).length+1,u=\"\",d=lD}else u+=r;break;case lD:case uD:if(t&&\"file\"==c.scheme){d=ED;continue}if(\":\"!=r||p){if(r==jw||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()){if(c.isSpecial()&&\"\"==u)return NN;if(t&&\"\"==u&&(c.includesCredentials()||null!==c.port))return;if(s=c.parseHost(u))return s;if(u=\"\",d=mD,t)return;continue}\"[\"==r?p=!0:\"]\"==r&&(p=!1),u+=r}else{if(\"\"==u)return NN;if(s=c.parseHost(u))return s;if(u=\"\",d=hD,t==uD)return}break;case hD:if(!TN(kN,r)){if(r==jw||\"/\"==r||\"?\"==r||\"#\"==r||\"\\\\\"==r&&c.isSpecial()||t){if(\"\"!=u){var T=_N(u,10);if(T>65535)return DN;c.port=c.isSpecial()&&T===XN[c.scheme]?null:T,u=\"\"}if(t)return;d=mD;continue}return DN}u+=r;break;case pD:if(c.scheme=\"file\",\"/\"==r||\"\\\\\"==r)d=_D;else{if(!i||\"file\"!=i.scheme){d=fD;continue}if(r==jw)c.host=i.host,c.path=eN(i.path),c.query=i.query;else if(\"?\"==r)c.host=i.host,c.path=eN(i.path),c.query=\"\",d=SD;else{if(\"#\"!=r){ZN(SN(eN(n,l),\"\"))||(c.host=i.host,c.path=eN(i.path),c.shortenPath()),d=fD;continue}c.host=i.host,c.path=eN(i.path),c.query=i.query,c.fragment=\"\",d=gD}}break;case _D:if(\"/\"==r||\"\\\\\"==r){d=ED;break}i&&\"file\"==i.scheme&&!ZN(SN(eN(n,l),\"\"))&&(QN(i.path[0],!0)?CN(c.path,i.path[0]):c.host=i.host),d=fD;continue;case ED:if(r==jw||\"/\"==r||\"\\\\\"==r||\"?\"==r||\"#\"==r){if(!t&&QN(u))d=fD;else if(\"\"==u){if(c.host=\"\",t)return;d=mD}else{if(s=c.parseHost(u))return s;if(\"localhost\"==c.host&&(c.host=\"\"),t)return;u=\"\",d=mD}continue}u+=r;break;case mD:if(c.isSpecial()){if(d=fD,\"/\"!=r&&\"\\\\\"!=r)continue}else if(t||\"?\"!=r)if(t||\"#\"!=r){if(r!=jw&&(d=fD,\"/\"!=r))continue}else c.fragment=\"\",d=gD;else c.query=\"\",d=SD;break;case fD:if(r==jw||\"/\"==r||\"\\\\\"==r&&c.isSpecial()||!t&&(\"?\"==r||\"#\"==r)){if(\"..\"===(a=bN(a=u))||\"%2e.\"===a||\".%2e\"===a||\"%2e%2e\"===a?(c.shortenPath(),\"/\"==r||\"\\\\\"==r&&c.isSpecial()||CN(c.path,\"\")):$N(u)?\"/\"==r||\"\\\\\"==r&&c.isSpecial()||CN(c.path,\"\"):(\"file\"==c.scheme&&!c.path.length&&QN(u)&&(c.host&&(c.host=\"\"),u=fN(u,0)+\":\"),CN(c.path,u)),u=\"\",\"file\"==c.scheme&&(r==jw||\"?\"==r||\"#\"==r))for(;c.path.length>1&&\"\"===c.path[0];)vN(c.path);\"?\"==r?(c.query=\"\",d=SD):\"#\"==r&&(c.fragment=\"\",d=gD)}else u+=JN(r,qN);break;case TD:\"?\"==r?(c.query=\"\",d=SD):\"#\"==r?(c.fragment=\"\",d=gD):r!=jw&&(c.path[0]+=JN(r,KN));break;case SD:t||\"#\"!=r?r!=jw&&(\"'\"==r&&c.isSpecial()?c.query+=\"%27\":c.query+=\"#\"==r?\"%23\":JN(r,KN)):(c.fragment=\"\",d=gD);break;case gD:r!=jw&&(c.fragment+=JN(r,YN))}l++}},parseHost:function(e){var t,i,n;if(\"[\"==fN(e,0)){if(\"]\"!=fN(e,e.length-1))return NN;if(t=function(e){var t,i,n,r,o,s,a,c=[0,0,0,0,0,0,0,0],d=0,l=null,u=0,h=function(){return fN(e,u)};if(\":\"==h()){if(\":\"!=fN(e,1))return;u+=2,l=++d}for(;h();){if(8==d)return;if(\":\"!=h()){for(t=i=0;i<4&&TN(VN,h());)t=16*t+_N(h(),16),u++,i++;if(\".\"==h()){if(0==i)return;if(u-=i,d>6)return;for(n=0;h();){if(r=null,n>0){if(!(\".\"==h()&&n<4))return;u++}if(!TN(kN,h()))return;for(;TN(kN,h());){if(o=_N(h(),10),null===r)r=o;else{if(0==r)return;r=10*r+o}if(r>255)return;u++}c[d]=256*c[d]+r,2!=++n&&4!=n||d++}if(4!=n)return;break}if(\":\"==h()){if(u++,!h())return}else if(h())return;c[d++]=t}else{if(null!==l)return;u++,l=++d}}if(null!==l)for(s=d-l,d=7;0!=d&&s>0;)a=c[d],c[d--]=c[l+s-1],c[l+--s]=a;else if(8!=d)return;return c}(AN(e,1,-1)),!t)return NN;this.host=t}else if(this.isSpecial()){if(e=iN(e),TN(FN,e))return NN;if(t=function(e){var t,i,n,r,o,s,a,c=yN(e,\".\");if(c.length&&\"\"==c[c.length-1]&&c.length--,(t=c.length)>4)return e;for(i=[],n=0;n<t;n++){if(\"\"==(r=c[n]))return e;if(o=10,r.length>1&&\"0\"==fN(r,0)&&(o=TN(MN,r)?16:8,r=AN(r,8==o?1:2)),\"\"===r)s=0;else{if(!TN(10==o?xN:8==o?UN:VN,r))return e;s=_N(r,o)}CN(i,s)}for(n=0;n<t;n++)if(s=i[n],n==t-1){if(s>=mN(256,5-t))return null}else if(s>255)return null;for(a=RN(i),n=0;n<i.length;n++)a+=i[n]*mN(256,3-n);return a}(e),null===t)return NN;this.host=t}else{if(TN(BN,e))return NN;for(t=\"\",i=$O(e),n=0;n<i.length;n++)t+=JN(i[n],KN);this.host=t}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||\"file\"==this.scheme},includesCredentials:function(){return\"\"!=this.username||\"\"!=this.password},isSpecial:function(){return QO(XN,this.scheme)},shortenPath:function(){var e=this.path,t=e.length;!t||\"file\"==this.scheme&&1==t&&QN(e[0],!0)||e.length--},serialize:function(){var e=this,t=e.scheme,i=e.username,n=e.password,r=e.host,o=e.port,s=e.path,a=e.query,c=e.fragment,d=t+\":\";return null!==r?(d+=\"//\",e.includesCredentials()&&(d+=i+(n?\":\"+n:\"\")+\"@\"),d+=HN(r),null!==o&&(d+=\":\"+o)):\"file\"==t&&(d+=\"//\"),d+=e.cannotBeABaseURL?s[0]:s.length?\"/\"+SN(s,\"/\"):\"\",null!==a&&(d+=\"?\"+a),null!==c&&(d+=\"#\"+c),d},setHref:function(e){var t=this.parse(e);if(t)throw pN(t);this.searchParams.update()},getOrigin:function(){var e=this.scheme,t=this.port;if(\"blob\"==e)try{return new CD(e.path[0]).origin}catch(e){return\"null\"}return\"file\"!=e&&this.isSpecial()?e+\"://\"+HN(this.host)+(null!==t?\":\"+t:\"\"):\"null\"},getProtocol:function(){return this.scheme+\":\"},setProtocol:function(e){this.parse(nN(e)+\":\",eD)},getUsername:function(){return this.username},setUsername:function(e){var t=$O(nN(e));if(!this.cannotHaveUsernamePasswordPort()){this.username=\"\";for(var i=0;i<t.length;i++)this.username+=JN(t[i],zN)}},getPassword:function(){return this.password},setPassword:function(e){var t=$O(nN(e));if(!this.cannotHaveUsernamePasswordPort()){this.password=\"\";for(var i=0;i<t.length;i++)this.password+=JN(t[i],zN)}},getHost:function(){var e=this.host,t=this.port;return null===e?\"\":null===t?HN(e):HN(e)+\":\"+t},setHost:function(e){this.cannotBeABaseURL||this.parse(e,lD)},getHostname:function(){var e=this.host;return null===e?\"\":HN(e)},setHostname:function(e){this.cannotBeABaseURL||this.parse(e,uD)},getPort:function(){var e=this.port;return null===e?\"\":nN(e)},setPort:function(e){this.cannotHaveUsernamePasswordPort()||(\"\"==(e=nN(e))?this.port=null:this.parse(e,hD))},getPathname:function(){var e=this.path;return this.cannotBeABaseURL?e[0]:e.length?\"/\"+SN(e,\"/\"):\"\"},setPathname:function(e){this.cannotBeABaseURL||(this.path=[],this.parse(e,mD))},getSearch:function(){var e=this.query;return e?\"?\"+e:\"\"},setSearch:function(e){\"\"==(e=nN(e))?this.query=null:(\"?\"==fN(e,0)&&(e=AN(e,1)),this.query=\"\",this.parse(e,SD)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var e=this.fragment;return e?\"#\"+e:\"\"},setHash:function(e){\"\"!=(e=nN(e))?(\"#\"==fN(e,0)&&(e=AN(e,1)),this.fragment=\"\",this.parse(e,gD)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var CD=function(e){var t=XO(this,ID),i=oN(arguments.length,1)>1?arguments[1]:void 0,n=cN(t,new RD(e,!1,i));WO||(t.href=n.serialize(),t.origin=n.getOrigin(),t.protocol=n.getProtocol(),t.username=n.getUsername(),t.password=n.getPassword(),t.host=n.getHost(),t.hostname=n.getHostname(),t.port=n.getPort(),t.pathname=n.getPathname(),t.search=n.getSearch(),t.searchParams=n.getSearchParams(),t.hash=n.getHash())},ID=CD.prototype,vD=function(e,t){return{get:function(){return dN(this)[e]()},set:t&&function(e){return dN(this)[t](e)},configurable:!0,enumerable:!0}};if(WO&&(JO(ID,\"href\",vD(\"serialize\",\"setHref\")),JO(ID,\"origin\",vD(\"getOrigin\")),JO(ID,\"protocol\",vD(\"getProtocol\",\"setProtocol\")),JO(ID,\"username\",vD(\"getUsername\",\"setUsername\")),JO(ID,\"password\",vD(\"getPassword\",\"setPassword\")),JO(ID,\"host\",vD(\"getHost\",\"setHost\")),JO(ID,\"hostname\",vD(\"getHostname\",\"setHostname\")),JO(ID,\"port\",vD(\"getPort\",\"setPort\")),JO(ID,\"pathname\",vD(\"getPathname\",\"setPathname\")),JO(ID,\"search\",vD(\"getSearch\",\"setSearch\")),JO(ID,\"searchParams\",vD(\"getSearchParams\")),JO(ID,\"hash\",vD(\"getHash\",\"setHash\"))),zO(ID,\"toJSON\",(function(){return dN(this).serialize()}),{enumerable:!0}),zO(ID,\"toString\",(function(){return dN(this).serialize()}),{enumerable:!0}),hN){var yD=hN.createObjectURL,AD=hN.revokeObjectURL;yD&&zO(CD,\"createObjectURL\",YO(yD,hN)),AD&&zO(CD,\"revokeObjectURL\",YO(AD,hN))}rN(CD,\"URL\"),GO({global:!0,constructor:!0,forced:!HO,sham:!WO},{URL:CD});var bD=wi,wD=n,OD=Zc,ND=mn,DD=cg,PD=ae(\"URL\");bD({target:\"URL\",stat:!0,forced:!(DD&&wD((function(){PD.canParse()})))},{canParse:function(e){var t=OD(arguments.length,1),i=ND(e),n=t<2||void 0===arguments[1]?void 0:ND(arguments[1]);try{return!!new PD(i,n)}catch(e){return!1}}});var LD=i(ie.URL);const kD={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1,supportDualStreamEncoding:!1,supportDataChannel:!1,supportPCSetConfiguration:!1,supportWebRTCEncodedTransform:!1,supportWebRTCInsertableStream:!1,supportRequestVideoFrameCallback:!1,supportWebCrypto:!1};function MD(){return kD}function UD(){return\"setSinkId\"in HTMLAudioElement.prototype&&(!Dy(\"RESTRICTION_SET_PLAYBACK_DEVICE\")||(DI()||LI())&&!XI())}function xD(){return!kD.supportUnifiedPlan||Dy(\"CHROME_FORCE_PLAN_B\")&&QI()}let VD=function(e){return e.IOS_15_16_INTERRUPTION_START=\"ios15_16-interruption-start\",e.IOS_15_16_INTERRUPTION_END=\"ios15_16-interruption-end\",e.IOS_INTERRUPTION_START=\"ios-interruption-start\",e.IOS_INTERRUPTION_END=\"ios-interruption-end\",e.STATE_CHANGE=\"state-change\",e}({});function FD(e,t,i){return{sampleRate:e,stereo:t,bitrate:i}}function BD(e,t,i,n,r){return{width:e,height:t,frameRate:i,bitrateMin:n,bitrateMax:r}}function jD(e,t,i,n,r){return{width:{max:e},height:{max:t},frameRate:i,bitrateMin:n,bitrateMax:r}}function GD(e,t){return{numSpatialLayers:e,numTemporalLayers:t}}const WD={\"90p\":BD(160,90),\"90p_1\":BD(160,90),\"120p\":BD(160,120,15,30,65),\"120p_1\":BD(160,120,15,30,65),\"120p_3\":BD(120,120,15,30,50),\"120p_4\":BD(212,120),\"180p\":BD(320,180,15,30,140),\"180p_1\":BD(320,180,15,30,140),\"180p_3\":BD(180,180,15,30,100),\"180p_4\":BD(240,180,15,30,120),\"240p\":BD(320,240,15,40,200),\"240p_1\":BD(320,240,15,40,200),\"240p_3\":BD(240,240,15,40,140),\"240p_4\":BD(424,240,15,40,220),\"360p\":BD(640,360,15,80,400),\"360p_1\":BD(640,360,15,80,400),\"360p_3\":BD(360,360,15,80,260),\"360p_4\":BD(640,360,30,80,600),\"360p_6\":BD(360,360,30,80,400),\"360p_7\":BD(480,360,15,80,320),\"360p_8\":BD(480,360,30,80,490),\"360p_9\":BD(640,360,15,80,800),\"360p_10\":BD(640,360,24,80,800),\"360p_11\":BD(640,360,24,80,1e3),\"480p\":BD(640,480,15,100,500),\"480p_1\":BD(640,480,15,100,500),\"480p_2\":BD(640,480,30,100,1e3),\"480p_3\":BD(480,480,15,100,400),\"480p_4\":BD(640,480,30,100,750),\"480p_6\":BD(480,480,30,100,600),\"480p_8\":BD(848,480,15,100,610),\"480p_9\":BD(848,480,30,100,930),\"480p_10\":BD(640,480,10,100,400),\"720p\":BD(1280,720,15,120,1130),\"720p_auto\":BD(1280,720,30,900,3e3),\"720p_1\":BD(1280,720,15,120,1130),\"720p_2\":BD(1280,720,30,120,2e3),\"720p_3\":BD(1280,720,30,120,1710),\"720p_5\":BD(960,720,15,120,910),\"720p_6\":BD(960,720,30,120,1380),\"1080p\":BD(1920,1080,15,120,2080),\"1080p_1\":BD(1920,1080,15,120,2080),\"1080p_2\":BD(1920,1080,30,120,3e3),\"1080p_3\":BD(1920,1080,30,120,3150),\"1080p_5\":BD(1920,1080,60,120,4780),\"1440p\":BD(2560,1440,30,120,4850),\"1440p_1\":BD(2560,1440,30,120,4850),\"1440p_2\":BD(2560,1440,60,120,7350),\"4k\":BD(3840,2160,30,120,8910),\"4k_1\":BD(3840,2160,30,120,8910),\"4k_3\":BD(3840,2160,60,120,13500)},HD={\"480p\":jD(640,480,5),\"480p_1\":jD(640,480,5),\"480p_2\":jD(640,480,30),\"480p_3\":jD(640,480,15),\"720p\":jD(1280,720,5),\"720p_auto\":BD(1280,720,30,900,3e3),\"720p_1\":jD(1280,720,5),\"720p_2\":jD(1280,720,30),\"720p_3\":jD(1280,720,15),\"1080p\":jD(1920,1080,5),\"1080p_1\":jD(1920,1080,5),\"1080p_2\":jD(1920,1080,30),\"1080p_3\":jD(1920,1080,15)},KD={\"1SL1TL\":GD(1,1),\"3SL3TL\":GD(3,3),\"2SL3TL\":GD(2,3)};function YD(e){return e||(e=\"480p_1\"),\"string\"==typeof e?Object.assign({},WD[e]):e}function qD(e){return\"string\"==typeof e?Object.assign({},HD[e]):e}function zD(e){return\"string\"==typeof e?Object.assign({},KD[e]):e}const JD={speech_low_quality:FD(16e3,!1),speech_standard:FD(32e3,!1,18),music_standard:FD(48e3,!1),standard_stereo:FD(48e3,!0,56),high_quality:FD(48e3,!1,128),high_quality_stereo:FD(48e3,!0,192)};function XD(e){return\"string\"==typeof e?Object.assign({},JD[e]):e}const QD=[];function ZD(e){return sv(e,\"mediaSource\",[\"screen\",\"window\",\"application\"]),!0}let $D=function(e){return e.NEED_RENEGOTIATE=\"@need_renegotiate\",e.NEED_REPLACE_TRACK=\"@need_replace_track\",e.NEED_REPLACE_MIXING_TRACK=\"@need_replace_mixing_track\",e.NEED_CLOSE=\"@need_close\",e.NEED_ENABLE_TRACK=\"@need_enable_track\",e.NEED_DISABLE_TRACK=\"@need_disable_track\",e.NEED_SESSION_ID=\"@need_sid\",e.SET_OPTIMIZATION_MODE=\"@set_optimization_mode\",e.GET_STATS=\"@get_stats\",e.GET_RTC_STATS=\"@get_rtc_stats\",e.GET_LOW_VIDEO_TRACK=\"@get_low_video_track\",e.NEED_RESET_REMOTE_SDP=\"@need_reset_remote_sdp\",e.NEED_UPDATE_VIDEO_ENCODER=\"@need_update_video_encoder\",e.NEED_UPDATE_VIDEO_SEND_PARAMETERS=\"@need_update_video_send_parameters\",e.NEED_MUTE_TRACK=\"@need_mute_track\",e.NEED_UNMUTE_TRACK=\"@need_unmute_track\",e}({}),eP=function(e){return e.SCREEN_TRACK=\"screen_track\",e.CUSTOM_TRACK=\"custome_track\",e.LOW_STREAM=\"low_stream\",e}({});let tP=function(e){return e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e}({}),iP=function(e){return e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e}({}),nP=function(e){return e[e.DISABLE=0]=\"DISABLE\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e[e.AUDIO_ONLY=2]=\"AUDIO_ONLY\",e}({}),rP=function(e){return e.TRANSCEIVER_UPDATED=\"transceiver-updated\",e.SEI_TO_SEND=\"sei-to-send\",e.SEI_RECEIVED=\"sei-received\",e.TRACK_UPDATED=\"track-updated\",e}({}),oP=function(e){return e.SOURCE_STATE_CHANGE=\"source-state-change\",e.TRACK_ENDED=\"track-ended\",e.BEAUTY_EFFECT_OVERLOAD=\"beauty-effect-overload\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.CLOSED=\"closed\",e}({}),sP=function(e){return e.FIRST_FRAME_DECODED=\"first-frame-decoded\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.VIDEO_STATE_CHANGED=\"video-state-changed\",e}({}),aP=function(e){return e.AUDIO=\"audio\",e.VIDEO=\"video\",e.DATA=\"data\",e}({}),cP=function(e){return e.AUDIO_SOURCE_STATE_CHANGE=\"audio_source_state_change\",e.RECEIVE_TRACK_BUFFER=\"receive_track_buffer\",e.ON_AUDIO_BUFFER=\"on_audio_buffer\",e.UPDATE_SOURCE=\"update_source\",e}({});!function(e){e.UPDATE_TRACK_SOURCE=\"update-track-source\"}({});const dP={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,currentPacketLossRate:0},lP={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendJitterMs:0,sendRttMs:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,totalDuration:0,totalFreezeTime:0,currentPacketLossRate:0},uP={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receivePacketsDiscarded:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1},hP={uplinkNetworkQuality:0,downlinkNetworkQuality:0},pP={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1};let _P=function(e){return e.ON_TRACK=\"on_track\",e.ON_NODE=\"on_node\",e}({}),EP=function(e){return e.REQUEST_UPDATE_CONSTRAINTS=\"request_update_constraints\",e.REQUEST_CONSTRAINTS=\"request_constraints\",e}({}),mP=function(e){return e.IDLE=\"IDLE\",e.INITING=\"INITING\",e.INITEND=\"INITEND\",e}({}),fP=function(e){return e.STATE_CHANGE=\"state_change\",e.RECORDING_DEVICE_CHANGED=\"recordingDeviceChanged\",e.PLAYOUT_DEVICE_CHANGED=\"playoutDeviceChanged\",e.CAMERA_DEVICE_CHANGED=\"cameraDeviceChanged\",e}({}),TP=function(e){return e.NONE=\"none\",e.INIT=\"init\",e.CANPLAY=\"canplay\",e.PLAYING=\"playing\",e.PAUSED=\"paused\",e.SUSPEND=\"suspend\",e.STALLED=\"stalled\",e.WAITING=\"waiting\",e.ERROR=\"error\",e.DESTROYED=\"destroyed\",e.ABORT=\"abort\",e.ENDED=\"ended\",e.EMPTIED=\"emptied\",e.LOADEDDATA=\"loadeddata\",e}({}),SP=function(e){return e[e.VideoStateStopped=0]=\"VideoStateStopped\",e[e.VideoStateStarting=1]=\"VideoStateStarting\",e[e.VideoStateDecoding=2]=\"VideoStateDecoding\",e[e.VideoStateFrozen=3]=\"VideoStateFrozen\",e}({});const gP={uninit:100,none:110,init:120,loadeddata:130,canplay:200,playing:210,paused:220,suspend:300,stalled:310,waiting:320,error:330,destroyed:340,abort:350,ended:360,emptied:370};let RP=function(e){return e.OPEN=\"open\",e.MESSAGE=\"message\",e.CLOSE=\"close\",e.CLOSING=\"closing\",e.ERROR=\"error\",e}({});function CP(e,t,i,n,r){var o,s,a={};return Object.keys(n).forEach((function(e){a[e]=n[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,(\"value\"in a||a.initializer)&&(a.writable=!0),a=Jn(o=Gw(s=i.slice()).call(s)).call(o,(function(i,n){return n(e,t,i)||i}),a),r&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(r):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}function IP(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,\"string\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==typeof t?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function vP(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function yP(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vP(Object(i),!0).forEach((function(t){IP(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vP(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class AP extends Sv{set _mediaStreamTrack(e){e!==this.mediaStreamTrack&&(this.safeEmit(rP.TRACK_UPDATED,e),this.mediaStreamTrack=e)}get _mediaStreamTrack(){return this.mediaStreamTrack}constructor(e,t){super(),IP(this,\"trackMediaType\",void 0),IP(this,\"_ID\",void 0),IP(this,\"_rtpTransceiver\",void 0),IP(this,\"_lowRtpTransceiver\",void 0),IP(this,\"_hints\",[]),IP(this,\"_isClosed\",!1),IP(this,\"_originMediaStreamTrack\",void 0),IP(this,\"mediaStreamTrack\",void 0),IP(this,\"_external\",{}),this._ID=t||ey(8,\"track-\"),this._originMediaStreamTrack=e,this.mediaStreamTrack=e,function(e){Dn(QD).call(QD,e)||QD.push(e)}(this)}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(e){return e||Kv((()=>{var e;sA.reportApiInvoke(null,{name:Cv.GET_MEDIA_STREAM_TRACK,options:[],tag:Iv.TRACER}).onSuccess((null===(e=this._mediaStreamTrack)||void 0===e?void 0:e.label)||\"\")}),this.mediaStreamTrack.id||this.getTrackId()),this._mediaStreamTrack}getRTCRtpTransceiver(e){return e===tP.LOW_STREAM?this._lowRtpTransceiver:this._rtpTransceiver}getMediaStreamTrackSettings(){return this.getMediaStreamTrack(!0).getSettings()}close(){this._isClosed=!0,this._lowRtpTransceiver=void 0,this._rtpTransceiver=void 0,function(e){const t=QD.indexOf(e);-1!==t&&QD.splice(t,1)}(this),this.emit(oP.CLOSED),this.removeAllListeners(rP.SEI_RECEIVED)}_updateRtpTransceiver(e,t){if(t===tP.LOW_STREAM){if(this._lowRtpTransceiver===e)return;this._lowRtpTransceiver=e}else{if(this._rtpTransceiver===e)return;this._rtpTransceiver=e}this.emit(rP.TRANSCEIVER_UPDATED,e,t)}}class bP extends AP{get isExternalTrack(){return this._isExternalTrack}get muted(){return this._muted}get enabled(){return this._enabled}get processorContext(){return this._processorContext}constructor(e,t){super(e,t),IP(this,\"_enabled\",!0),IP(this,\"_muted\",!1),IP(this,\"_isExternalTrack\",!1),IP(this,\"_isClosed\",!1),IP(this,\"_enabledMutex\",void 0),IP(this,\"processor\",void 0),IP(this,\"_processorContext\",void 0),IP(this,\"_handleTrackEnded\",(()=>{this.onTrackEnded()})),this._enabledMutex=new hy(\"\".concat(this.getTrackId())),e.addEventListener(\"ended\",this._handleTrackEnded)}getTrackLabel(){var e,t;return null!==(e=null===(t=this._originMediaStreamTrack)||void 0===t?void 0:t.label)&&void 0!==e?e:\"\"}close(){this._isClosed||(this.stop(),this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=null,Qy.debug(\"[\".concat(this.getTrackId(),\"] close\")),this.emit($D.NEED_CLOSE),super.close())}async _updateOriginMediaStreamTrack(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._isExternalTrack=i,e!==this._originMediaStreamTrack&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Mv(this,$D.NEED_REPLACE_TRACK,this),this.processor&&this._processorContext&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this._processorContext}))}_getDefaultPlayerConfig(){return{}}onTrackEnded(){Qy.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(oP.TRACK_ENDED)}stateCheck(e,t){if(Qy.debug(\"check track state, [muted: \".concat(this._muted,\", enabled: \").concat(this._enabled,\"] to [\").concat(e,\": \").concat(t,\"]\")),ov(t,e),this._enabled&&this._muted&&\"enabled\"===e&&!1===t)throw new rv(nv.TRACK_STATE_UNREACHABLE,\"cannot set enabled while the track is muted\").print(\"error\",Qy);if(!this._enabled&&!this._muted&&\"muted\"===e&&!0===t)throw new rv(nv.TRACK_STATE_UNREACHABLE,\"cannot set muted while the track is disabled\").print(\"error\",Qy)}getProcessorStats(){return this._processorContext&&this._processorContext.gatherStats()||[]}getProcessorUsage(){return this._processorContext?this._processorContext.gatherUsage():Gh.resolve([])}}const wP=window.AudioContext||window.webkitAudioContext;let OP=null;const NP=new class extends Sv{constructor(){super(...arguments),IP(this,\"prevState\",void 0),IP(this,\"curState\",void 0),IP(this,\"currentTime\",void 0),IP(this,\"currentTimeStuckAt\",void 0),IP(this,\"interruptDetectorTrack\",void 0),IP(this,\"onLocalAudioTrackMute\",(()=>{Qy.info(\"ios15-interruption-start\"),this.emit(VD.IOS_15_16_INTERRUPTION_START)})),IP(this,\"onLocalAudioTrackUnmute\",(async()=>{Qy.info(\"ios15-interruption-end\"),\"running\"!==this.curState||this.duringInterruption?Qy.info(\"ios15-interruption-end-canceled\"):(OP&&await OP.suspend(),this.emit(VD.IOS_15_16_INTERRUPTION_END))}))}get duringInterruption(){return\"running\"===this.prevState&&\"interrupted\"===this.curState}bindInterruptDetectorTrack(e){Qy.debug(\"webaudio bindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack||(this.interruptDetectorTrack=e,this.interruptDetectorTrack._mediaStreamTrack.onmute=this.onLocalAudioTrackMute,this.interruptDetectorTrack._mediaStreamTrack.onunmute=this.onLocalAudioTrackUnmute)}unbindInterruptDetectorTrack(e){Qy.debug(\"webaudio unbindInterruptDetectorTrack \".concat(e.getTrackId())),this.interruptDetectorTrack&&this.interruptDetectorTrack===e&&(this.interruptDetectorTrack._mediaStreamTrack&&(this.interruptDetectorTrack._mediaStreamTrack.onmute=null,this.interruptDetectorTrack._mediaStreamTrack.onunmute=null),this.interruptDetectorTrack=void 0)}};function DP(){if(!OP){if(function(){if(!wP)return void Qy.error(\"your browser is not support web audio\");Qy.info(\"create audio context\");const e=yP({},Dy(\"WEBAUDIO_INIT_OPTIONS\"));Qy.debug(\"audio context init option:\",JSON.stringify(e)),OP=new wP(e),NP.curState=OP.state,OP.onstatechange=()=>{NP.prevState=NP.curState,NP.curState=OP?OP.state:void 0;const{prevState:e,curState:t}=NP,i=\"running\"===t,n=\"interrupted\"===t,r=\"running\"===e,o=\"suspended\"===e,s=\"interrupted\"===e,a=AI().osVersion;(MI()||qI())&&r&&n&&(Qy.info(\"ios\".concat(a,\"-interruption-start\")),NP.emit(VD.IOS_INTERRUPTION_START)),(MI()||qI())&&(o||s)&&i&&(Qy.info(\"ios\".concat(a,\"-interruption-end\")),NP.emit(VD.IOS_INTERRUPTION_END)),e!==t&&NP.emit(VD.STATE_CHANGE,t,e)},setInterval((()=>{var e;const t=null===(e=OP)||void 0===e?void 0:e.currentTime;NP.currentTime!==t?(NP.currentTimeStuckAt&&(Qy.debug(\"AudioContext current time resume at \".concat(t)),NP.currentTimeStuckAt=void 0),NP.currentTime=t):(t!==NP.currentTimeStuckAt&&(sA.reportApiInvoke(null,{name:\"WEB_AUDIO_CURRENT_TIME_STUCK\",options:{currentTime:t},tag:Iv.TRACER}).onSuccess(),Qy.warning(\"AudioContext current time stuck at \".concat(t))),NP.currentTimeStuckAt=t)}),5e3),async function(e){const t=[\"click\",\"contextmenu\",\"auxclick\",\"dblclick\",\"mousedown\",\"mouseup\",\"touchend\",\"keydown\",\"keyup\"];let i,n=!1,r=!1,o=!1;function s(t){\"running\"===e.state?a(!1):MI()||qI()?\"suspended\"===e.state&&(a(!0),t&&e.resume().then(c,c)):\"closed\"!==e.state&&(a(!0),t&&e.resume().then(c,c))}function a(e){if(n!==e){n=e;for(let i=0,n=t;i<n.length;i+=1){const t=n[i];e?window.addEventListener(t,d,{capture:!0,passive:!0}):window.removeEventListener(t,d,{capture:!0,passive:!0})}}}function c(){s(!1)}function d(){s(!0)}function l(e){if(!o)if(i.paused)if(e){let t;u(!1),o=!0;try{t=i.play(),t?t.then(h,h):(i.addEventListener(\"playing\",h),i.addEventListener(\"abort\",h),i.addEventListener(\"error\",h))}catch(e){h()}}else u(!0);else u(!1)}function u(e){if(r!==e){r=e;for(let i=0,n=t;i<n.length;i++){const t=n[i];e?window.addEventListener(t,p,{capture:!0,passive:!0}):window.removeEventListener(t,p,{capture:!0,passive:!0})}}}function h(){i.removeEventListener(\"playing\",h),i.removeEventListener(\"abort\",h),i.removeEventListener(\"error\",h),o=!1,l(!1)}function p(){l(!0)}if(MI()){const t=e.createMediaStreamDestination(),n=document.createElement(\"div\");n.innerHTML=\"<audio x-webkit-airplay='deny'></audio>\",i=n.children.item(0),i.controls=!1,i.disableRemotePlayback=!0,i.preload=\"auto\",i.srcObject=t.stream,l(!0)}NP.on(VD.STATE_CHANGE,(function(){s(!0)})),s(!1)}(OP)}(),!OP)throw new rv(nv.NOT_SUPPORTED,\"can not create audio context\");return OP}return OP}function PP(e){if(function(){if(null!==LP)return LP;const e=DP(),t=e.createBufferSource(),i=e.createGain(),n=e.createGain();t.connect(i),t.connect(n),t.disconnect(i);let r=!1;try{t.disconnect(i)}catch(e){r=!0}return t.disconnect(),LP=r,r}())return;const t=e.connect,i=e.disconnect;e.connect=(i,n,r)=>{var o;return e._inputNodes||(e._inputNodes=[]),Dn(o=e._inputNodes).call(o,i)||(i instanceof AudioNode?(e._inputNodes.push(i),t.call(e,i,n,r)):t.call(e,i,n)),e},e.disconnect=(n,r,o)=>{i.call(e),n?Fv(e._inputNodes,n):e._inputNodes=[];for(const i of e._inputNodes)t.call(e,i)}}let LP=null;function kP(e,t){let i=!1;const n=1/t;if(Dy(\"DISABLE_WEBAUDIO\")){const t=window.setInterval((()=>{i?window.clearInterval(t):e(performance.now()/1e3)}),1e3*n)}else{const t=DP();let r=t.createGain();r.gain.value=0,r.connect(t.destination);const o=()=>{if(i)return void(r=null);const s=t.createOscillator();s.onended=o,s.connect(r),s.start(0),s.stop(t.currentTime+n),e(t.currentTime)};o()}return()=>{i=!0}}class MP{constructor(){IP(this,\"context\",void 0),IP(this,\"analyserNode\",void 0),IP(this,\"sourceNode\",void 0),this.context=DP(),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4}updateSource(e){if(e!==this.sourceNode){if(this.sourceNode)try{this.sourceNode.disconnect(this.analyserNode)}catch(e){}this.sourceNode=e,null==e||e.connect(this.analyserNode)}}getVolumeLevel(){if(!this.sourceNode)return 0;if(!this.context||MI()||qI()||\"running\"!==this.context.state&&this.context.resume(),!this.analyserNode)return 0;const e=new Float32Array(this.analyserNode.fftSize);if(this.analyserNode.getFloatTimeDomainData)this.analyserNode.getFloatTimeDomainData(e);else{const t=new Uint8Array(this.analyserNode.fftSize);this.analyserNode.getByteTimeDomainData(t);for(let i=0;i<e.length;++i)e[i]=t[i]/128-1}const t=Jn(e).call(e,((e,t)=>e+t*t),0)/e.length;return Math.max(10*Math.log10(t)+100,0)/100}getAnalyserNode(){return this.analyserNode}rebuildAnalyser(){try{var e,t;null===(e=this.sourceNode)||void 0===e||e.disconnect(this.analyserNode),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4,null===(t=this.sourceNode)||void 0===t||t.connect(this.analyserNode)}catch(e){Qy.warning(\"rebuild analyser node failed.\")}}destroy(){this.updateSource(void 0)}}class UP extends Sv{get processSourceNode(){return this.sourceNode}set processedNode(e){var t;if(!this.isDestroyed&&this._processedNode!==e){try{var i;null===(i=this.sourceNode)||void 0===i||i.disconnect(this.outputNode)}catch(e){}null===(t=this._processedNode)||void 0===t||t.disconnect(),this._processedNode=e,this.connect()}}get processedNode(){return this._processedNode}constructor(){super(),IP(this,\"outputNode\",void 0),IP(this,\"outputTrack\",void 0),IP(this,\"isPlayed\",!1),IP(this,\"sourceNode\",void 0),IP(this,\"context\",void 0),IP(this,\"audioBufferNode\",void 0),IP(this,\"destNode\",void 0),IP(this,\"audioOutputLevel\",0),IP(this,\"volumeLevelAnalyser\",void 0),IP(this,\"_processedNode\",void 0),IP(this,\"playNode\",void 0),IP(this,\"isDestroyed\",!1),IP(this,\"onNoAudioInput\",void 0),IP(this,\"isNoAudioInput\",!1),IP(this,\"_noAudioInputCount\",0),this.context=DP(),this.playNode=this.context.destination,this.outputNode=this.context.createGain(),PP(this.outputNode),this.volumeLevelAnalyser=new MP}startGetAudioBuffer(e){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(e),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=e=>{this.emit(cP.ON_AUDIO_BUFFER,function(e){for(let t=0;t<e.outputBuffer.numberOfChannels;t+=1){const i=e.outputBuffer.getChannelData(t);for(let e=0;e<i.length;e+=1)i[e]=0}return e.inputBuffer}(e))})}stopGetAudioBuffer(){this.audioBufferNode&&(this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!MD().webAudioMediaStreamDest)throw new rv(nv.NOT_SUPPORTED,\"your browser is not support audio processor\");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(e){\"running\"!==this.context.state&&jv((()=>{NP.emit(\"autoplay-failed\")})),this.isPlayed=!0,this.playNode=e||this.context.destination,this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(e){}this.isPlayed=!1}getAccurateVolumeLevel(){return this.volumeLevelAnalyser.getVolumeLevel()}async checkHasAudioInput(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(e>5)return this.isNoAudioInput=!0,this.onNoAudioInput&&this.onNoAudioInput(),!1;MI()||qI()?\"suspended\"===this.context.state&&this.context.resume():\"running\"!==this.context.state&&this.context.resume();const t=this.volumeLevelAnalyser.getAnalyserNode();let i;t.getFloatTimeDomainData?(i=new Float32Array(t.fftSize),t.getFloatTimeDomainData(i)):(i=new Uint8Array(t.fftSize),t.getByteTimeDomainData(i));let n=!1;for(let e=0;e<i.length;e++)0!==i[e]&&(n=!0);return n?(this.isNoAudioInput=!1,!0):(await $v(200),await this.checkHasAudioInput(e?e+1:1)&&n)}getAudioVolume(){return this.outputNode.gain.value}setVolume(e){this.outputNode.gain.setValueAtTime(e,this.context.currentTime)}destroy(){this.disconnect(),this.stop(),this.isDestroyed=!0,this.onNoAudioInput=void 0}disconnect(){var e,t;null===(e=this.processedNode)||void 0===e||e.disconnect(),null===(t=this.sourceNode)||void 0===t||t.disconnect(),this.outputNode&&this.outputNode.disconnect()}connect(){var e;this.processedNode?null===(e=this.processedNode)||void 0===e||e.connect(this.outputNode):this.sourceNode&&this.sourceNode.connect(this.outputNode),this.volumeLevelAnalyser.updateSource(this.outputNode)}}class xP extends UP{get isFreeze(){return!1}constructor(e,t,i){var n;if(super(),IP(this,\"sourceNode\",void 0),IP(this,\"track\",void 0),IP(this,\"clonedTrack\",void 0),IP(this,\"audioElement\",void 0),IP(this,\"isCurrentTrackCloned\",!1),IP(this,\"isRemoteTrack\",!1),IP(this,\"originVolumeLevelAnalyser\",void 0),IP(this,\"rebuildWebAudio\",(async()=>{if(Qy.debug(\"ready to rebuild web audio, state:\",this.context.state),this.isNoAudioInput&&await this.checkHasAudioInput(),!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener(\"click\",this.rebuildWebAudio,!0),void Qy.debug(\"rebuild web audio success, current volume status\",this.getAccurateVolumeLevel());this.context.resume().then((()=>Qy.info(\"resume success\"))),Qy.debug(\"rebuild web audio because of ios 12 bugs\"),this.disconnect();const e=this.track;this.track=this.track.clone(),this.isCurrentTrackCloned?e.stop():this.isCurrentTrackCloned=!0;const t=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(t),PP(this.sourceNode),this.volumeLevelAnalyser.rebuildAnalyser();const i=this.outputNode.gain.value;this.outputNode=this.context.createGain(),this.outputNode.gain.setValueAtTime(i,this.context.currentTime),PP(this.outputNode),this.emit(cP.UPDATE_SOURCE),this.connect(),this.audioElement.srcObject=t,this.isPlayed&&this.play(this.playNode),this.checkHasAudioInput()})),\"audio\"!==e.kind)throw new rv(nv.UNEXPECTED_ERROR);this.track=e;const r=new MediaStream([this.track]);if(this.isRemoteTrack=!!t,this.sourceNode=this.context.createMediaStreamSource(r),PP(this.sourceNode),i){const e=i.clone();e.enabled=!0,this.clonedTrack=e,Qy.debug(\"create an unmuted track \".concat(e.id,\" from the original track \").concat(i.id,\" to get the volume\"));const t=this.context.createMediaStreamSource(new MediaStream([e]));PP(t),this.originVolumeLevelAnalyser=new MP,this.originVolumeLevelAnalyser.updateSource(t)}this.connect(),this.audioElement=document.createElement(\"audio\"),this.audioElement.srcObject=r;const o=AI();t&&o.os===RI.IOS&&Number(null===(n=o.osVersion)||void 0===n?void 0:n.split(\".\")[0])<15&&(NP.on(VD.STATE_CHANGE,(()=>{\"suspended\"===this.context.state?document.body.addEventListener(\"click\",this.rebuildWebAudio,!0):\"running\"===this.context.state&&this.rebuildWebAudio()})),this.checkHasAudioInput().then((e=>{e||document.body.addEventListener(\"click\",this.rebuildWebAudio,!0)})))}updateTrack(e){this.sourceNode.disconnect(),this.track=e,this.isCurrentTrackCloned=!1;const t=new MediaStream([e]);this.sourceNode=this.context.createMediaStreamSource(t),PP(this.sourceNode),this.processedNode||this.sourceNode.connect(this.outputNode),this.emit(cP.UPDATE_SOURCE),this.audioElement.srcObject=t}destroy(){var e;this.audioElement.srcObject=null,this.audioElement.remove(),NP.off(\"state-change\",this.rebuildWebAudio),null===(e=this.originVolumeLevelAnalyser)||void 0===e||e.destroy(),this.clonedTrack=void 0,super.destroy()}createMediaStreamSourceNode(e){return this.context.createMediaStreamSource(new MediaStream([e]))}updateOriginTrack(e){const t=e.clone();t.enabled=!0,this.clonedTrack&&(this.clonedTrack.stop(),this.clonedTrack=t),Qy.debug(\"create an unmuted track \".concat(t.id,\" from the original track \").concat(e.id,\" to get the volume\"));const i=this.context.createMediaStreamSource(new MediaStream([t]));PP(i),this.originVolumeLevelAnalyser&&this.originVolumeLevelAnalyser.updateSource(i)}getOriginVolumeLevel(){return this.originVolumeLevelAnalyser?this.originVolumeLevelAnalyser.getVolumeLevel():this.getAccurateVolumeLevel()}}async function VP(e,t,i){const n=(e,t)=>e?\"number\"!=typeof e?e.max||e.exact||e.ideal||e.min||t:e:t,r={audio:!!i&&{mandatory:{chromeMediaSource:\"desktop\"}},video:{mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:e,maxHeight:n(t.height,1080),maxWidth:n(t.width,1920)}}};return t.frameRate&&\"number\"!=typeof t.frameRate?(r.video.mandatory.maxFrameRate=t.frameRate.max,r.video.mandatory.minFrameRate=t.frameRate.min):\"number\"==typeof t.frameRate&&(r.video.mandatory.maxFrameRate=t.frameRate),await navigator.mediaDevices.getUserMedia(r)}async function FP(e,t){const i=await BP(e.mediaSource),{sourceId:n,audio:r}=await function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new Gh(((i,n)=>{const r=document.createElement(\"div\");r.innerText=\"share screen\",r.setAttribute(\"style\",\"text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;\");const o=document.createElement(\"div\");o.setAttribute(\"style\",\"width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;\");const s=document.createElement(\"div\");s.innerText=\"Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.\",s.setAttribute(\"style\",\"height: 12%;\");const a=document.createElement(\"div\");a.setAttribute(\"style\",\"width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;\");const c=document.createElement(\"div\");c.setAttribute(\"style\",\"display: flex; justify-content: space-between; padding: 16px 0;\");const d=document.createElement(\"button\");d.innerHTML=\"cancel\",d.setAttribute(\"style\",\"width: 85px;\"),d.onclick=()=>{document.body.removeChild(h);const e=new Error(\"NotAllowedError\");e.name=\"NotAllowedError\",n(e)};let l=t;const u=document.createElement(\"div\");if(t){const e=document.createElement(\"input\");e.setAttribute(\"type\",\"checkbox\");const t=document.createElement(\"span\");e.setAttribute(\"style\",\"margin-right: 6px;\"),t.innerText=\"Share audio\",e.checked=l,e.onchange=()=>{l=e.checked},u.appendChild(e),u.appendChild(t)}c.appendChild(u),c.appendChild(d),o.appendChild(s),o.appendChild(a),o.appendChild(c);const h=document.createElement(\"div\");h.setAttribute(\"style\",\"position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);\"),h.appendChild(r),h.appendChild(o),document.body.appendChild(h),e.map((e=>{if(e.id){const t=document.createElement(\"div\");t.setAttribute(\"style\",\"width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;\");let n=e.thumbnail;try{const{width:e}=n.getSize();e>1920&&(n=n.resize({width:1920}))}catch(e){throw e&&e.message.startsWith(\"Illegal invocation\")&&console.error(\"Operate thumbnail error, please try to set contextIsolation: false. (https://github.com/electron/electron/issues/34953)\"),e}t.innerHTML='<div style=\"height: 120px; display: table-cell; vertical-align: middle;\"><img style=\"width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\" src='+n.toDataURL()+' /></div><span style=\"\\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">'+e.name.replace(/[\\u00A0-\\u9999<>\\&]/g,(function(e){return\"&#\"+e.charCodeAt(0)+\";\"}))+\"</span>\",t.onclick=()=>{document.body.removeChild(h),i({sourceId:e.id,audio:l})},a.appendChild(t)}}))}))}(i,t);return await VP(n,e,r)}async function BP(e){let t=[\"window\",\"screen\"];\"application\"!==e&&\"window\"!==e||(t=[\"window\"]),\"screen\"===e&&(t=[\"screen\"]);const i=Rv();if(!i)throw console.error(\"failed to fetch electron, please mount it to window\"),new rv(nv.ELECTRON_IS_NULL);let n=null;try{var r;n=(null===(r=i.desktopCapturer)||void 0===r?void 0:r.getSources({types:t}))||i.ipcRenderer.invoke(\"DESKTOP_CAPTURER_GET_SOURCES\",{types:t})}catch(e){n=null}n&&n.then||(n=new Gh(((e,n)=>{i.desktopCapturer.getSources({types:t},((t,i)=>{t?n(t):e(i)}))})));try{return await n}catch(e){throw new rv(nv.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,e.toString())}}const jP=new hy(\"safari\");let GP=!1,WP=!1;async function HP(e,t){let i=0,n=null;for(;i<2;)try{n=await KP(e,t,i>0);break}catch(e){if(e instanceof rv)throw Qy.error(\"[\".concat(t,\"] \").concat(e.toString())),e;const n=YP(e.name||e.code||e,e.message);if(n.code===nv.MEDIA_OPTION_INVALID){Qy.debug(\"[\".concat(t,\"] detect media option invalid, retry\")),i+=1,await $v(500);continue}throw Qy.error(\"[\".concat(t,\"] \").concat(n.toString())),n}if(!n)throw new rv(nv.UNEXPECTED_ERROR,\"can not find stream after getUserMedia\");return n}async function KP(e,t,i){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new rv(nv.NOT_SUPPORTED,\"can not find getUserMedia\");i&&(e.video&&(delete e.video.width,delete e.video.height),e.screen&&(delete e.screen.width,delete e.screen.height));const n=MD(),r=new MediaStream;if(e.audioSource&&r.addTrack(e.audioSource),e.videoSource&&r.addTrack(e.videoSource),!e.audio&&!e.video&&!e.screen)return Qy.debug(\"Using Video Source/ Audio Source\"),r;if(e.screen)if(Rv())e.screen.sourceId?qP(r,await VP(e.screen.sourceId,e.screen,e.screenAudio)):qP(r,await FP(e.screen,e.screenAudio));else if(DI()&&e.screen.extensionId&&e.screen.mandatory){if(!n.getStreamFromExtension)throw new rv(nv.NOT_SUPPORTED,\"This browser does not support screen sharing\");Qy.debug(\"[\".concat(t,'] Screen access on chrome stable, looking for extension\"'));const i=await(s=e.screen.extensionId,a=t,new Gh(((e,t)=>{try{chrome.runtime.sendMessage(s,{getStream:!0},(i=>{if(!i||!i.streamId)return Qy.error(\"[\".concat(a,\"] No response from Chrome Plugin. Plugin not installed properly\"),i),void t(new rv(nv.CHROME_PLUGIN_NO_RESPONSE,\"No response from Chrome Plugin. Plugin not installed properly\"));e(i.streamId)}))}catch(e){Qy.error(\"[\".concat(a,\"] AgoraRTC screensharing plugin is not accessible(\").concat(s,\")\"),e.toString()),t(new rv(nv.CHROME_PLUGIN_NOT_INSTALL))}})));e.screen.mandatory.chromeMediaSourceId=i,qP(r,await navigator.mediaDevices.getUserMedia({video:{mandatory:e.screen.mandatory}}))}else if(n.getDisplayMedia){var o;e.screen.mediaSource&&ZD(e.screen.mediaSource);const i={width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate,displaySurface:null!==(o=e.screen.displaySurface)&&void 0!==o?o:\"screen\"===e.screen.mediaSource?\"monitor\":e.screen.mediaSource},{selfBrowserSurface:n,surfaceSwitching:s,systemAudio:a}=e.screen,c={selfBrowserSurface:n,surfaceSwitching:s,systemAudio:a};!n&&delete c.selfBrowserSurface,!s&&delete c.surfaceSwitching,!a&&delete c.systemAudio,Qy.debug(\"[\".concat(t,\"] getDisplayMedia:\"),JSON.stringify({video:i,audio:!!e.screenAudio,controls:c})),qP(r,await navigator.mediaDevices.getDisplayMedia(yP({video:i,audio:!!e.screenAudio},c)))}else{if(!kI())throw Qy.error(\"[\".concat(t,\"] This browser does not support screenSharing\")),new rv(nv.NOT_SUPPORTED,\"This browser does not support screen sharing\");{e.screen.mediaSource&&ZD(e.screen.mediaSource);const i={video:{mediaSource:e.screen.mediaSource,width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate}};Qy.debug(\"[\".concat(t,\"] getUserMedia: \").concat(JSON.stringify(i))),qP(r,await navigator.mediaDevices.getUserMedia(i))}}var s,a;if(!e.video&&!e.audio)return r;let c={video:e.video,audio:e.audio},d=Dy(\"MEDIA_DEVICE_CONSTRAINTS\");if(d)try{\"string\"==typeof d&&(d=JSON.parse(d)),c=sy(c,d)}catch(e){}Qy.debug(\"[\".concat(t,\"] GetUserMedia\"),JSON.stringify(c)),AI();let l,u=null;(PI()||MI()||NI())&&(u=await jP.lock());try{l=await navigator.mediaDevices.getUserMedia(c)}catch(e){throw u&&u(),e}return c.audio&&(GP=!0),c.video&&(WP=!0),qP(r,l),u&&u(),r}function YP(e,t){switch(e){case\"Starting video failed\":case\"OverconstrainedError\":case\"TrackStartError\":return new rv(nv.MEDIA_OPTION_INVALID,\"\".concat(e,\": \").concat(t));case\"NotFoundError\":case\"DevicesNotFoundError\":return new rv(nv.DEVICE_NOT_FOUND,\"\".concat(e,\": \").concat(t));case\"NotSupportedError\":return new rv(nv.NOT_SUPPORTED,\"\".concat(e,\": \").concat(t));case\"NotReadableError\":return new rv(nv.NOT_READABLE,\"\".concat(e,\": \").concat(t));case\"InvalidStateError\":case\"NotAllowedError\":case\"PERMISSION_DENIED\":case\"PermissionDeniedError\":return new rv(nv.PERMISSION_DENIED,\"\".concat(e,\": \").concat(t));case\"ConstraintNotSatisfiedError\":return new rv(nv.CONSTRAINT_NOT_SATISFIED,\"\".concat(e,\": \").concat(t));default:return Qy.error(\"getUserMedia unexpected error\",e),new rv(nv.UNEXPECTED_ERROR,\"\".concat(e,\": \").concat(t))}}function qP(e,t){const i=e.getVideoTracks()[0],n=e.getAudioTracks()[0],r=t.getVideoTracks()[0],o=t.getAudioTracks()[0];o&&(n&&e.removeTrack(n),e.addTrack(o)),r&&(i&&e.removeTrack(i),e.addTrack(r))}const zP=new class extends Sv{get state(){return this._state}set state(e){e!==this._state&&(this.emit(fP.STATE_CHANGE,e),this._state=e)}constructor(){super(),IP(this,\"_state\",mP.IDLE),IP(this,\"isAccessMicrophonePermission\",!1),IP(this,\"isAccessCameraPermission\",!1),IP(this,\"lastAccessMicrophonePermission\",!1),IP(this,\"lastAccessCameraPermission\",!1),IP(this,\"checkdeviceMatched\",!1),IP(this,\"deviceInfoMap\",new Map),this.init().then((()=>{navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener(\"devicechange\",this.updateDevicesInfo.bind(this)),window.setInterval((()=>{(Dy(\"ENUMERATE_DEVICES_INTERVAL\")||(ZI()||wI()===RI.HARMONY_OS)&&QI())&&this.updateDevicesInfo()}),Dy(\"ENUMERATE_DEVICES_INTERVAL_TIME\"))})).catch((e=>Qy.error(e.toString())))}async enumerateDevices(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices)return new rv(nv.NOT_SUPPORTED,\"enumerateDevices() not supported.\").throw();const n=await navigator.mediaDevices.enumerateDevices(),r=this.checkMediaDeviceInfoIsOk(n);let o=!this.isAccessMicrophonePermission&&e,s=!this.isAccessCameraPermission&&t;r.audio&&(o=!1),r.video&&(s=!1);let a=null,c=null,d=null;if(!i&&(o||s)){if(jP.isLocked&&(Qy.debug(\"[device manager] wait GUM lock\"),(await jP.lock())(),Qy.debug(\"[device manager] GUM unlock\")),GP&&(o=!1,this.isAccessMicrophonePermission=!0),WP&&(s=!1,this.isAccessCameraPermission=!0),Qy.debug(\"[device manager] check media device permissions\",e,t,o,s),o&&s){try{d=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(e){const t=YP(e.name||e.code||e,e.message);if(t.code===nv.PERMISSION_DENIED)throw t;Qy.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0,this.isAccessMicrophonePermission=!0}else if(o){try{a=await navigator.mediaDevices.getUserMedia({audio:e})}catch(e){const t=YP(e.name||e.code||e,e.message);if(t.code===nv.PERMISSION_DENIED)throw t;Qy.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessMicrophonePermission=!0}else if(s){try{c=await navigator.mediaDevices.getUserMedia({video:t})}catch(e){const t=YP(e.name||e.code||e,e.message);if(t.code===nv.PERMISSION_DENIED)throw t;Qy.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0}Qy.debug(\"[device manager] mic permission\",e,\"cam permission\",t)}try{const e=await navigator.mediaDevices.enumerateDevices();return a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null,e}catch(e){return a&&a.getTracks().forEach((e=>e.stop())),c&&c.getTracks().forEach((e=>e.stop())),d&&d.getTracks().forEach((e=>e.stop())),a=null,c=null,d=null,new rv(nv.ENUMERATE_DEVICES_FAILED,e.toString()).throw()}}async getRecordingDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audioinput\"===e.kind))}async getCamerasDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!1,!0,e)).filter((e=>\"videoinput\"===e.kind))}async getSpeakers(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter((e=>\"audiooutput\"===e.kind))}searchDeviceIdByName(e){let t=null;return this.deviceInfoMap.forEach((i=>{i.device.label===e&&(t=i.device.deviceId)})),t}async getDeviceById(e){const t=(await this.enumerateDevices(!0,!0,!0)).find((t=>t.deviceId===e));if(!t)throw new rv(nv.DEVICE_NOT_FOUND,\"deviceId: \".concat(e));return t}async init(){this.state=mP.INITING;try{await this.updateDevicesInfo(),this.state=mP.INITEND}catch(e){throw Qy.warning(\"Device Detection functionality cannot start properly.\",e.toString()),this.state=mP.IDLE,(\"boolean\"==typeof isSecureContext?isSecureContext:\"https:\"===location.protocol||\"file:\"===location.protocol||\"localhost\"===location.hostname||\"127.0.0.1\"===location.hostname||\"::1\"===location.hostname)||new rv(nv.WEB_SECURITY_RESTRICT,\"Your context is limited by web security, please try using https protocol or localhost.\").throw(),e}}async updateDevicesInfo(){const e=await this.enumerateDevices(!0,!0,!0),t=Date.now(),i=[];if(e[0]&&e[0].label&&!1===this.checkdeviceMatched){this.checkdeviceMatched=!0;const t=e.find((e=>\"audioinput\"===e.kind&&\"default\"===e.deviceId)),i=e.find((e=>\"audiooutput\"===e.kind&&\"default\"===e.deviceId));t&&i?i.groupId===t.groupId?Qy.debug(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is the same group\")):Qy.warning(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is not the same group\")):Qy.debug(\"[device-check] default input or output not found\")}const n=this.checkMediaDeviceInfoIsOk(e);if(e.forEach((e=>{if(!e.deviceId)return;const n=this.deviceInfoMap.get(\"\".concat(e.kind,\"_\").concat(e.deviceId));if(\"ACTIVE\"!==(n?n.state:\"INACTIVE\")){const n={initAt:t,updateAt:t,device:e,state:\"ACTIVE\"};this.deviceInfoMap.set(\"\".concat(e.kind,\"_\").concat(e.deviceId),n),i.push(n)}n&&(n.updateAt=t)})),this.deviceInfoMap.forEach(((e,n)=>{\"ACTIVE\"===e.state&&e.updateAt!==t&&(e.state=\"INACTIVE\",i.push(e))})),this.state!==mP.INITEND)return n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));i.forEach((e=>{switch(e.device.kind){case\"audioinput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(fP.RECORDING_DEVICE_CHANGED,e);break;case\"videoinput\":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&this.emit(fP.CAMERA_DEVICE_CHANGED,e);break;case\"audiooutput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(fP.PLAYOUT_DEVICE_CHANGED,e)}})),n.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),n.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(e){const t=e.filter((e=>\"audioinput\"===e.kind)),i=e.filter((e=>\"videoinput\"===e.kind)),n={audio:!1,video:!1};for(const e of t)if(e.label&&e.deviceId){n.audio=!0;break}for(const e of i)if(e.label&&e.deviceId){n.video=!0;break}return n}};let JP=!1;const XP=new class extends Sv{constructor(){super(...arguments),IP(this,\"onAutoplayFailed\",void 0),IP(this,\"onAudioAutoplayFailed\",void 0)}};function QP(){if(AI(),!JP){const e=t=>{t.preventDefault(),JP=!1,$I()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};JP=!0,$I()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),Qy.info(\"detect media autoplay failed, document: https://docs.agora.io/cn/Voice/autoplay_policy_web_ng?platform=Web\"),XP.onAutoplayFailed?XP.onAutoplayFailed():XP.onAudioAutoplayFailed?Qy.warning(\"AgoraRTC.onAudioAutoplayFailed has been deprecated in favor of AgoraRTC.onAutoplayFailed.\\n\\n  Please refer to the Agora document to migrate the newer API, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"):Qy.warning(\"We have detected a media autoplay failed event, and found out that you haven't implemented AgoraRTC.onAutoplayFailed callback yet.\\n\\n  It will cause audio/video element not playing automatically on some browsers without user interaction, possibly hurting user experiences.\\n\\n  Please refer to the Agora document to properly handle autoplay failed event, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"),XP.emit(\"autoplay-failed\")}}function ZP(e,t,i,n){if(!e)return;const r=sA.getBaseInfoBySessionId(e);if(!r)return;const o=r.info,s=Date.now(),a=yP(yP({},o),{},{vid:void 0===o.vid?0:Number(o.vid),lts:s,elapse:s-r.startTime,cbRegistered:XP.onAutoplayFailed||XP.onAudioAutoplayFailed?1:-1,errorMsg:i,mediaType:t,trackId:n,extend:void 0});sA.send({type:iA.AUTOPLAY_FAILED,data:a},!0)}const $P=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"error\"],eL=new class{constructor(){IP(this,\"onAutoplayFailed\",void 0),IP(this,\"elementMap\",new Map),IP(this,\"elementStateMap\",new Map),IP(this,\"elementsNeedToResume\",[]),IP(this,\"sinkIdMap\",new Map),IP(this,\"autoResumeAfterInterruption\",(e=>{Array.from(this.elementMap.entries()).forEach((t=>{let[i,n]=t;const r=this.elementStateMap.get(i),o=n.srcObject.getAudioTracks()[0],s=o&&o.readyState;if(Qy.debug(\"resume after interrupted, ele: \".concat(r,\" audio: \").concat(s,\" \").concat(e)),\"live\"===s){if(e)return n.pause(),void n.play();if(\"running\"===NP.curState)return HI()?(n.pause(),void n.play()):void(r&&\"paused\"===r&&n.play())}}))})),IP(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{Array.from(this.elementMap.entries()).forEach((e=>{let[t,i]=e;const n=i.srcObject.getAudioTracks()[0];n&&\"live\"===n.readyState&&(Qy.debug(\"auto resume after interruption inside autoResumeAfterInterruptionOnIOS15\"),i.pause(),i.play())}))})),this.autoResumeAudioElement(),NP.on(VD.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),NP.on(VD.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),NP.on(VD.STATE_CHANGE,(()=>{MI()&&\"suspended\"===NP.prevState&&\"running\"===NP.curState&&this.autoResumeAfterInterruption()}))}async setSinkID(e,t){const i=this.elementMap.get(e);if(this.sinkIdMap.set(e,t),i)try{await i.setSinkId(t)}catch(e){throw new rv(nv.PERMISSION_DENIED,\"can not set sink id: \"+e.toString())}}play(e,t,i,n){if(this.elementMap.has(t))return;const r=document.createElement(\"audio\");r.autoplay=!0,r.srcObject=new MediaStream([e]),this.bindAudioElementEvents(t,r),this.elementMap.set(t,r),this.elementStateMap.set(t,TP.INIT),this.setVolume(t,i);const o=this.sinkIdMap.get(t);if(o)try{r.setSinkId(o).catch((e=>{Qy.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}))}catch(e){Qy.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}const s=r.play();s&&s.then&&s.catch((e=>{n&&ZP(n,\"audio\",e.message,t),Qy.warning(\"audio element play warning\",e.toString()),this.elementMap.has(t)&&\"NotAllowedError\"===e.name&&(Qy.warning(\"detected audio element autoplay failed\"),this.elementsNeedToResume.push(r),jv((()=>{this.onAutoplayFailed&&this.onAutoplayFailed(),QP()})))}))}updateTrack(e,t){const i=this.elementMap.get(e);i&&(i.srcObject=new MediaStream([t]))}isPlaying(e){return this.elementMap.has(e)&&\"playing\"===this.elementStateMap.get(e)}setVolume(e,t){const i=this.elementMap.get(e);i&&(t=Math.max(0,Math.min(100,t)),i.volume=t/100)}stop(e){const t=this.elementMap.get(e);if(this.sinkIdMap.delete(e),!t)return;const i=this.elementsNeedToResume.indexOf(t);this.elementsNeedToResume.splice(i,1),t.srcObject=null,t.remove(),this.elementMap.delete(e),this.elementStateMap.delete(e)}bindAudioElementEvents(e,t){$P.forEach((i=>{t.addEventListener(i,(i=>{const n=this.elementStateMap.get(e),r=\"pause\"===i.type?\"paused\":i.type;if(Qy.debug(\"[\".concat(e,\"] audio-element-status change \").concat(n,\" => \").concat(r)),\"error\"===i.type){const i=null==t?void 0:t.error;i&&Qy.error(\"[\".concat(e,\"] media error, code: \").concat(i.code,\", message: \").concat(i.message))}this.elementStateMap.set(e,r)}))}))}getPlayerState(e){return this.elementStateMap.get(e)||\"uninit\"}autoResumeAudioElement(){const e=()=>{this.elementsNeedToResume.forEach((e=>{e.play().then((e=>{Qy.debug(\"Auto resume audio element success\")})).catch((e=>{Qy.warning(\"Auto resume audio element failed!\",e)}))})),this.elementsNeedToResume=[]};new Gh((e=>{document.body?e():window.addEventListener(\"load\",(()=>e()))})).then((()=>{$I()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0))}))}};function tL(){return function(e,t,i){const n=i.value;return\"function\"==typeof n&&(i.value=function(){this._isClosed&&new rv(nv.INVALID_OPERATION,\"[\".concat(this.getTrackId(),\"] cannot operate a closed track\")).print(\"warning\",Qy);for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=n.apply(this,t);return r instanceof Gh?new Gh(((e,t)=>{r.then(e).catch(t)})):r}),i}}class iL extends Sv{constructor(e){super(),IP(this,\"name\",\"VideoProcessorDestination\"),IP(this,\"ID\",\"0\"),IP(this,\"_source\",void 0),IP(this,\"videoContext\",void 0),IP(this,\"inputTrack\",void 0),this.videoContext=e}get kind(){return\"video\"}get enabled(){return!0}pipe(){throw new rv(nv.NOT_SUPPORTED,\"VideoProcessor cannot pipe to any other Processor\")}unpipe(){throw new rv(nv.NOT_SUPPORTED,\"VideoProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}updateInput(e){if(e.context!==this.videoContext)throw new Error(\"ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\\nProbably you are making pipeline like this:\\nvideoTrack1.pipe(processor).pipe(videoTrack2.processorDestination).\");e.track&&e.track!==this.inputTrack&&(this.videoContext.chained=!0,this.inputTrack=e.track,this.emit(_P.ON_TRACK,e.track))}reset(){this.inputTrack=void 0,this.videoContext.chained=!1,this.emit(_P.ON_TRACK,void 0)}}class nL extends Sv{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t){super(),IP(this,\"constraintsMap\",new Map),IP(this,\"statsRegistry\",[]),IP(this,\"usageRegistry\",[]),IP(this,\"trackId\",void 0),IP(this,\"direction\",void 0),IP(this,\"_chained\",!1),this.trackId=e,this.direction=t}async getConstraints(){return await kv(this,EP.REQUEST_CONSTRAINTS)}async requestApplyConstraints(e,t){var i;return Qy.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),Mv(this,EP.REQUEST_UPDATE_CONSTRAINTS,Array.from(Qw(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return Qy.info(\"processor \".concat(e.name,\" requestRevertConstraints for \").concat(this.trackId)),this.constraintsMap.delete(e),Mv(this,EP.REQUEST_UPDATE_CONSTRAINTS,Array.from(Qw(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const o=r();e.push({processorID:t,processorName:i,type:n,stats:o})}catch(e){Qy.error(new rv(nv.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof Gh&&(i=await i),e.push(yP(yP({},i),{},{direction:this.direction}))}catch(e){Qy.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class rL extends Sv{constructor(e){super(),IP(this,\"name\",\"AudioProcessorDestination\"),IP(this,\"ID\",\"0\"),IP(this,\"inputTrack\",void 0),IP(this,\"inputNode\",void 0),IP(this,\"audioProcessorContext\",void 0),IP(this,\"_source\",void 0),this.audioProcessorContext=e}get kind(){return\"audio\"}get enabled(){return!0}pipe(){throw new rv(nv.NOT_SUPPORTED,\"AudioProcessorDestination cannot pipe to any other Processor\")}unpipe(){throw new rv(nv.NOT_SUPPORTED,\"AudioProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}reset(){this.inputTrack=void 0,this.inputNode=void 0,this.audioProcessorContext.chained=!1,this.emit(_P.ON_TRACK,void 0),this.emit(_P.ON_NODE,void 0)}updateInput(e){if(e.context!==this.audioProcessorContext)throw new Error(\"ProcessorContext passed to AudioTrack.processorDestination doesn't match it's belonging AudioTrack's context.\\n        Probably you are making pipeline like this: audioTrack1.pipe(processor).pipe(audioTrack2.processorDestination).\");e.track&&this.inputTrack!==e.track&&(this.audioProcessorContext.chained=!0,this.inputTrack=e.track,this.emit(_P.ON_TRACK,this.inputTrack)),e.node&&this.inputNode!==e.node&&(this.audioProcessorContext.chained=!0,this.inputNode=e.node,this.emit(_P.ON_NODE,this.inputNode))}}class oL extends Sv{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t,i){super(),IP(this,\"constraintsMap\",new Map),IP(this,\"statsRegistry\",[]),IP(this,\"audioContext\",void 0),IP(this,\"trackId\",void 0),IP(this,\"direction\",void 0),IP(this,\"usageRegistry\",[]),IP(this,\"_chained\",!1),this.audioContext=e,this.trackId=t,this.direction=i}async getConstraints(){return kv(this,EP.REQUEST_CONSTRAINTS)}getAudioContext(){return this.audioContext}async requestApplyConstraints(e,t){var i;return Qy.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),Mv(this,EP.REQUEST_UPDATE_CONSTRAINTS,Array.from(Qw(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return this.constraintsMap.delete(e),Mv(this,EP.REQUEST_UPDATE_CONSTRAINTS,Array.from(Qw(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t))||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex((i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t));-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:n,cb:r}of this.statsRegistry)try{const o=r();e.push({processorID:t,processorName:i,type:n,stats:o})}catch(e){Qy.error(new rv(nv.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find((t=>t.processorID===e.ID&&t.processorName===e.name))||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex((t=>t.processorID===e.ID&&t.processorName===e.name));-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof Gh&&(i=await i),e.push(yP(yP({},i),{},{direction:this.direction}))}catch(e){Qy.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class sL extends Sv{get isPlayed(){return!0}get isFreeze(){return!1}constructor(){super(),IP(this,\"context\",void 0),IP(this,\"processSourceNode\",void 0),IP(this,\"outputTrack\",void 0),IP(this,\"processedNode\",void 0),IP(this,\"clonedTrack\",void 0),IP(this,\"outputNode\",void 0),this.outputNode=new aL}setVolume(){}createOutputTrack(){throw new rv(nv.NOT_SUPPORTED,\"can not create output MediaStreamTrack when WebAudio disabled\")}getOriginVolumeLevel(){return 0}getAccurateVolumeLevel(){return 0}stopGetAudioBuffer(){}startGetAudioBuffer(){}play(){}stop(){}destroy(){}updateTrack(){}updateOriginTrack(){}createMediaStreamSourceNode(){}}class aL{disconnect(){}connect(){}}function cL(e){return new Gh(((t,i)=>{let n=!1;const r=document.createElement(\"video\");r.setAttribute(\"autoplay\",\"\"),r.setAttribute(\"muted\",\"\"),r.muted=!0,r.autoplay=!0,r.setAttribute(\"playsinline\",\"\"),r.setAttribute(\"style\",\"position: fixed; top: 0; left: 0; width: 1px; height: 1px\"),document.body.appendChild(r);const o=MI()?\"canplay\":\"playing\";r.addEventListener(o,(()=>{const e=r.videoWidth,i=r.videoHeight;!e&&kI()||(n=!0,r.srcObject=null,r.remove(),t([e,i]))})),r.srcObject=new MediaStream([e]),r.play().catch(iy),setTimeout((()=>{n||(r.srcObject=null,r.remove(),t([r.videoWidth,r.videoHeight]))}),4e3)}))}function dL(e){const t={};e.facingMode&&(t.facingMode=e.facingMode),e.cameraId&&(t.deviceId={exact:e.cameraId});const i=YD(e.encoderConfig);return null!=i.width&&(t.width=i.width),null!=i.height&&(t.height=i.height),!JI()&&i.frameRate&&(t.frameRate=i.frameRate),LI()&&\"object\"==typeof t.frameRate&&(t.frameRate.max=60),kI()&&(t.frameRate={ideal:30,max:30}),t}function lL(e){const t={};if(JI()||(void 0!==e.AGC&&(t.autoGainControl=e.AGC),void 0!==e.AEC&&(t.echoCancellation=e.AEC),void 0!==e.ANS&&(t.noiseSuppression=e.ANS,DI()&&e.ANS&&(t.googHighpassFilter=e.ANS))),e.encoderConfig){const i=XD(e.encoderConfig);t.channelCount=i.stereo?2:1,t.sampleRate=i.sampleRate,t.sampleSize=i.sampleSize}return e.microphoneId&&(t.deviceId={exact:e.microphoneId}),ZI()&&(t.sampleRate=void 0),t}const uL=e=>{const t=e._encoderConfig;if(!t)return;const{frameRate:i,width:n,height:r}=e.getMediaStreamTrackSettings();let{frameRate:o=i,width:s=n,height:a=r}=t;if(!o||!s||!a)return;s=cy(s),a=cy(a),o=cy(o);const{max:c,min:d}=function(e,t,i){const n=200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75);return{min:Math.floor(n),max:Math.floor(4*n)}}(s,a,o),{bitrateMax:l,bitrateMin:u}=t||{};l||Qy.debug(\"calculate bitrate: [w: \".concat(s,\", h: \").concat(a,\", fps: \").concat(o,\"] => [brMax: \").concat(l,\", brMin: \").concat(u,\"]\"));const{maxFramerate:h}=Dy(\"ENCODER_CONFIG_LIMIT\");return h&&\"number\"==typeof h&&(o=Math.min(o,h)),{frameRate:o,bitrateMax:l||c,bitrateMin:u||d,scaleResolutionDownBy:1,scale:0}},hL=async(e,t,i)=>await(async(e,t,i)=>{const n=function(e){const t=[];for(let i=0;i<e.length;i+=2)t.push(parseInt(e.slice(i,i+2),16));return Uint8Array.from(t)}(dy(\"\"+t+i)).slice(0,16),r=n.slice(0,12),o=await window.crypto.subtle.importKey(\"raw\",n,\"AES-GCM\",!0,[\"encrypt\"]);return new Uint8Array(await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:r},o,e))})(e.buffer,t,i),pL=e=>{const t=document.createElement(\"canvas\");return t.width=2,t.height=2,new Gh(((i,n)=>{t.toBlob((async e=>{if(t.remove(),e){const n=await _L(e);i({buffer:n,width:t.width,height:t.height})}else n(new rv(nv.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,1)}))},_L=async e=>{const t=await e.arrayBuffer();return new Uint8Array(t)};var EL,mL,fL,TL,SL,gL,RL,CL,IL,vL,yL,AL,bL,wL,OL,NL,DL,PL,LL,kL,ML,UL,xL,VL,FL,BL,jL,GL,WL,HL,KL,YL,qL,zL,JL,XL,QL,ZL,$L,ek;let tk=(EL=oA({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),mL=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),fL=tL(),TL=py(\"LocalAudioTrack\",\"_enabledMutex\"),SL=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),gL=tL(),RL=py(\"LocalAudioTrack\",\"_enabledMutex\"),CL=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),IL=tL(),vL=tL(),yL=tL(),AL=oA({argsMap:e=>[e.getTrackId()]}),bL=tL(),wL=oA({argsMap:e=>[e.getTrackId()]}),OL=tL(),NL=oA({argsMap:e=>[e.getTrackId()]}),DL=oA({argsMap:(e,t)=>[e.getTrackId(),t.name]}),PL=oA({argsMap:e=>[e.getTrackId()]}),CP((LL=class extends bP{get _source(){return this.initWebAudio()}set _source(e){this._trackSource=e}get processorContext(){return this._processorContext||(this._processorContext=this.initProcessor().processorContext),this._processorContext}get processorDestination(){return this._processorDestination||(this._processorDestination=this.initProcessor().processorDestination),this._processorDestination}get isPlaying(){return this._useAudioElement?eL.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"LocalAudioTrack\"}constructor(e,t,i,n){super(e,i),IP(this,\"trackMediaType\",aP.AUDIO),IP(this,\"_encoderConfig\",void 0),IP(this,\"_trackSource\",void 0),IP(this,\"_enabled\",!0),IP(this,\"_volume\",100),IP(this,\"_useAudioElement\",!0),IP(this,\"_bypassWebAudio\",!1),IP(this,\"processor\",void 0),IP(this,\"_processorContext\",void 0),IP(this,\"_processorDestination\",void 0),IP(this,\"_getOriginVolumeLevel\",void 0),this._encoderConfig=t,this._getOriginVolumeLevel=!!n,this._trackSource=new sL,Dy(\"DISABLE_WEBAUDIO\")&&(this._bypassWebAudio=!0),Dy(\"LOCAL_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1),PI()&&!OP?setTimeout((()=>this.initWebAudio())):this.initWebAudio()}setVolume(e){av(e,\"volume\",0,1e3),this._volume=e,this._source.setVolume(e/100),this._useAudioElement&&eL.setVolume(this.getTrackId(),e);try{if(this._bypassWebAudio)return void Qy.debug(\"[\".concat(this.getTrackId(),\"] setVolume returned because no pass through WebAudio.\"));const e=this._source.createOutputTrack();this._mediaStreamTrack!==e&&(this._mediaStreamTrack=e,Mv(this,$D.NEED_REPLACE_TRACK,this).then((()=>{Qy.debug(\"[\".concat(this.getTrackId(),\"] replace web audio track success\"))})).catch((e=>{Qy.warning(\"[\".concat(this.getTrackId(),\"] replace web audio track failed\"),e)})))}catch(e){}}getVolumeLevel(){return this._muted&&this.enabled&&this._getOriginVolumeLevel?this._source.getOriginVolumeLevel():this._source.getAccurateVolumeLevel()}async setPlaybackDevice(e){if(!this._useAudioElement||!UD())throw new rv(nv.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await eL.setSinkID(this.getTrackId(),e)}async setEnabled(e,t,i){return this._setEnabled(e,t,i)}async _setEnabled(e,t,i){if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(Qy.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){this._originMediaStreamTrack.enabled=!0;try{i||(this._enabled=!0),await Mv(this,$D.NEED_ENABLE_TRACK,this),Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled to \").concat(e,\" success\"))}catch(e){throw i||(this._enabled=!1),Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}}else{this._originMediaStreamTrack.enabled=!1,i||(this._enabled=!1);try{await Mv(this,$D.NEED_DISABLE_TRACK,this)}catch(e){throw i||(this._enabled=!0),Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}}}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,Qy.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await Mv(this,$D.NEED_MUTE_TRACK,this):await Mv(this,$D.NEED_UNMUTE_TRACK,this))}getStats(){Kv((()=>{Qy.warning(\"[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead\")}),\"localAudioTrackGetStatsWarning\");return Uv(this,$D.GET_STATS)||yP({},dP)}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(cP.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(cP.ON_AUDIO_BUFFER),this._source.on(cP.ON_AUDIO_BUFFER,(t=>e(t)))}play(){Qy.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._useAudioElement?(Qy.debug(\"[\".concat(this.getTrackId(),\"] start audio playback in element\")),eL.play(this._mediaStreamTrack,this.getTrackId(),this._volume)):this._source.play()}stop(){Qy.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._useAudioElement?eL.stop(this.getTrackId()):this._source.stop()}close(){super.close(),this._processorDestination&&this.unbindProcessorDestinationEvents(this._processorDestination),this._processorContext&&this.unbindProcessorContextEvents(this._processorContext),this.unpipe(),this._processorDestination&&this._processorDestination._source&&this._processorDestination._source.unpipe(),this._source.destroy()}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];Qy.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&eL.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(e,t){this._originMediaStreamTrack!==e&&(this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop()),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this.processor&&this._processorContext&&this.processor.updateInput({track:e,context:this._processorContext}),this._mediaStreamTrack!==this._source.outputTrack?(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Mv(this,$D.NEED_REPLACE_TRACK,this)):this._source.updateTrack(this._originMediaStreamTrack),this._getOriginVolumeLevel&&this._source.updateOriginTrack(e))}renewMediaStreamTrack(e){return Gh.resolve(void 0)}pipe(e){if(this._bypassWebAudio)throw new rv(nv.INVALID_OPERATION,\"Can not process AudioTrack when bypassWebAudio set to true.\");if(this.processor===e)return e;if(e._source)throw new rv(nv.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(e){e.on(_P.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e),await Mv(this,$D.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Mv(this,$D.NEED_REPLACE_TRACK,this))})),e.on(_P.ON_NODE,(e=>{this._source.processedNode=e}))}unbindProcessorDestinationEvents(e){e.removeAllListeners(_P.ON_TRACK),e.removeAllListeners(_P.ON_NODE)}bindProcessorContextEvents(e){e.on(EP.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}unbindProcessorContextEvents(e){e.removeAllListeners(EP.REQUEST_CONSTRAINTS)}initWebAudio(){return this._trackSource instanceof sL&&(this._trackSource=new xP(this._mediaStreamTrack,!1,this._getOriginVolumeLevel?this._mediaStreamTrack:void 0)),this._trackSource}initProcessor(){const e=new oL(this._source.context,this.getTrackId(),\"local\"),t=new rL(e);return this._processorContext=e,this._processorDestination=t,this.bindProcessorContextEvents(e),this.bindProcessorDestinationEvents(t),this._source.on(cP.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:e})})),this._useAudioElement&&(this._useAudioElement=!1,this.isPlaying&&(eL.stop(this.getTrackId()),this._source.play()),Mv(this,$D.NEED_REPLACE_MIXING_TRACK,this).then((()=>{Qy.debug(\"[\".concat(this.getTrackId(),\"] replace from origin track to web audio track success\"))})).catch((e=>{Qy.warning(\"[\".concat(this.getTrackId(),\"] replace from origin track to web audio track failed\"),e)}))),{processorContext:e,processorDestination:t}}}).prototype,\"setVolume\",[EL],Object.getOwnPropertyDescriptor(LL.prototype,\"setVolume\"),LL.prototype),CP(LL.prototype,\"setPlaybackDevice\",[mL,fL],Object.getOwnPropertyDescriptor(LL.prototype,\"setPlaybackDevice\"),LL.prototype),CP(LL.prototype,\"setEnabled\",[TL,SL,gL],Object.getOwnPropertyDescriptor(LL.prototype,\"setEnabled\"),LL.prototype),CP(LL.prototype,\"setMuted\",[RL,CL,IL],Object.getOwnPropertyDescriptor(LL.prototype,\"setMuted\"),LL.prototype),CP(LL.prototype,\"getStats\",[vL],Object.getOwnPropertyDescriptor(LL.prototype,\"getStats\"),LL.prototype),CP(LL.prototype,\"setAudioFrameCallback\",[yL],Object.getOwnPropertyDescriptor(LL.prototype,\"setAudioFrameCallback\"),LL.prototype),CP(LL.prototype,\"play\",[AL,bL],Object.getOwnPropertyDescriptor(LL.prototype,\"play\"),LL.prototype),CP(LL.prototype,\"stop\",[wL,OL],Object.getOwnPropertyDescriptor(LL.prototype,\"stop\"),LL.prototype),CP(LL.prototype,\"close\",[NL],Object.getOwnPropertyDescriptor(LL.prototype,\"close\"),LL.prototype),CP(LL.prototype,\"pipe\",[DL],Object.getOwnPropertyDescriptor(LL.prototype,\"pipe\"),LL.prototype),CP(LL.prototype,\"unpipe\",[PL],Object.getOwnPropertyDescriptor(LL.prototype,\"unpipe\"),LL.prototype),LL),ik=(kL=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),ML=tL(),UL=py(\"MicrophoneAudioTrack\",\"_enabledMutex\"),xL=oA({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),VL=tL(),FL=oA({argsMap:e=>[e.getTrackId()]}),CP((BL=class extends tk{get __className__(){return\"MicrophoneAudioTrack\"}constructor(e,t,i,n){super(e,t.encoderConfig?XD(t.encoderConfig):{},n,Dy(\"GET_VOLUME_OF_MUTED_AUDIO_TRACK\")),IP(this,\"_config\",void 0),IP(this,\"_deviceName\",\"default\"),IP(this,\"_constraints\",void 0),IP(this,\"_originalConstraints\",void 0),IP(this,\"_enabled\",!0),this._config=t,this._constraints=i,this._originalConstraints=i,this._deviceName=e.label,\"boolean\"==typeof t.bypassWebAudio&&(this._bypassWebAudio=t.bypassWebAudio),(HI()||KI())&&NP.bindInterruptDetectorTrack(this)}async setDevice(e){if(Qy.info(\"[\".concat(this.getTrackId(),\"] start set device to \").concat(e)),this._enabled)try{const t=await zP.getDeviceById(e),i={};i.audio=yP({},this._constraints),i.audio.deviceId={exact:e},this._originMediaStreamTrack.stop();let n=null;try{n=await HP(i,this.getTrackId())}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await HP({audio:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getAudioTracks()[0],!1),this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await zP.getDeviceById(e);this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e,\" success\"))}async setEnabled(e,t,i){if(t)return Qy.debug(\"[\".concat(this.getTrackId(),\"] setEnabled false (do not close microphone)\")),await super._setEnabled(e);if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(Qy.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),Dy(\"AUTO_RESET_AUDIO_ROUTE\")&&(MI()||qI())){const t=navigator.audioSession;t&&(e||(t.type=\"playback\"),t.type=\"auto\")}if(!e){var n;this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),null===(n=this._source.clonedTrack)||void 0===n||n.stop(),i||(this._enabled=!1);try{await Mv(this,$D.NEED_DISABLE_TRACK,this)}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled false failed\"),e.toString()),e}return}const r=yP({},this._constraints),o=zP.searchDeviceIdByName(this._deviceName);o&&!r.deviceId&&(r.deviceId=o);try{i||(this._enabled=!0);const e=await HP({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),await Mv(this,$D.NEED_ENABLE_TRACK,this)}catch(e){throw i||(this._enabled=!1),Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled true failed\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled success\"))}close(){super.close(),(HI()||KI())&&NP.unbindInterruptDetectorTrack(this)}onTrackEnded(){if((MI()||qI())&&this._enabled&&!this._isClosed&&NP.duringInterruption){const e=async()=>{NP.off(VD.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(Qy.debug(\"[\".concat(this.getTrackId(),\"] try capture microphone media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};NP.on(VD.IOS_INTERRUPTION_END,e)}else Qy.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(oP.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=zP.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId=i),this._constraints=t,this._enabled){this._originMediaStreamTrack.stop();const e=await HP({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!0)}}bindProcessorContextEvents(e){super.bindProcessorContextEvents(e),e.on(EP.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}}))}unbindProcessorContextEvents(e){super.unbindProcessorContextEvents(e),e.removeAllListeners(EP.REQUEST_UPDATE_CONSTRAINTS)}}).prototype,\"setDevice\",[kL,ML],Object.getOwnPropertyDescriptor(BL.prototype,\"setDevice\"),BL.prototype),CP(BL.prototype,\"setEnabled\",[UL,xL,VL],Object.getOwnPropertyDescriptor(BL.prototype,\"setEnabled\"),BL.prototype),CP(BL.prototype,\"close\",[FL],Object.getOwnPropertyDescriptor(BL.prototype,\"close\"),BL.prototype),BL),nk=(jL=oA({argsMap:(e,t)=>[e.getTrackId(),t,e.duration]}),GL=tL(),WL=oA({argsMap:e=>[e.getTrackId()]}),HL=tL(),KL=oA({argsMap:e=>[e.getTrackId()]}),YL=tL(),qL=oA({argsMap:e=>[e.getTrackId()]}),zL=tL(),JL=oA({argsMap:e=>[e.getTrackId()]}),XL=tL(),QL=oA({argsMap:e=>[e.getTrackId()]}),ZL=oA({argsMap:e=>[e.getTrackId()]}),$L=tL(),CP((ek=class extends tk{get __className__(){return\"BufferSourceAudioTrack\"}constructor(e,t,i,n){super(t.createOutputTrack(),i,n),IP(this,\"source\",void 0),IP(this,\"_bufferSource\",void 0),this._useAudioElement=!1,this.source=e,this._bufferSource=t,this._bufferSource.on(cP.AUDIO_SOURCE_STATE_CHANGE,(e=>{this.safeEmit(oP.SOURCE_STATE_CHANGE,e)}));try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}get playbackSpeed(){return this._bufferSource.playbackSpeed}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(e){e&&this._bufferSource.updateOptions(e),this._bufferSource.startProcessAudioBuffer()}pauseProcessAudioBuffer(){this._bufferSource.pauseProcessAudioBuffer()}seekAudioBuffer(e){this._bufferSource.seekAudioBuffer(e)}resumeProcessAudioBuffer(){this._bufferSource.resumeProcessAudioBuffer()}stopProcessAudioBuffer(){this._bufferSource.stopProcessAudioBuffer()}close(){this.source=null,this._bufferSource.destroy(),super.close()}setAudioBufferPlaybackSpeed(e){av(e,\"speed\",0),this._bufferSource.setAudioBufferPlaybackSpeed(e)}}).prototype,\"startProcessAudioBuffer\",[jL,GL],Object.getOwnPropertyDescriptor(ek.prototype,\"startProcessAudioBuffer\"),ek.prototype),CP(ek.prototype,\"pauseProcessAudioBuffer\",[WL,HL],Object.getOwnPropertyDescriptor(ek.prototype,\"pauseProcessAudioBuffer\"),ek.prototype),CP(ek.prototype,\"seekAudioBuffer\",[KL,YL],Object.getOwnPropertyDescriptor(ek.prototype,\"seekAudioBuffer\"),ek.prototype),CP(ek.prototype,\"resumeProcessAudioBuffer\",[qL,zL],Object.getOwnPropertyDescriptor(ek.prototype,\"resumeProcessAudioBuffer\"),ek.prototype),CP(ek.prototype,\"stopProcessAudioBuffer\",[JL,XL],Object.getOwnPropertyDescriptor(ek.prototype,\"stopProcessAudioBuffer\"),ek.prototype),CP(ek.prototype,\"close\",[QL],Object.getOwnPropertyDescriptor(ek.prototype,\"close\"),ek.prototype),CP(ek.prototype,\"setAudioBufferPlaybackSpeed\",[ZL,$L],Object.getOwnPropertyDescriptor(ek.prototype,\"setAudioBufferPlaybackSpeed\"),ek.prototype),ek);class rk extends tk{get __className__(){return\"MixingAudioTrack\"}get isActive(){for(const e of this.trackList)if(e._enabled&&!e._isClosed&&!e.muted)return!0;return!1}constructor(){const e=DP().createMediaStreamDestination();super(e.stream.getAudioTracks()[0],void 0,ey(8,\"track-mix-\")),IP(this,\"trackList\",void 0),IP(this,\"destNode\",void 0),this._useAudioElement=!1;try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}this.destNode=e,this.trackList=[]}hasAudioTrack(e){return-1!==this.trackList.indexOf(e)}addAudioTrack(e){-1===this.trackList.indexOf(e)?(Qy.debug(\"add \".concat(e.getTrackId(),\" to mixing track\")),e._source.outputNode.connect(this.destNode),this.trackList.push(e),this.updateEncoderConfig()):Qy.debug(\"track \".concat(e.getTrackId(),\" is already added\"))}removeAudioTrack(e){if(-1!==this.trackList.indexOf(e)){Qy.debug(\"remove \".concat(e.getTrackId(),\" from mixing track\"));try{e._source.outputNode.disconnect(this.destNode)}catch(e){}Fv(this.trackList,e),this.updateEncoderConfig()}}updateEncoderConfig(){const e={};this.trackList.forEach((t=>{t._encoderConfig&&((t._encoderConfig.bitrate||0)>(e.bitrate||0)&&(e.bitrate=t._encoderConfig.bitrate),(t._encoderConfig.sampleRate||0)>(e.sampleRate||0)&&(e.sampleRate=t._encoderConfig.sampleRate),(t._encoderConfig.sampleSize||0)>(e.sampleSize||0)&&(e.sampleSize=t._encoderConfig.sampleSize),t._encoderConfig.stereo&&(e.stereo=!0))})),this._encoderConfig=e}_updateRtpTransceiver(e){this._rtpTransceiver!==e&&(this._rtpTransceiver=e,this.trackList.forEach((t=>{t instanceof rk?t.emit(rP.TRANSCEIVER_UPDATED,e):t._updateRtpTransceiver(e)})))}}class ok extends UP{set currentState(e){e!==this._currentState&&(this._currentState=e,this.safeEmit(cP.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),IP(this,\"audioBuffer\",void 0),IP(this,\"sourceNode\",void 0),IP(this,\"startPlayTime\",0),IP(this,\"startPlayOffset\",0),IP(this,\"pausePlayTime\",0),IP(this,\"options\",void 0),IP(this,\"currentLoopCount\",0),IP(this,\"currentPlaybackSpeed\",100),IP(this,\"_currentState\",\"stopped\"),this.audioBuffer=e,this.options=t,this.startPlayOffset=this.options.startPlayTime||0}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer?this.audioBuffer.duration:0}get playbackSpeed(){return this.currentPlaybackSpeed}get currentTime(){return this.audioBuffer?\"stopped\"===this.currentState?0:\"paused\"===this.currentState?this.pausePlayTime:((this.context.currentTime-this.startPlayTime)*(this.playbackSpeed/100)+this.startPlayOffset)%this.audioBuffer.duration:0}updateOptions(e){\"stopped\"===this.currentState?(this.options=e,this.startPlayOffset=this.options.startPlayTime||0):Qy.warning(\"can not set audio source options\")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer(),this.sourceNode=this.createSourceNode(),this.startSourceNode(),this.currentState=\"playing\"}pauseProcessAudioBuffer(){this.sourceNode&&\"playing\"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState=\"paused\")}seekAudioBuffer(e){this.sourceNode&&(this.sourceNode.onended=null,\"playing\"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),\"playing\"===this.currentState?(this.startPlayOffset=e,this.startSourceNode()):\"paused\"===this.currentState&&(this.pausePlayTime=e))}resumeProcessAudioBuffer(){\"paused\"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState=\"playing\")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(e){}this.reset()}}destroy(){this.audioBuffer=null,super.destroy()}setAudioBufferPlaybackSpeed(e){this.sourceNode&&(\"playing\"===this.currentState&&(this.startPlayOffset=this.currentTime,this.startPlayTime=this.context.currentTime),this.sourceNode.playbackRate.value=e/100),this.currentPlaybackSpeed=e}startSourceNode(){this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=this.handleSourceNodeEnded.bind(this))}createSourceNode(){const e=this.context.createBufferSource();return e.buffer=this.audioBuffer,e.loop=!!this.options.loop,e.connect(this.outputNode),e.playbackRate.value=this.currentPlaybackSpeed/100,e}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0,this.currentState=\"stopped\",this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=void 0),this.currentLoopCount=0}}const sk=new Map;class ak{get rendFrameRate(){if(this.renderStats&&this.renderStats.curTs!==this.renderStats.lastTs){const e=this.renderStats.curTs-this.renderStats.lastTs,t=(this.renderStats.renderNum-this.renderStats.lastRenderNum)/e;return this.renderStats.lastRenderNum=this.renderStats.renderNum,this.renderStats.lastTs=this.renderStats.curTs,t}return 0}get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(e){e!==this._videoElementStatus&&(Qy.debug(\"[\".concat(this.trackId,\"] video-element-status change \").concat(this._videoElementStatus,\" => \").concat(e)),this._videoElementStatus=e)}get videoState(){return this._videoState}set videoState(e){var t;e!==this._videoState&&(this._videoState=e,null===(t=this.onVideoStateChanged)||void 0===t||t.call(this,this.videoState))}constructor(e){IP(this,\"trackId\",void 0),IP(this,\"config\",void 0),IP(this,\"onFirstVideoFrameDecoded\",void 0),IP(this,\"onVideoStateChanged\",void 0),IP(this,\"freezeTimeCounterList\",[]),IP(this,\"renderFreezeAccTime\",0),IP(this,\"isKeepLastFrame\",!1),IP(this,\"timeUpdatedCount\",0),IP(this,\"freezeTime\",0),IP(this,\"playbackTime\",0),IP(this,\"lastTimeUpdatedTime\",0),IP(this,\"autoplayFailed\",!1),IP(this,\"videoTrack\",void 0),IP(this,\"videoElement\",void 0),IP(this,\"cacheVideoElement\",void 0),IP(this,\"renderStats\",void 0),IP(this,\"_videoState\",SP.VideoStateStopped),IP(this,\"videoElementCheckInterval\",void 0),IP(this,\"videoElementFreezeTimeout\",void 0),IP(this,\"_videoElementStatus\",TP.NONE),IP(this,\"isGettingVideoDimensions\",!1),IP(this,\"startGetVideoDimensions\",(()=>{const e=()=>{if(this.isGettingVideoDimensions=!0,this.videoElement.videoWidth*this.videoElement.videoHeight>4)return Qy.debug(\"[\".concat(this.trackId,\"] current video dimensions:\"),this.videoElement.videoWidth,this.videoElement.videoHeight),void(this.isGettingVideoDimensions=!1);setTimeout(e,500)};!this.isGettingVideoDimensions&&e()})),IP(this,\"autoResumeAfterInterruption\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&\"running\"===NP.curState&&(Qy.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(OI())),YI()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),IP(this,\"handleVideoEvents\",(e=>{switch(e.type){case\"play\":case\"playing\":this.startGetVideoDimensions(),this.videoElementStatus=TP.PLAYING;break;case\"loadeddata\":if(this.videoState=SP.VideoStateStarting,this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded(),this.cacheVideoElement){try{this.cacheVideoElement.srcObject=null,this.cacheVideoElement.remove()}catch(e){}this.cacheVideoElement=void 0}break;case\"canplay\":this.videoElementStatus=TP.CANPLAY;break;case\"stalled\":this.videoElementStatus=TP.STALLED;break;case\"suspend\":this.videoElementStatus=TP.SUSPEND;break;case\"pause\":this.videoElementStatus=TP.PAUSED,MI()||qI()||PI()&&this.autoplayFailed||!this.videoTrack||\"live\"!==this.videoTrack.readyState||(Qy.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume\")),this.videoElement.play());break;case\"waiting\":this.videoElementStatus=TP.WAITING;break;case\"abort\":this.videoElementStatus=TP.ABORT;break;case\"ended\":this.videoElementStatus=TP.ENDED;break;case\"emptied\":this.videoElementStatus=TP.EMPTIED;break;case\"error\":{const e=this.videoElement.error;e?(this.videoElementStatus=TP.ERROR,Qy.error(\"[\".concat(this.trackId,\"] media error: \").concat(e.message,\" (\").concat(e.code,\")\"))):Qy.debug(\"[\".concat(this.trackId,\"] media not been an error.\"));break}case\"timeupdate\":{const e=performance.now();if(this.timeUpdatedCount+=1,this.timeUpdatedCount<10)return void(this.lastTimeUpdatedTime=e);const t=e-this.lastTimeUpdatedTime,i=this.lastTimeUpdatedTime;if(this.lastTimeUpdatedTime=e,cM.lastVisibleTime<cM.lastHiddenTime||i<cM.lastHiddenTime||i<cM.lastVisibleTime)return;for(t>Dy(\"VIDEO_FREEZE_DURATION\")&&(this.freezeTime+=t),this.playbackTime+=t;this.playbackTime>=6e3;){this.playbackTime-=6e3;const e=Math.min(6e3,this.freezeTime);this.freezeTimeCounterList.push(e),this.freezeTime=Math.max(0,this.freezeTime-6e3)}break}}})),IP(this,\"autoResumeAfterInterruptionOnIOS15_16\",(()=>{this.videoTrack&&\"live\"===this.videoTrack.readyState&&(Qy.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for \").concat(OI())),YI()?(this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):(this.videoElement.pause(),this.videoElement.play()))})),this.trackId=e.trackId,this.config=e,e.element instanceof HTMLVideoElement?this.videoElement=e.element:this.videoElement=document.createElement(\"video\"),NP.on(VD.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),NP.on(VD.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16)}getVideoElement(){return this.videoElement}getContainerElement(){var e;return null!==(e=this.videoElement.parentElement)&&void 0!==e?e:void 0}updateConfig(e){this.config=e,this.trackId=e.trackId,e.element!==this.videoElement&&(this.destroy(),this.videoElement=e.element),this.videoTrack&&this.initVideoElement()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.initVideoElement())}play(e){const t=this.videoElement.play();t&&t.catch&&t.catch((t=>{e&&ZP(e,\"video\",t.message,this.trackId),\"NotAllowedError\"===t.name?(Qy.warning(\"detected video element autoplay failed\",t),this.autoplayFailed=!0,this.handleAutoPlayFailed()):Qy.warning(\"[\".concat(this.trackId,\"] play warning: \"),t)}));const i=AI();if((\"Safari\"===i.name&&15===Number(i.version)||HI())&&t&&t.then){const e=()=>{this.config.mirror&&(this.videoElement.style.transform=\"rotateY(180deg)\")};t.then(e).catch(e)}}getCurrentFrame(){const e=document.createElement(\"canvas\");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;const t=e.getContext(\"2d\");if(!t)return Qy.error(\"create canvas context failed!\"),new ImageData(2,2);t.drawImage(this.videoElement,0,0,e.width,e.height);const i=t.getImageData(0,0,e.width,e.height);return e.remove(),i}async getCurrentFrameToUint8Array(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const i=document.createElement(\"canvas\");i.width=this.videoElement.videoWidth,i.height=this.videoElement.videoHeight;const n=i.getContext(\"2d\");return n?(n.drawImage(this.videoElement,0,0,i.width,i.height),new Gh(((n,r)=>{i.toBlob((async e=>{if(i.remove(),e){const t=await _L(e);n({buffer:t,width:i.width,height:i.height})}else r(new rv(nv.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))}),e,t<0?.1:t>1?1:t)}))):await pL(e)}destroy(){this.renderStats=void 0,NP.off(VD.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),NP.off(VD.IOS_15_16_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15_16),this.videoElement.srcObject=null,this.resetVideoElement(),this.freezeTimeCounterList=[],this.videoState=SP.VideoStateStopped}initVideoElement(){if(this.videoElementStatus=TP.INIT,!this.videoElementCheckInterval&&(ck.forEach((e=>{this.videoElement.addEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval=window.setInterval((()=>{(function(e){return e!==document.body&&document.body.contains(e)})(this.videoElement)||(this.videoElementStatus=TP.DESTROYED)}),1e3),Dy(\"ENABLE_VIDEO_FRAME_CALLBACK\"))){var e,t;let i;const n=()=>{\"visible\"===document.visibilityState&&(document.removeEventListener(\"visibilitychange\",n),this.videoElementFreezeTimeout=window.setTimeout(r,Dy(\"VIDEO_FREEZE_DURATION\")))},r=()=>{this.videoElementFreezeTimeout=void 0,this.videoState===SP.VideoStateDecoding&&(\"visible\"===document.visibilityState?this.videoState=SP.VideoStateFrozen:document.addEventListener(\"visibilitychange\",n))},o=(e,t)=>{if(this.videoElementStatus===TP.PLAYING){if(this.renderStats?(this.renderStats.renderNum++,this.renderStats.curTs=t.mediaTime):this.renderStats={lastTs:t.mediaTime,curTs:t.mediaTime,lastRenderNum:0,renderNum:0},i){const e=t.presentationTime-i.presentationTime;this.videoState===SP.VideoStateStarting&&(this.videoState=SP.VideoStateDecoding),this.videoState===SP.VideoStateDecoding&&this.onVideoStateChanged&&(this.videoElementFreezeTimeout&&window.clearTimeout(this.videoElementFreezeTimeout),this.videoElementFreezeTimeout=window.setTimeout(r,Dy(\"VIDEO_FREEZE_DURATION\"))),e<Dy(\"VIDEO_FREEZE_DURATION\")&&this.videoState===SP.VideoStateFrozen&&(this.videoState=SP.VideoStateDecoding),e>Dy(\"VIDEO_FREEZE_DURATION\")&&cM.lastVisibleTime>=cM.lastHiddenTime&&i.timestamp>cM.lastVisibleTime&&i.timestamp>cM.lastHiddenTime&&(this.renderFreezeAccTime+=e)}i=yP(yP({},t),{},{timestamp:e})}var n,s;Dy(\"ENABLE_VIDEO_FRAME_CALLBACK\")&&(null===(n=(s=this.videoElement).requestVideoFrameCallback)||void 0===n||n.call(s,o))};null===(e=(t=this.videoElement).requestVideoFrameCallback)||void 0===e||e.call(t,o)}this.videoElement.controls=!1,this.videoElement.setAttribute(\"playsinline\",\"\"),ZI()&&!Dy(\"HIDE_NO_POSTER\")&&(this.videoElement.poster=\"noposter\");const i=AI();\"Safari\"===i.name&&15===Number(i.version)||HI()||!this.config.mirror||(this.videoElement.style.transform=\"rotateY(180deg)\"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit=\"cover\",this.videoElement.setAttribute(\"muted\",\"\"),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream?this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,kI()&&this.videoElement.load()):(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,kI()&&this.videoElement.load());const n=this.videoElement.play();void 0!==n&&n.catch((e=>{Qy.debug(\"[\".concat(this.trackId,\"] playback interrupted\"),e.toString())}))}resetVideoElement(){ck.forEach((e=>{this.videoElement&&this.videoElement.removeEventListener(e,this.handleVideoEvents)})),this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0),this.videoElementStatus=TP.NONE}handleAutoPlayFailed(){const e=t=>{t.preventDefault(),this.videoElement.play().then((()=>{Qy.debug(\"[\".concat(this.trackId,\"] Video element for trackId:\").concat(this.trackId,\" autoplay resumed.\"))})).catch((e=>{Qy.error(e)})),this.autoplayFailed=!1,$I()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};$I()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),QP()}}const ck=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"timeupdate\",\"error\"];class dk extends ak{constructor(e){super(e),IP(this,\"container\",void 0),IP(this,\"slot\",void 0),this.slot=e.element,this.updateConfig(e)}updateConfig(e){this.config=e,this.trackId=e.trackId;const t=e.element;t!==this.slot&&(this.destroy(),this.slot=t),this.createElements()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.createElements())}play(e){var t;null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)&&super.play(e)}getCurrentFrame(){var e;return null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)?super.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameToUint8Array(e){var t;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return null!==(t=this.container)&&void 0!==t&&t.contains(this.videoElement)?await super.getCurrentFrameToUint8Array(e,i):await pL(e)}destroy(){if(super.destroy(),this.videoElement.remove(),this.videoElement=document.createElement(\"video\"),this.container){try{this.container.remove(),this.slot.removeChild(this.container)}catch(e){}this.container=void 0}}createElements(){this.container||(this.container=document.createElement(\"div\")),this.container.id=\"agora-video-player-\".concat(this.trackId),this.container.style.width=\"100%\",this.container.style.height=\"100%\",this.container.style.position=\"relative\",this.container.style.overflow=\"hidden\",this.videoTrack?(this.container.style.backgroundColor=\"black\",Dy(\"KEEP_LAST_FRAME\")&&this.isKeepLastFrame&&this.videoElement.paused&&this.resetVideoElement(),this.mountedVideoElement()):this.unmountedVideoElement(),this.slot.appendChild(this.container)}mountedVideoElement(){var e;!this.container||null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)||this.container.appendChild(this.videoElement),super.initVideoElement(),this.videoElement.id=\"video_\".concat(this.trackId),this.videoElement.className=\"agora_video_player\",this.videoElement.style.width=\"100%\",this.videoElement.style.height=\"100%\",this.videoElement.style.position=\"absolute\",this.videoElement.style.left=\"0\",this.videoElement.style.top=\"0\"}unmountedVideoElement(){var e;if(null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)){super.resetVideoElement();try{this.container&&this.container.removeChild(this.videoElement)}catch(e){}this.videoElement=document.createElement(\"video\")}}resetVideoElement(){var e;null!==(e=this.container)&&void 0!==e&&e.contains(this.videoElement)&&(super.resetVideoElement(),this.cacheVideoElement=this.videoElement,this.videoElement=document.createElement(\"video\"))}getContainerElement(){return this.container}}var lk,uk,hk,pk,_k,Ek,mk,fk,Tk,Sk,gk,Rk,Ck,Ik,vk,yk,Ak,bk,wk,Ok,Nk,Dk,Pk,Lk,kk,Mk,Uk,xk,Vk,Fk,Bk,jk,Gk,Wk;let Hk=(lk=oA({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),uk=tL(),hk=oA({argsMap:e=>[e.getTrackId()]}),pk=py(\"LocalVideoTrack\",\"_enabledMutex\"),_k=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),Ek=tL(),mk=py(\"LocalVideoTrack\",\"_enabledMutex\"),fk=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),Tk=tL(),Sk=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),gk=tL(),Rk=tL(),Ck=oA({argsMap:(e,t,i)=>[e.getTrackId(),t,i]}),Ik=tL(),vk=tL(),yk=tL(),Ak=tL(),bk=tL(),wk=tL(),Ok=tL(),Nk=oA({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Dk=oA({argsMap:e=>[e.getTrackId()]}),Pk=oA({argsMap:e=>[e.getTrackId()]}),Lk=oA({argsMap:(e,t,i)=>[e.getTrackId(),t.label,i]}),kk=class e extends bP{get videoHeight(){if(PI()){const{height:e}=this._mediaStreamTrack.getSettings();return this._videoHeight=e,this._videoHeight}return this._videoHeight}get videoWidth(){if(PI()){const{width:e}=this._mediaStreamTrack.getSettings();return this._videoWidth=e,this._videoWidth}return this._videoWidth}get isPlaying(){return!(!this._player||this._player.videoElementStatus!==TP.PLAYING)}get processorDestination(){return this._processorDestination}get processorContext(){return this._processorContext}set processorContext(e){this._processorContext=e}get __className__(){return\"LocalVideoTrack\"}constructor(e,t,i,n,r,o){if(super(e,r),IP(this,\"trackMediaType\",aP.VIDEO),IP(this,\"_player\",void 0),IP(this,\"isUseScaleResolutionDownBy\",!1),IP(this,\"_videoVisibleTimer\",null),IP(this,\"_previousVideoVisibleStatus\",void 0),IP(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),IP(this,\"_encoderConfig\",void 0),IP(this,\"_scalabilityMode\",{numSpatialLayers:1,numTemporalLayers:1}),IP(this,\"_optimizationMode\",void 0),IP(this,\"_videoHeight\",void 0),IP(this,\"_videoWidth\",void 0),IP(this,\"_forceBitrateLimit\",void 0),IP(this,\"_enabled\",!0),IP(this,\"_processorDestination\",void 0),IP(this,\"_processorContext\",void 0),PI()){const{width:t,height:i}=e.getSettings();this._videoWidth=t,this._videoHeight=i}else this.updateMediaStreamTrackResolution();if(this._encoderConfig=t,this._scalabilityMode=i,this._optimizationMode=n,this._hints=o||[],-1===this._hints.indexOf(eP.SCREEN_TRACK))this.updateBitrateFromProfile();else if(function(e,t,i){const n=AI();return!(n.name!==e||!n.osVersion)&&(i?Number(n.version)>=t&&Number(n.version)<=i:Number(n.version)===t)}(CI.CHROME,115)&&-1!==wI().indexOf(\"Windows\")){const t=function(e,t){if(\"VideoFrame\"in window&&\"TransformStream\"in window&&MD().supportWebRTCInsertableStream){const i=new MediaStreamTrackProcessor(e),n=new MediaStreamTrackGenerator({kind:\"video\"});let r,o,s=Date.now();const a=()=>{c&&(clearInterval(c),c=void 0),r&&(r.close(),r=void 0),e.stop(),o=void 0,n.removeEventListener(\"ended\",a)};let c=window.setInterval((()=>{if(o&&r&&Date.now()-s>(null!=t?t:1e3))try{\"live\"===n.readyState?o.enqueue(r.clone()):a()}catch(e){a()}}),null!=t?t:1e3);const d=new TransformStream({transform:(e,t)=>{\"live\"===n.readyState?(o=t,s=Date.now(),void 0===r?(r=e,t.enqueue(e.clone())):(t.enqueue(r),r=e)):e.close()}});return n.addEventListener(\"ended\",a),i.readable.pipeThrough(d).pipeTo(n.writable),n}}(e);t&&(Qy.info(\"local screen video track begin to inject frame\"),this._mediaStreamTrack=t)}t&&-1!==this._hints.indexOf(eP.CUSTOM_TRACK)&&this.setEncoderConfiguration(t),this._processorContext=new nL(this.getTrackId(),\"local\"),this._processorDestination=new iL(this.processorContext),this.bindProcessorDestinationEvents()}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(Qy.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}Qy.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=yP(yP(yP({},this._getDefaultPlayerConfig()),t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new ak(i):this._player=new dk(i),this._player.updateVideoTrack(this._mediaStreamTrack)),this._player.play(),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(oP.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),Dy(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,Qy.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(Qy.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),!e){this._originMediaStreamTrack.enabled=!1;try{await Mv(this,$D.NEED_DISABLE_TRACK,this)}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}return t||(this._enabled=!1),void Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}this._originMediaStreamTrack.enabled=!0;try{await Mv(this,$D.NEED_ENABLE_TRACK,this)}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,Qy.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),e?await Mv(this,$D.NEED_MUTE_TRACK,this):await Mv(this,$D.NEED_UNMUTE_TRACK,this))}async setEncoderConfiguration(e,t){if(!this._enabled)throw new rv(nv.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");if(e=YD(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),e.width||e.height||e.frameRate){const t=dL({encoderConfig:e});(PI()||MI()||qI())&&(t.deviceId=void 0),Qy.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(t));try{await this._originMediaStreamTrack.applyConstraints(t),this.updateMediaStreamTrackResolution()}catch(e){const t=new rv(nv.UNEXPECTED_ERROR,e.toString());throw Qy.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}}this._encoderConfig=e,-1===this._hints.indexOf(eP.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await Mv(this,$D.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(Qy)}}getStats(){Kv((()=>{Qy.warning(\"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead\")}),\"localVideoTrackGetStatsWarning\");return Uv(this,$D.GET_STATS)||yP({},lP)}async setBeautyEffect(e){Qy.error(\"LocalVideoTrack.setBeautyEffect was deprecated, please migrate to agora-extension-beauty-effect\")}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this._player?this._player.getCurrentFrameToUint8Array(e,t):await pL(e)}async setBitrateLimit(e){if(Qy.debug(\"[\".concat(this.getTrackId(),\"] set bitrate limit, \").concat(JSON.stringify(e))),e){this._forceBitrateLimit=e,this._encoderConfig&&(this._encoderConfig.bitrateMax?this._encoderConfig.bitrateMax=this._encoderConfig.bitrateMax<e.max_bitrate?this._encoderConfig.bitrateMax:e.max_bitrate:this._encoderConfig.bitrateMax=e.max_bitrate,this._encoderConfig.bitrateMin,this._encoderConfig.bitrateMin=e.min_bitrate);try{await Mv(this,$D.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(Qy)}}}async setOptimizationMode(e){if(\"motion\"!==e&&\"detail\"!==e&&\"balanced\"!==e)return void Qy.error(nv.INVALID_PARAMS,\"optimization mode must be motion, detail or balanced\");const t=this._optimizationMode;try{this._optimizationMode=e,await Mv(this,$D.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this)}catch(e){throw this._optimizationMode=t,Qy.error(\"[\".concat(this.getTrackId(),\"] set optimization mode failed\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] set optimization mode success (\").concat(e,\")\"))}setScalabiltyMode(e){if(1===e.numSpatialLayers&&1!==e.numTemporalLayers)return Qy.error(nv.INVALID_PARAMS,\"scalability mode currently not supported, no SVC.\"),void(this._scalabilityMode={numSpatialLayers:1,numTemporalLayers:1});this._scalabilityMode=e,Qy.info(\"[\".concat(this.getTrackId(),\"] set scalability mode success (\").concat(e,\")\"))}updateMediaStreamTrackResolution(){cL(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(iy)}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:\"contain\"}}async setSenderConfiguration(e){if(!this._enabled)throw new rv(nv.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");Qy.debug(\"[\".concat(this.getTrackId(),\"] setSenderConfiguration applyConstraints\"),JSON.stringify(e)),e=YD(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin),this._encoderConfig=e,-1===this._hints.indexOf(eP.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await Mv(this,$D.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(Qy)}}updateBitrateFromProfile(){if(!this._encoderConfig)return;const{width:e,height:t,frameRate:i}=this.getMediaStreamTrackSettings();if(!e||!t||!i)return;const{bitrateMax:n,bitrateMin:r}=this._encoderConfig;if(null==r||null==n){const{max:o,min:s}=function(e,t,i,n,r){const o=Dy(\"BITRATE_ADAPTER_TYPE\");if(\"DEFAULT_BITRATE\"===o)return{min:n,max:r};if(void 0===r){var s;const a=Math.floor(200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75));r=\"STANDARD_BITRATE\"===o?4*a:2*a,n=null!==(s=n)&&void 0!==s?s:a}else{var a;n=null!==(a=n)&&void 0!==a?a:Math.floor(r/10)}return{min:n,max:r}}(e,t,i,r,n);this._encoderConfig.bitrateMin=s,this._encoderConfig.bitrateMax=o,Qy.debug(\"[\".concat(this.getTrackId(),\"] update bitrate from profile, [w: \").concat(e,\", h: \").concat(t,\", fps: \").concat(i,\"] => [brMax: \").concat(o,\", brMin: \").concat(s,\"]\"))}}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:o}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=Ev.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new rv(nv.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}async renewMediaStreamTrack(e){}pipe(e){if(this.processor===e)return e;if(e._source)throw new rv(nv.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe()}clone(t){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this._encoderConfig;t&&(n=yP(yP({},n),YD(t))),n=Wv(n);const r=ey(8,\"track-video-cloned-\"),o=new e(i?this._mediaStreamTrack.clone():this._mediaStreamTrack,n,Wv(this._scalabilityMode),this._optimizationMode,r,Wv(this._hints));return t&&n&&o.setEncoderConfiguration(n),Qy.debug(\"clone video track from \".concat(this.getTrackId(),\" to \").concat(r,\", clone \").concat(i)),o}async replaceTrack(e,t){if(!(e instanceof MediaStreamTrack))throw new rv(nv.INVALID_PARAMS,\"track should be an instance of MediaStreamTrack\");if(\"video\"!==e.kind)throw new rv(nv.INVALID_PARAMS,\"track should be a video MediaStreamTrack\");await this._updateOriginMediaStreamTrack(e,t,!0),this.updateMediaStreamTrackResolution()}sendSeiData(e){if(Kv((()=>{sA.reportApiInvoke(null,{name:Cv.LOCAL_VIDEO_SEND_SEI_DATA,options:[],tag:Iv.TRACER}).onSuccess(\"\")}),this._mediaStreamTrack.id||this.getTrackId()),!Dy(\"ENABLE_VIDEO_SEI\")||!Dy(\"ENABLE_ENCODED_TRANSFORM\"))return void Qy.warning('To send/receive SEI, please call AgoraRTC.setParameter(\"ENABLE_VIDEO_SEI\", true) before instantiate IAgoraRtcClient');if(e instanceof Uint8Array==0)return new rv(nv.INVALID_PARAMS,\"Invalid argument type, ILocalVideoTrack.sendSeiData() only accept Uint8Array argument.\").throw();const t=this.getRTCRtpTransceiver();if(!t)return void Qy.warning(\"Video track is not published, SEI can not be send\");const i=t.sender.getParameters();if(0===i.codecs.length)return;const n=i.codecs[0].mimeType.toLocaleLowerCase();\"video/h264\"===n?this.safeEmit(\"sei-to-send\",e):Qy.warning(\"SEI is not supported by \".concat(n))}bindProcessorDestinationEvents(){this.processorDestination.on(_P.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(),await Mv(this,$D.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Mv(this,$D.NEED_REPLACE_TRACK,this))}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(_P.ON_TRACK)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(EP.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(EP.REQUEST_CONSTRAINTS)}},CP(kk.prototype,\"play\",[lk,uk],Object.getOwnPropertyDescriptor(kk.prototype,\"play\"),kk.prototype),CP(kk.prototype,\"stop\",[hk],Object.getOwnPropertyDescriptor(kk.prototype,\"stop\"),kk.prototype),CP(kk.prototype,\"setEnabled\",[pk,_k,Ek],Object.getOwnPropertyDescriptor(kk.prototype,\"setEnabled\"),kk.prototype),CP(kk.prototype,\"setMuted\",[mk,fk,Tk],Object.getOwnPropertyDescriptor(kk.prototype,\"setMuted\"),kk.prototype),CP(kk.prototype,\"setEncoderConfiguration\",[Sk,gk],Object.getOwnPropertyDescriptor(kk.prototype,\"setEncoderConfiguration\"),kk.prototype),CP(kk.prototype,\"getStats\",[Rk],Object.getOwnPropertyDescriptor(kk.prototype,\"getStats\"),kk.prototype),CP(kk.prototype,\"setBeautyEffect\",[Ck,Ik],Object.getOwnPropertyDescriptor(kk.prototype,\"setBeautyEffect\"),kk.prototype),CP(kk.prototype,\"getCurrentFrameData\",[vk],Object.getOwnPropertyDescriptor(kk.prototype,\"getCurrentFrameData\"),kk.prototype),CP(kk.prototype,\"getCurrentFrameImage\",[yk],Object.getOwnPropertyDescriptor(kk.prototype,\"getCurrentFrameImage\"),kk.prototype),CP(kk.prototype,\"setBitrateLimit\",[Ak],Object.getOwnPropertyDescriptor(kk.prototype,\"setBitrateLimit\"),kk.prototype),CP(kk.prototype,\"setOptimizationMode\",[bk],Object.getOwnPropertyDescriptor(kk.prototype,\"setOptimizationMode\"),kk.prototype),CP(kk.prototype,\"setScalabiltyMode\",[wk],Object.getOwnPropertyDescriptor(kk.prototype,\"setScalabiltyMode\"),kk.prototype),CP(kk.prototype,\"updateMediaStreamTrackResolution\",[Ok],Object.getOwnPropertyDescriptor(kk.prototype,\"updateMediaStreamTrackResolution\"),kk.prototype),CP(kk.prototype,\"pipe\",[Nk],Object.getOwnPropertyDescriptor(kk.prototype,\"pipe\"),kk.prototype),CP(kk.prototype,\"unpipe\",[Dk],Object.getOwnPropertyDescriptor(kk.prototype,\"unpipe\"),kk.prototype),CP(kk.prototype,\"close\",[Pk],Object.getOwnPropertyDescriptor(kk.prototype,\"close\"),kk.prototype),CP(kk.prototype,\"replaceTrack\",[Lk],Object.getOwnPropertyDescriptor(kk.prototype,\"replaceTrack\"),kk.prototype),kk),Kk=(Mk=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),Uk=tL(),xk=py(\"CameraVideoTrack\",\"_enabledMutex\"),Vk=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),Fk=tL(),Bk=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),jk=tL(),Gk=oA({argsMap:e=>[e.getTrackId()]}),Wk=class e extends Hk{get __className__(){return\"CameraVideoTrack\"}constructor(e,t,i,n,r,o){super(e,YD(t.encoderConfig),n,r,o),IP(this,\"_config\",void 0),IP(this,\"_originalConstraints\",void 0),IP(this,\"_constraints\",void 0),IP(this,\"_enabled\",!0),IP(this,\"_deviceName\",\"default\"),IP(this,\"tryResumeVideoForIOS15_16WeChat\",(async()=>{(HI()||KI())&&!function(){const e=AI();if(e.os!==RI.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=2}()&&zI()&&this._enabled&&!this._isClosed&&(Qy.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS 15 device on WeChat.\")),await this.renewMediaStreamTrack())})),this._config=t,this._originalConstraints=i,this._constraints=i,this._deviceName=e.label,this._encoderConfig=YD(this._config.encoderConfig),NP.on(VD.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),NP.on(VD.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),this.bindProcessorContextEvents()}async setDevice(e){return\"string\"==typeof e?this._setDeviceById(e):e.deviceId?this._setDeviceById(e.deviceId):e.facingMode?this._setDeviceByFacingModel(e.facingMode):void 0}async _setDeviceById(e){if(Qy.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e)),this._enabled)try{const t=await zP.getDeviceById(e),i={};i.video=yP({},this._constraints),i.video.deviceId={exact:e},i.video.facingMode=void 0,this._originMediaStreamTrack.stop();let n=null;try{n=await HP(i,this.getTrackId())}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),e.toString()),n=await HP({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),e}await this._updateOriginMediaStreamTrack(n.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution(),this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}else try{const t=await zP.getDeviceById(e);this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] setDevice success\"))}async _setDeviceByFacingModel(e){Qy.info(\"[\".concat(this.getTrackId(),\"] set facingMode \").concat(e));const t={video:yP(yP({},this._constraints),{},{deviceId:void 0,facingMode:{exact:e}})};if(this._enabled){this._originMediaStreamTrack.stop();let e=null;try{e=await HP(t,this.getTrackId())}catch(t){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel failed\"),t.toString()),e=await HP({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution()}this._deviceName=\"\",this._config.facingMode=e,this._config.cameraId=void 0,this._constraints=yP({},t.video),Qy.info(\"[\".concat(this.getTrackId(),\"] setDeviceByFacingModel success\"))}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(Qy.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),e){try{if(this.isExternalTrack)this._originMediaStreamTrack.enabled=!0;else{const e=await HP({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1)}await Mv(this,$D.NEED_ENABLE_TRACK,this)}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled true error\"),e.toString()),e}this.updateMediaStreamTrackResolution(),Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),t||(this._enabled=!0)}else{this.isExternalTrack?this._originMediaStreamTrack.enabled=!1:(this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop()),t||(this._enabled=!1);try{await Mv(this,$D.NEED_DISABLE_TRACK,this)}catch(e){throw Qy.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),e.toString()),e}Qy.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\"))}}async setEncoderConfiguration(e,t){if(!this._enabled)throw new rv(nv.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");e=YD(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate||e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate||e.bitrateMin);const i=Gv(this._config);i.encoderConfig=e;const n=dL(i);(PI()||MI()||qI())&&(n.deviceId=void 0),Qy.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(n));try{await this._originMediaStreamTrack.applyConstraints(n),this.updateMediaStreamTrackResolution()}catch(e){const t=new rv(nv.UNEXPECTED_ERROR,e.toString());throw Qy.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),t}this._config=i,this._constraints=n,this._originalConstraints=n,this._encoderConfig=e,-1===this._hints.indexOf(eP.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await Mv(this,$D.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw(Qy)}}_getDefaultPlayerConfig(){return{mirror:!0,fit:\"cover\"}}onTrackEnded(){if((MI()||qI())&&this._enabled&&!this._isClosed&&NP.duringInterruption){const e=async()=>{NP.off(VD.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(Qy.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS device.\")),await this.setEnabled(!1),await this.setEnabled(!0))};NP.on(VD.IOS_INTERRUPTION_END,e)}else Qy.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),this.safeEmit(oP.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=zP.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId={exact:i}),this._enabled){const e=await HP({video:t},this.getTrackId());this._constraints=t,await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!0),this.updateMediaStreamTrackResolution()}}close(){super.close(),NP.off(VD.IOS_15_16_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat),NP.off(VD.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15_16WeChat)}clone(t){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this._encoderConfig;t&&(n=yP(yP({},n),YD(t))),n=Wv(n);const r=ey(8,\"track-cam-cloned-\"),o=new e(i?this._mediaStreamTrack.clone():this._mediaStreamTrack,Wv(yP(yP({},this._config),{},{encoderConfig:n})),Wv(this._constraints),Wv(this._scalabilityMode),this._optimizationMode,r);return t&&n&&o.setEncoderConfiguration(n),Qy.debug(\"clone track from \".concat(this.getTrackId(),\" to \").concat(r,\", clone \").concat(i)),o}bindProcessorContextEvents(){this.processorContext.on(EP.REQUEST_UPDATE_CONSTRAINTS,(async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}})),this.processorContext.on(EP.REQUEST_CONSTRAINTS,(async e=>{e(this._originMediaStreamTrack.getSettings())}))}},CP(Wk.prototype,\"setDevice\",[Mk,Uk],Object.getOwnPropertyDescriptor(Wk.prototype,\"setDevice\"),Wk.prototype),CP(Wk.prototype,\"setEnabled\",[xk,Vk,Fk],Object.getOwnPropertyDescriptor(Wk.prototype,\"setEnabled\"),Wk.prototype),CP(Wk.prototype,\"setEncoderConfiguration\",[Bk,jk],Object.getOwnPropertyDescriptor(Wk.prototype,\"setEncoderConfiguration\"),Wk.prototype),CP(Wk.prototype,\"close\",[Gk],Object.getOwnPropertyDescriptor(Wk.prototype,\"close\"),Wk.prototype),Wk);function Yk(e,t,i,n){i.optimizationMode&&(n&&n.width&&n.height?(i.encoderConfig=yP(yP({},n),{},{bitrateMin:n.bitrateMin,bitrateMax:n.bitrateMax}),\"motion\"!==i.optimizationMode&&\"detail\"!==i.optimizationMode||(t.contentHint=i.optimizationMode,t.contentHint===i.optimizationMode?Qy.debug(\"[\".concat(e,\"] set content hint to\"),i.optimizationMode):Qy.debug(\"[\".concat(e,\"] set content hint failed\")))):Qy.warning(\"[\".concat(e,\"] can not apply optimization mode bitrate config, no encoderConfig\")))}var qk,zk,Jk,Xk,Qk,Zk,$k,eM,tM,iM,nM,rM;class oM extends AP{getUserId(){return this._userId}constructor(e,t,i,n){super(e,\"track-\".concat(e.kind,\"-\").concat(t,\"-\").concat(n.clientId,\"_\").concat(ey(5,\"\"))),IP(this,\"_userId\",void 0),IP(this,\"_uintId\",void 0),IP(this,\"_isDestroyed\",!1),IP(this,\"store\",void 0),IP(this,\"processor\",void 0),IP(this,\"processorContext\",void 0),this._userId=t,this._uintId=i,this.store=n}_updateOriginMediaStreamTrack(e){this._originMediaStreamTrack=e,this._mediaStreamTrack=e,this._updatePlayerSource(),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}_destroy(){this._isDestroyed=!0,Qy.info(\"[\".concat(this.getTrackId(),\"] is destroyed\")),this.stop(),super.close()}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}let sM=(qk=oA({argsMap:(e,t,i)=>[e.getTrackId(),\"string\"==typeof t?t:t instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\",i]}),zk=oA({argsMap:e=>[e.getTrackId()]}),Jk=oA({argsMap:(e,t)=>[e.getTrackId(),t.name]}),Xk=oA({argsMap:e=>[e.getTrackId()]}),CP((Qk=class extends oM{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==TP.PLAYING)}get __className__(){return\"RemoteVideoTrack\"}constructor(e,t,i,n){super(e,t,i,n),IP(this,\"_videoVisibleTimer\",null),IP(this,\"_previousVideoVisibleStatus\",void 0),IP(this,\"_clearPreviousVideoVisibleStatus\",(()=>this._previousVideoVisibleStatus=void 0)),IP(this,\"trackMediaType\",aP.VIDEO),IP(this,\"_videoWidth\",void 0),IP(this,\"_videoHeight\",void 0),IP(this,\"_player\",void 0),IP(this,\"processorDestination\",void 0),IP(this,\"processorContext\",void 0),this.updateMediaStreamTrackResolution(),this.processorContext=new nL(this.getTrackId(),\"remote\"),this.processorDestination=new iL(this.processorContext),this.bindProcessorDestinationEvents()}getStats(){return Kv((()=>{Qy.warning(\"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead\")}),\"remoteVideoTrackGetStatsWarning\"),Uv(this,$D.GET_STATS)||yP({},pP)}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(Qy.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),e=document.body)}Qy.debug(\"[\".concat(this.getTrackId(),\"] start video playback in \").concat(e instanceof HTMLVideoElement?\"HTMLVideoElement\":\"HTMLElement\"),JSON.stringify(t));const i=yP(yP({fit:\"cover\"},t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(e instanceof HTMLVideoElement?this._player=new ak(i):this._player=new dk(i),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.store.subscribe(this.getUserId(),\"video\",void 0,void 0,Date.now()),this.safeEmit(sP.FIRST_FRAME_DECODED)},this._player.onVideoStateChanged=e=>{this.safeEmit(sP.VIDEO_STATE_CHANGED,e)}),this._player.play(this.store.sessionId||void 0),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval((()=>{try{const e=this.getVideoElementVisibleStatus();this.safeEmit(sP.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}}),Dy(\"CHECK_VIDEO_VISIBLE_INTERVAL\"))}stop(){this._player&&(this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,Qy.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")))}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}updateMediaStreamTrackResolution(){cL(this._originMediaStreamTrack).then((e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t})).catch(iy)}_updatePlayerSource(){Qy.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),n={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:r,slot:o}=n;if(this.isPlaying&&r instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=Ev.checkOneElementVisible(r),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new rv(nv.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}pipe(e){if(this.processor===e)return e;if(e._source)throw new rv(nv.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(_P.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource()):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(_P.ON_TRACK)}_destroy(){super._destroy(),this.unbindProcessorDestinationEvents()}_onSei(e){this.emit(rP.SEI_RECEIVED,e)}}).prototype,\"play\",[qk],Object.getOwnPropertyDescriptor(Qk.prototype,\"play\"),Qk.prototype),CP(Qk.prototype,\"stop\",[zk],Object.getOwnPropertyDescriptor(Qk.prototype,\"stop\"),Qk.prototype),CP(Qk.prototype,\"pipe\",[Jk],Object.getOwnPropertyDescriptor(Qk.prototype,\"pipe\"),Qk.prototype),CP(Qk.prototype,\"unpipe\",[Xk],Object.getOwnPropertyDescriptor(Qk.prototype,\"unpipe\"),Qk.prototype),Qk),aM=(Zk=oA({argsMap:(e,t)=>[e.getTrackId(),t],throttleTime:300}),$k=oA({argsMap:(e,t)=>[e.getTrackId(),t]}),eM=oA({argsMap:e=>[e.getTrackId()]}),tM=oA({argsMap:e=>[e.getTrackId()]}),iM=oA({argsMap:(e,t)=>[e.getTrackId(),t.name]}),nM=oA({argsMap:e=>[e.getTrackId()]}),CP((rM=class extends oM{get isPlaying(){return this._useAudioElement?eL.isPlaying(this.getTrackId()):this._source.isPlayed}get __className__(){return\"RemoteAudioTrack\"}constructor(e,t,i,n){super(e,t,i,n),IP(this,\"trackMediaType\",aP.AUDIO),IP(this,\"_source\",void 0),IP(this,\"_useAudioElement\",!0),IP(this,\"_volume\",100),IP(this,\"processorContext\",void 0),IP(this,\"processorDestination\",void 0),IP(this,\"_played\",!1),IP(this,\"_bypassWebAudio\",!1),Dy(\"DISABLE_WEBAUDIO\")?(this._source=new sL,this._bypassWebAudio=!0,this._useAudioElement=!0):(this._source=new xP(e,!0),Dy(\"REMOTE_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1)),this._source.once(cP.RECEIVE_TRACK_BUFFER,(()=>{this.safeEmit(sP.FIRST_FRAME_DECODED)})),this.processorContext=new oL(this._source.context,this.getTrackId(),\"remote\"),this.processorDestination=new rL(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(cP.UPDATE_SOURCE,(()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})}))}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(cP.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(cP.ON_AUDIO_BUFFER),this._source.on(cP.ON_AUDIO_BUFFER,(t=>e(t)))}setVolume(e){this._volume=e,this._useAudioElement?eL.setVolume(this.getTrackId(),e):this._source.setVolume(e/100)}async setPlaybackDevice(e){if(!this._useAudioElement||!UD())throw new rv(nv.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");await eL.setSinkID(this.getTrackId(),e)}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}getStats(){return Kv((()=>{Qy.warning(\"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead\")}),\"remoteAudioTrackGetStatsWarning\"),Uv(this,$D.GET_STATS)||yP({},uP)}play(){Qy.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),this._played=!0,this._useAudioElement?(Qy.debug(\"[\".concat(this.getTrackId(),\"] use audio element to play\")),eL.play(this._mediaStreamTrack,this.getTrackId(),this._volume,this.store.sessionId||void 0)):this._source.play()}stop(){Qy.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),this._played=!1,this._useAudioElement?eL.stop(this.getTrackId()):this._source.stop()}_destroy(){super._destroy(),this._played=!1,this.unbindProcessorDestinationEvents(),this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];Qy.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&eL.updateTrack(this.getTrackId(),this._mediaStreamTrack)}pipe(e){if(this._bypassWebAudio)throw new rv(nv.NOT_SUPPORTED,\"can not pipe extension when WebAudio disabled\");if(this.processor===e)return e;if(e._source)throw new rv(nv.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(this._bypassWebAudio)throw new rv(nv.NOT_SUPPORTED,\"can not unpipe extension when WebAudio disabled\");if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(_P.ON_TRACK,(async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())})),this.processorDestination.on(_P.ON_NODE,(e=>{this._source.processedNode=e;const t=!e;this._useAudioElement!==t&&(this._played?(this.stop(),this._useAudioElement=t,this.play()):this._useAudioElement=t)}))}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(_P.ON_TRACK),this.processorDestination.removeAllListeners(_P.ON_NODE)}}).prototype,\"setVolume\",[Zk],Object.getOwnPropertyDescriptor(rM.prototype,\"setVolume\"),rM.prototype),CP(rM.prototype,\"setPlaybackDevice\",[$k],Object.getOwnPropertyDescriptor(rM.prototype,\"setPlaybackDevice\"),rM.prototype),CP(rM.prototype,\"play\",[eM],Object.getOwnPropertyDescriptor(rM.prototype,\"play\"),rM.prototype),CP(rM.prototype,\"stop\",[tM],Object.getOwnPropertyDescriptor(rM.prototype,\"stop\"),rM.prototype),CP(rM.prototype,\"pipe\",[iM],Object.getOwnPropertyDescriptor(rM.prototype,\"pipe\"),rM.prototype),CP(rM.prototype,\"unpipe\",[nM],Object.getOwnPropertyDescriptor(rM.prototype,\"unpipe\"),rM.prototype),rM);const cM=new class extends Sv{get visibility(){return document.visibilityState}get lastHiddenTime(){return this._lastHiddenTime}get lastVisibleTime(){return this._lastVisibleTime}constructor(){super(),IP(this,\"_lastHiddenTime\",0),IP(this,\"_lastVisibleTime\",0),document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===document.visibilityState?this._lastHiddenTime=performance.now():this._lastVisibleTime=performance.now(),Qy.debug(\"document visibility went \".concat(document.visibilityState)),this.emit(\"VISIBILITY_CHANGE\",document.visibilityState)}))}};class dM extends Sv{constructor(e,t){super(),IP(this,\"trackMediaType\",aP.DATA),IP(this,\"_version\",1),IP(this,\"_type\",3),IP(this,\"_config\",void 0),IP(this,\"_originDataChannel\",void 0),IP(this,\"_dataStreamPacketHeader\",new ArrayBuffer(4)),IP(this,\"_dataStreamPacketHandler\",{serialize:e=>e,deserialize:e=>e}),IP(this,\"_datachannelEventMap\",new Map),this._config=e,t&&(this._originDataChannel=t,this._bandDataChannelEvents(t)),this._initPacketHeader()}useDataStream(e){this._dataStreamPacketHandler=e}get id(){return this._config.id}get ordered(){return this._config.ordered}get maxRetransmits(){return Dy(\"DATASTREAM_MAX_RETRANSMITS\")}get metadata(){return this._config.metadata}get readyState(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.readyState)&&void 0!==e?e:\"connecting\"}get _originDataChannelId(){var e,t;return null!==(e=null===(t=this._originDataChannel)||void 0===t?void 0:t.id)&&void 0!==e?e:null}getChannelId(){return this.id}getConfig(){return this._config}_close(){this._originDataChannel&&(this._unbindDataChannelEvents(this._originDataChannel),this._originDataChannel=void 0)}async _waitTillOpen(){return new Gh(((e,t)=>{if(this._originDataChannel){\"open\"===this._originDataChannel.readyState&&e();const i=setTimeout((()=>{var e;t(new rv(nv.DATACHANNEL_CONNECTION_TIMEOUT,\"Cannot create datachannel, id: \".concat(null===(e=this._originDataChannel)||void 0===e?void 0:e.id)))}),1e4);this._originDataChannel.onopen=()=>{clearTimeout(i),this._originDataChannel&&this._bandDataChannelEvents(this._originDataChannel),e()},this._originDataChannel.onerror=()=>{throw clearTimeout(i),new rv(nv.DATACHANNEL_CONNECTION_TIMEOUT)}}else t(new rv(nv.DATACHANNEL_CONNECTION_TIMEOUT,\"cannot find dataChannel\"))}))}_updateOriginDataChannel(e){this._originDataChannel=e,this._bandDataChannelEvents(e)}_initPacketHeader(){const e=new DataView(this._dataStreamPacketHeader);e.setUint16(0,this._version),e.setUint8(2,this._type),e.setUint8(3,this._config.id)}_bandDataChannelEvents(e){this._unbindDataChannelEvents(e),[RP.OPEN,RP.CLOSE,RP.ERROR].forEach((t=>{const i=()=>{this.emit(t)};this._datachannelEventMap.set(t,i),e.addEventListener(t,i)}))}_unbindDataChannelEvents(e){Array.from(this._datachannelEventMap.entries()).forEach((t=>{let[i,n]=t;e.removeEventListener(i,n)})),this._datachannelEventMap.clear()}}class lM extends dM{constructor(e){super(e),IP(this,\"_messageListener\",void 0),this._messageListener=e=>{if(e.data.byteLength<this._dataStreamPacketHeader.byteLength)throw Error(\"invalid byteLength: the byte length must exceed \"+this._dataStreamPacketHeader.byteLength);const t=e.data.slice(0,this._dataStreamPacketHeader.byteLength),i=new DataView(t).getUint8(3);if(i!==this.id)return void(Dy(\"SHOW_DATASTREAM2_LOG\")&&Qy.debug(\"invalid datachannel id: \".concat(i,\" !== \").concat(this.id)));let n=e.data.slice(this._dataStreamPacketHeader.byteLength);n=this._dataStreamPacketHandler.deserialize(n),this.emit(RP.MESSAGE,n)}}_updateOriginDataChannel(e){super._updateOriginDataChannel(e),this._bandRemoteDataChannelEvents()}_close(){this._originDataChannel&&(this._originDataChannel.removeEventListener(\"message\",this._messageListener),super._close())}_bandRemoteDataChannelEvents(){this._originDataChannel&&this._originDataChannel.addEventListener(\"message\",this._messageListener)}}class uM extends dM{send(e){if(this._originDataChannel){let t=e;t=this._dataStreamPacketHandler.serialize(e);const i=new Uint8Array(this._dataStreamPacketHeader.byteLength+t.byteLength);i.set(new Uint8Array(this._dataStreamPacketHeader),0),i.set(new Uint8Array(t),this._dataStreamPacketHeader.byteLength),this._originDataChannel.send(i.buffer)}}}function hM(){const e=new Blob([atob(\"ZnVuY3Rpb24gZShlLHQsbil7bGV0IHI9bmV3IFVpbnQ4QXJyYXkoZSx0LG4pLGE9W10sbz0wO2Zvcig7YS5sZW5ndGg8bjspbyszPG4mJjA9PT1yW29dJiYwPT09cltvKzFdJiYzPT09cltvKzJdJiYoMD09PXJbbyszXXx8MT09PXJbbyszXXx8Mj09PXJbbyszXXx8Mz09PXJbbyszXSk/KGEucHVzaChyW29dLHJbbysxXSxyW28rM10pLG8rPTQpOihhLnB1c2gocltvXSksbysrKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYSl9ZnVuY3Rpb24gdChlLHQpe2NvbnN0IG49ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmxlbmd0aDtsZXQgbj1bXSxyPTA7Zm9yKDtyPHQ7KXIrMjx0JiYwPT09ZVtyXSYmMD09PWVbcisxXSYmKDA9PT1lW3IrMl18fDE9PT1lW3IrMl18fDI9PT1lW3IrMl18fDM9PT1lW3IrMl0pPyhuLnB1c2goZVtyXSxlW3IrMV0sMyxlW3IrMl0pLHIrPTMpOihuLnB1c2goZVtyXSkscisrKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkobil9KHQpLHI9bi5sZW5ndGgsYT1NYXRoLmZsb29yKHIvMjU1KSxvPXIlMjU1LHM9bmV3IFVpbnQ4QXJyYXkoNithKzErcitlLmJ5dGVMZW5ndGgpO3NbMF09MCxzWzFdPTAsc1syXT0wLHNbM109MSxzWzRdPTYsc1s1XT0xMDE7bGV0IGk9MDtmb3IoO2k8YTspc1s2K2ldPTI1NSxpKys7cmV0dXJuIHNbNitpXT1vLGkrKyxzLnNldChuLDYraSkscy5zZXQobmV3IFVpbnQ4QXJyYXkoZSksNitpK3IpLHMuYnVmZmVyfW5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZigiU2FmYXJpIik+LTEmJi0xPT09bmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJDaHJvbWUiKSYmKHNlbGYub25ydGN0cmFuc2Zvcm09bj0+e2NvbnN0IHI9bi50cmFuc2Zvcm1lcjtsZXQgYT1bXTtyLm9wdGlvbnMucG9ydC5vbm1lc3NhZ2U9ZT0+e2UuZGF0YS5zZWkmJmEucHVzaChlLmRhdGEuc2VpKX0sc2VsZi5wb3N0TWVzc2FnZSgic3RhcnRlZCIpO2NvbnN0IG89ci5yZWFkYWJsZS5nZXRSZWFkZXIoKSxzPXIud3JpdGFibGUuZ2V0V3JpdGVyKCk7InJ4Ij09PXIub3B0aW9ucy5uYW1lP2Z1bmN0aW9uIHQobil7by5yZWFkKCkudGhlbigocj0+e2lmKCFyLmRvbmUpe2lmKHIudmFsdWUgaW5zdGFuY2VvZiBSVENFbmNvZGVkVmlkZW9GcmFtZSl7Y29uc3QgdD1mdW5jdGlvbih0KXtjb25zdCBuPW5ldyBEYXRhVmlldyh0LmRhdGEpO2xldCByPTA7Zm9yKDtyKzQ8dC5kYXRhLmJ5dGVMZW5ndGg7KXtpZigwPT09bi5nZXRVaW50OChyKzApJiYwPT09bi5nZXRVaW50OChyKzEpJiYwPT09bi5nZXRVaW50OChyKzIpJiYxPT09bi5nZXRVaW50OChyKzMpJiY2PT09bi5nZXRVaW50OChyKzQpKXtsZXQgYT1yKzYsbz0wLHM9MDtmb3IoOzI1NT09PShzPW4uZ2V0VWludDgoYSsrKSk7KW8rPTI1NTtvKz1zO2NvbnN0IGk9ZSh0LmRhdGEsYSxvKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaSl9cisrfXJldHVybiBudWxsfShyLnZhbHVlKTt0JiZuLm9wdGlvbnMucG9ydC5wb3N0TWVzc2FnZSh7c2VpOnR9KX1zLndyaXRlKHIudmFsdWUpLG4ub3B0aW9ucy5wb3J0LnBvc3RNZXNzYWdlKHt0cmFuc2Zvcm1lZDohMH0pLHQobil9fSkpfShyKToidHgiPT09ci5vcHRpb25zLm5hbWUmJmZ1bmN0aW9uIGUobil7by5yZWFkKCkudGhlbigocj0+e2lmKCFyLmRvbmUpe2lmKHIudmFsdWUgaW5zdGFuY2VvZiBSVENFbmNvZGVkVmlkZW9GcmFtZSl7Y29uc3QgZT1hLnNoaWZ0KCk7ZSYmKHIudmFsdWUuZGF0YT10KHIudmFsdWUuZGF0YSxlKSl9cy53cml0ZShyLnZhbHVlKSxuLm9wdGlvbnMucG9ydC5wb3N0TWVzc2FnZSh7dHJhbnNmb3JtZWQ6ITB9KSxlKG4pfX0pKX0ocil9LHNlbGYucG9zdE1lc3NhZ2UoInJlZ2lzdGVyZWQiKSk7Cg==\")],{type:\"text/javascript\"});return setTimeout((()=>LD.revokeObjectURL(e)),0),new Worker(LD.createObjectURL(e))}const pM=new Map;const _M=new Map;function EM(e,t,i){let n=new Uint8Array(e,t,i),r=[],o=0;for(;r.length<i;)o+3<i&&0===n[o]&&0===n[o+1]&&3===n[o+2]&&(0===n[o+3]||1===n[o+3]||2===n[o+3]||3===n[o+3])?(r.push(n[o],n[o+1],n[o+3]),o+=4):(r.push(n[o]),o++);return new Uint8Array(r)}const mM=new Map;async function fM(e,t){if(!MD().supportWebRTCEncodedTransform)return void Qy.warning(\"browser not support video encoded transform\");if(mM.has(e))return;if(!e.track)return;const i={track:e.track};if(DI()){if(!e.createEncodedStreams)return void Qy.warning(\"browser not support createEncodedStreams() API\");let r=null;try{r=e.createEncodedStreams()}catch(e){return void Qy.error(\"create video-encoded-streams error\",e&&e.message)}let o=[];t.on(\"sei-to-send\",(e=>{o.push(e)}));const s=new TransformStream({transform(t,r){i.controller||(i.controller=r),e.track&&e.track.id!==i.track.id&&(Qy.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n));const s=o.shift();s&&(t.data=function(e,t){const i=function(e){const t=e.length;let i=[],n=0;for(;n<t;)n+2<t&&0===e[n]&&0===e[n+1]&&(0===e[n+2]||1===e[n+2]||2===e[n+2]||3===e[n+2])?(i.push(e[n],e[n+1],3,e[n+2]),n+=3):(i.push(e[n]),n++);return new Uint8Array(i)}(t),n=i.length,r=Math.floor(n/255),o=n%255,s=new Uint8Array(6+r+1+n+e.byteLength);s[0]=0,s[1]=0,s[2]=0,s[3]=1,s[4]=6,s[5]=101;let a=0;for(;a<r;)s[6+a]=255,a++;return s[6+a]=o,a++,s.set(i,6+a),s.set(new Uint8Array(e),6+a+n),s.buffer}(t.data,s)),r.enqueue(t)}});r.readable.pipeThrough(s).pipeTo(r.writable)}else{if(!PI())return;{if(\"undefined\"==typeof RTCRtpScriptTransform)return void Qy.warning(\"browser not support RTCRtpScriptTransform\");const r=hM(),o=new MessageChannel;await new Gh((e=>r.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const s=new RTCRtpScriptTransform(r,{name:\"tx\",port:o.port2},[o.port2]);e.transform=s,await new Gh((e=>r.onmessage=t=>{\"started\"===t.data&&e(void 0)})),t.on(\"sei-to-send\",(e=>{o.port1.postMessage({sei:e})})),o.port1.onmessage=t=>{var r;t.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==i.track.id&&(Qy.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n))},i.worker=r}}function n(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",n)}const t=mM.get(e);if(t){mM.delete(e);try{var i,r;null===(i=t.controller)||void 0===i||i.terminate(),null===(r=t.worker)||void 0===r||r.terminate()}catch(e){Qy.warning(e&&e.message)}}}mM.set(e,i),e.track.addEventListener(\"ended\",n)}const TM=new Map;!function(){const e=AI();kD.getDisplayMedia=!(!navigator.mediaDevices||!navigator.mediaDevices.getDisplayMedia),kD.getStreamFromExtension=e.name===CI.CHROME&&Number(e.version)>34,kD.supportUnifiedPlan=function(){if(!window.RTCRtpTransceiver)return!1;if(!(\"currentDirection\"in RTCRtpTransceiver.prototype))return!1;const e=new RTCPeerConnection;let t=!1;try{e.addTransceiver(\"audio\"),t=!0}catch(e){}return e.close(),t}(),kD.supportMinBitrate=e.name===CI.CHROME||e.name===CI.EDGE,kD.supportSetRtpSenderParameters=function(){const e=AI();return!!(window.RTCRtpSender&&window.RTCRtpSender.prototype.setParameters&&window.RTCRtpSender.prototype.getParameters)&&(!!QI()||!(!PI()&&!NI())||e.name===CI.FIREFOX&&Number(e.version)>=64)}(),e.name===CI.SAFARI&&(Number(e.version)>=14?kD.supportDualStream=!0:kD.supportDualStream=!1),kD.webAudioMediaStreamDest=function(){const e=AI();return!(e.name===CI.SAFARI&&Number(e.version)<12)}(),kD.supportReplaceTrack=!!window.RTCRtpSender&&\"function\"==typeof RTCRtpSender.prototype.replaceTrack,kD.supportWebGL=\"undefined\"!=typeof WebGLRenderingContext,kD.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack,QI()||(kD.webAudioWithAEC=!0),kD.supportShareAudio=function(){const e=AI();return(e.os===RI.WIN_10||e.os===RI.WIN_81||e.os===RI.WIN_7||e.os===RI.LINUX||e.os===RI.MAC_OS||e.os===RI.CHROMIUM_OS)&&e.name===CI.CHROME&&Number(e.version)>=74}(),kD.supportDataChannel=!!(UI(76)||function(e){const t=AI();return!(t.name!==CI.FIREFOX||!t.osVersion)&&Number(t.version)>=e}(68)||FI(14)),kD.supportPCSetConfiguration=function(){const e=window.RTCPeerConnection;return!kI()&&!!e&&e.prototype.setConfiguration instanceof Function}(),kD.supportWebRTCEncodedTransform=function(){const e=AI();return\"Chrome\"===e.name&&Number(e.version)>=86||\"Safari\"===e.name&&Number(e.version)>=15}(),kD.supportWebRTCInsertableStream=function(){const e=AI();return(e.name===CI.CHROME||e.name===CI.EDGE)&&Number(e.version)>=94&&\"MediaStreamTrackGenerator\"in window&&\"MediaStreamTrackProcessor\"in window}(),kD.supportRequestVideoFrameCallback=\"requestVideoFrameCallback\"in HTMLVideoElement.prototype,kD.supportWebCrypto=\"undefined\"!=typeof window&&void 0!==window.crypto&&void 0!==window.crypto.subtle,jv((()=>{kD.supportDualStreamEncoding=function(){const e=AI();return!!Dy(\"DISABLE_WEBAUDIO\")||(\"Safari\"===e.name&&Number(e.version)>=14||!!(\"Chrome\"===e.name&&/Windows/i.test(e.os||\"\")&&Number(e.version)>=100&&Dy(\"CHROME_DUAL_STREAM_USE_ENCODING\")))}(),Qy.info(\"browser compatibility\",JSON.stringify(kD),JSON.stringify(e))}))}();class SM extends Sv{constructor(e,t){super(),og(this,\"signal\",void 0),og(this,\"token\",void 0),og(this,\"tokenTimeout\",void 0),og(this,\"tokenInterval\",void 0),og(this,\"_sequence\",0),og(this,\"userMap\",new Map),og(this,\"encoder\",new TextEncoder),this.signal=e,this.token=t;const i=()=>{this.signal.connectionState===hb.CONNECTED&&this.check(),0===this.userMap.size?this.tokenInterval=window.setTimeout(i,1e3):this.tokenInterval=window.setTimeout(i,3*Dy(\"P2P_TOKEN_INTERVAL\"))};i()}async send(e,t,i,n,r){var o,s,a;if(0===this.userMap.size)return;const c=Array.from(Qw(o=this.userMap).call(o))[0].token;\"string\"!=typeof t&&(t=JSON.stringify(t)),n=null!==(s=n)&&void 0!==s?s:ey(6,\"\"),r=null!==(a=r)&&void 0!==a?a:this._sequence++;const d={_id:n,_type:e,_seq:r,_message:t,token:\"\".concat(this.token,\"_\").concat(c)};Dy(\"SHOW_P2P_LOG\")&&Qy.debug(\"send message\",d,\"noNeedResponse : \".concat(i));this.splitMessage(JSON.stringify(d)).forEach((e=>{this.signal.request(_b.DATA_STREAM,{payload:qv(this.encoder.encode(e))})}));const l=new Gh(((t,r)=>{const o=window.setTimeout((()=>{this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(\"res-@\".concat(n),c),this.off(aw.ABORT,a),Qy.debug(\"[external-signal] request timeout, type: \".concat(e,\", requestId: \").concat(n)),0===this.userMap.size?r(new rv(nv.INVALID_REMOTE_USER)):r(new rv(nv.TIMEOUT))}),Dy(\"EXTERNAL_SIGNAL_REQUEST_TIMEOUT\")),s=()=>{o&&window.clearTimeout(o),this.off(aw.ABORT,a),i&&t()},a=()=>{o&&window.clearTimeout(o),this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(\"res-@\".concat(n),c),r(new rv(nv.EXTERNAL_SIGNAL_ABORT,\"type: \".concat(e,\", requestId: \").concat(n)))};this.once(aw.ABORT,a),this.once(\"res-@\".concat(n,\"_ack\"),s);const c=(i,c)=>{l=!0,o&&window.clearTimeout(o),this.off(\"res-@\".concat(n,\"_ack\"),s),this.off(aw.ABORT,a),\"success\"===i?t(c):r(new rv(nv.P2P_MESSAGE_FAILED,\"request \".concat(e,\" failed, requestId: \").concat(n)))};let l=!1;i||(this.once(\"res-@\".concat(n),c),$v(Dy(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{l||Qy.warning(\"external_signal request timeout, type: \".concat(e,\", requestId: \").concat(n,\", \").concat(d))})))}));try{return await l}catch(o){if(o.code===nv.TIMEOUT)return await this.send(e,t,i,n,r);throw o}}onMessage(e){var t;const{_uid:i}=e;let n,r=this.userMap.get(i);if(r)n=r.splitMessageMap;else{if(this.userMap.size>0||!(\"_type\"in e)||e._type!==sw.CHECK)return;const{token:t}=e;n=new Map,r={uid:i,isStart:!0,token:t,splitMessageMap:n,nextExpectedSequenceNumber:0,receivedMessagesMap:new Map},this.userMap.set(i,r),this.signal.emit(mb.ON_USER_ONLINE,{uid:i}),this.handleUserOnline()}if(\"id\"in e&&\"total\"in e){var o;const{id:t,total:r}=e,s=null!==(o=n.get(t))&&void 0!==o?o:[];if(s.push(e),n.has(t)||n.set(t,s),s.length!==r)return;{const r=aE(s).call(s,((e,t)=>e.index-t.index)).map((e=>e.payload)).join(\"\");n.delete(t),(e=JSON.parse(r))._uid=i}}const{_type:s,token:a}=e;if(Dn(t=[sw.ACK,sw.CHECK]).call(t,s))return s===sw.CHECK&&this.handleCheckToken(r,a),void this.receiveMessage(e);a===\"\".concat(r.token,\"_\").concat(this.token)?this.handleReceivedMessage(e):Qy.debug('Receive unexpected message\", '.concat(a,\", cur_token: \").concat(r.token,\"_\").concat(this.token),e)}check(){const e={_id:ey(6,\"\"),token:this.token,_type:sw.CHECK};Dy(\"SHOW_P2P_LOG\")&&Qy.debug(\"send message\",e),this.signal.request(_b.DATA_STREAM,{payload:qv(this.encoder.encode(JSON.stringify(e)))})}ack(e){const t={_id:e,_type:sw.ACK,token:this.token};Dy(\"SHOW_P2P_LOG\")&&Qy.debug(\"send message\",t),this.signal.request(_b.DATA_STREAM,{payload:qv(this.encoder.encode(JSON.stringify(t)))})}response(e,t,i){this.send(sw.RESPONSE,JSON.stringify({success:!i,message:t}),!0,e)}handleReceivedMessage(e){const t=()=>{this.userMap.forEach((e=>{const{receivedMessagesMap:t,nextExpectedSequenceNumber:i}=e;for(;t.has(i);){const n=t.get(i);t.delete(i),this.receiveMessage(n),e.nextExpectedSequenceNumber++}}))};if(!e)return void t();const{_uid:i,_seq:n}=e,r=this.userMap.get(i),{receivedMessagesMap:o,isStart:s,nextExpectedSequenceNumber:a}=r;if(n<a)return this.ack(e._id),void Qy.debug(\"[external-signal] receive old message, seq: \".concat(n,\", \").concat(e._message));o.set(n,e),s&&n===a&&(this.receiveMessage(e),o.delete(a),r.nextExpectedSequenceNumber++,t())}receiveMessage(e){const{_id:t,_type:i,_message:n,_uid:r}=e;if(Dy(\"SHOW_P2P_LOG\")&&Qy.debug(\"receive message\",e),t){let o;switch(e._type!==sw.ACK&&(n&&(o=JSON.parse(n)),this.ack(e._id)),e._type){case sw.CANDIDATE:case sw.CONTROL:this.signal.emit(i,o,r);break;case sw.PUBLISH:case sw.UNPUBLISH:case sw.RESTART_ICE:case sw.CALL:o.uid=r,kv(this.signal,i,o).then((t=>{this.response(e._id,t)})).catch((()=>{this.response(e._id,void 0,!0)}));break;case sw.ACK:this.getListeners(\"res-@\".concat(t,\"_ack\")).length>0&&this.emit(\"res-@\".concat(t,\"_ack\"));break;case sw.RESPONSE:{const{success:e,message:i}=o;this.emit(\"res-@\".concat(t),e?\"success\":\"failed\",i);break}}}}splitMessage(e){if(e.length<SM.MAX_MESSAGE_SIZE)return[e];const t=[],{remoteToken:i}=JSON.parse(e),n=ey(6,\"\");let r=0,o=800;const s=Math.ceil(e.length/o);for(;e.length>0;){r++;const a={id:n,index:r,total:s,payload:e.slice(0,o),token:\"\".concat(this.token,\"_\").concat(i)};JSON.stringify(a).length>SM.MAX_MESSAGE_SIZE?o-=50:(t.push(a),e=e.slice(o))}return t.map((e=>JSON.stringify(e)))}handleCheckToken(e,t){return e.token!==t?(Qy.debug(\"token changed, from \".concat(e.token,\" to \").concat(t)),this.reset(e.uid,t),!1):(this.tokenTimeout&&(window.clearTimeout(this.tokenTimeout),this.tokenTimeout=void 0),this.tokenTimeout=window.setTimeout((()=>{Qy.debug(\"token timeout, \".concat(t)),this.reset(e.uid)}),Dy(\"MAX_P2P_TIMEOUT\")),!0)}async handleUserOnline(){const e=await kv(this.signal,sw.CALL,void 0),t=await this.send(sw.CALL,e);this.signal.emit(pb.P2P_CONNECTION,t,!0)}async reset(e,t){const i=this.userMap.get(e);i&&(this.emit(aw.ABORT),this.signal.emit(mb.ON_USER_OFFLINE,{uid:i.uid,reason:dw.P2P_TOKEN_CHANGED}),this._sequence=0,this.userMap.clear(),t||(Qy.debug(\"change local token from \".concat(t,\" to \").concat(t)),this.token=ey(6,\"\")))}clear(){this._sequence=0,this.userMap.clear(),this.tokenInterval&&window.clearTimeout(this.tokenInterval),this.tokenInterval=void 0,this.tokenTimeout&&window.clearTimeout(this.tokenTimeout),this.tokenTimeout=void 0,this.emit(aw.ABORT)}}og(SM,\"MAX_SIZE\",1),og(SM,\"MAX_MESSAGE_SIZE\",1024);class gM extends Sv{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===hb.CONNECTED?this.emit(pb.WS_CONNECTED):e===hb.RECONNECTING?this.emit(pb.WS_RECONNECTING,this._websocketReconnectReason):e===hb.CLOSED&&this.emit(pb.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket&&this.websocket.url||null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),og(this,\"_disconnectedReason\",void 0),og(this,\"_websocketReconnectReason\",void 0),og(this,\"_connectionState\",hb.CLOSED),og(this,\"reconnectToken\",void 0),og(this,\"p2pToken\",void 0),og(this,\"websocket\",void 0),og(this,\"openConnectionTime\",void 0),og(this,\"clientId\",void 0),og(this,\"lastMsgTime\",Date.now()),og(this,\"uploadCache\",[]),og(this,\"uploadCacheInterval\",void 0),og(this,\"rttRolling\",new fy(5)),og(this,\"pingpongTimer\",void 0),og(this,\"pingpongTimeoutCount\",0),og(this,\"joinResponse\",void 0),og(this,\"multiIpOption\",void 0),og(this,\"initError\",void 0),og(this,\"spec\",void 0),og(this,\"store\",void 0),og(this,\"_external_signal\",void 0),og(this,\"onWebsocketMessage\",(e=>{if(e.data instanceof ArrayBuffer)return void this.emit(pb.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){switch(t._type){case mb.ON_DATA_STREAM:return void this.handleDataStream(t._message);case mb.MUTE_AUDIO:case mb.MUTE_VIDEO:case mb.ON_P2P_LOST:case mb.ON_USER_ONLINE:return;case mb.ON_USER_OFFLINE:const{uid:e}=t._message;return Qy.debug(\"[\".concat(this.clientId,\"] user-offline uid: \").concat(e)),void this._external_signal.reset(e)}if(this.emit(t._type,t._message),t._type===mb.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===mb.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(Av.UID_BANNED);break;case 15:this.close(Av.IP_BANNED);break;case 16:this.close(Av.CHANNEL_BANNED)}if(t._type===mb.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case ub.ERR_LICENSE_MISSING:this.close(Av.LICENSE_MISSING);break;case ub.ERR_LICENSE_EXPIRED:this.close(Av.LICENSE_EXPIRED);break;case ub.ERR_LICENSE_MINUTES_EXCEEDED:this.close(Av.LICENSE_MINUTES_EXCEEDED);break;case ub.ERR_LICENSE_PERIOD_INVALID:this.close(Av.LICENSE_PERIOD_INVALID);break;case ub.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(Av.LICENSE_MULTIPLE_SDK_SERVICE);break;case ub.ERR_LICENSE_ILLEGAL:this.close(Av.LICENSE_ILLEGAL);break;default:this.close()}}})),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new Aw(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,Dy(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\"),Dy(\"JOIN_GATEWAY_USE_443PORT_ONLY\"),t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",(()=>{this.connectionState===hb.CONNECTED&&this.reconnect(\"retry\",Dv.OFFLINE)})),this.p2pToken=ey(6,\"\"),this._external_signal=new SM(this,this.p2pToken)}async request(e,t,i,n){const r=ey(6,\"\"),o={_id:r,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new Gh(((e,t)=>{if(this.connectionState===hb.CONNECTED)return e();const i=()=>{this.off(pb.WS_CLOSED,n),e()},n=()=>{this.off(pb.WS_CONNECTED,i),t(new rv(nv.WS_ABORT))};this.once(pb.WS_CONNECTED,i),this.once(pb.WS_CLOSED,n)}));if(this.connectionState!==hb.CONNECTING&&this.connectionState!==hb.RECONNECTING||e===_b.JOIN||e===_b.REJOIN||await a(),this.websocket.sendMessage(o,!0),n)return;const c=new Gh(((i,n)=>{let o=!1;const a=(n,r)=>{o=!0,i({isSuccess:\"success\"===n,message:r||{}}),this.off(pb.WS_CLOSED,c),this.off(pb.WS_RECONNECTING,c),this.emit(pb.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(r),a);const c=()=>{n(new rv(nv.WS_ABORT,\"type: \".concat(e))),this.off(pb.WS_CLOSED,c),this.off(pb.WS_RECONNECTING,c),this.off(\"res-@\".concat(r),a)};this.once(pb.WS_CLOSED,c),this.once(pb.WS_RECONNECTING,c),$v(Dy(\"SIGNAL_REQUEST_TIMEOUT\")).then((()=>{this.websocket.connectionID!==s||o||(Qy.warning(\"[\".concat(this.clientId,\"] ws request timeout, type: \").concat(e)),this.emit(pb.REQUEST_TIMEOUT,e,t))}))}));let d=null;try{d=await c}catch(n){if(this.connectionState===hb.CLOSED||e===_b.LEAVE)throw new rv(nv.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?n.throw():e===_b.JOIN||e===_b.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const l=Number(d.message.error_code||d.message.code),u=pw(l),h=new rv(nv.UNEXPECTED_RESPONSE,\"\".concat(u.desc,\": \").concat(d.message.error_str),{code:l,data:d.message,desc:u.desc});return\"success\"===u.action?d.message:(Qy.warning(\"[\".concat(this.clientId,\"] [\").concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(l,\", message: \").concat(u.desc,\", action: \").concat(u.action)),l===ub.ERR_TOO_MANY_BROADCASTERS?e===_b.JOIN||e===_b.REJOIN?(this.initError=h,this.close(),h.throw()):h.throw():\"failed\"===u.action?h.throw():\"quit\"===u.action?(this.initError=h,this.close(),h.throw()):(l===ub.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,Qy.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),this.reconnect(\"recover\",Dv.MULTI_IP)):this.reconnect(u.action,Dv.SERVER_ERROR),e===_b.JOIN||e===_b.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new Gh((i=>{const n=r=>{(!t||t(r))&&(this.off(e,n),i(r))};this.on(e,n)}))}uploadWRTCStats(e){if(!this.store.sessionId)return void Qy.warn(\"[\".concat(this.clientId,\"] no session id when upload wrtc stats\"));const t={lts:Date.now(),sid:this.store.sessionId,uid:this.store.intUid,stats:e};this.upload(Eb.WRTC_STATS,t)}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=Dy(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval((()=>{if(this.connectionState!==hb.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)}),Dy(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}async sendExtensionMessage(e,t,i){return await this._external_signal.send(e,t,i)}init(e){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new Gh(((t,i)=>{this.once(pb.WS_CONNECTED,(()=>t(this.joinResponse))),this.once(pb.WS_CLOSED,(()=>i(this.initError||new rv(nv.WS_ABORT)))),this.connectionState=hb.CONNECTING,this.websocket.init(e).catch(i)}))}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._external_signal.clear(),this._disconnectedReason=e||Av.LEAVE,this.connectionState=hb.CLOSED,Qy.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close(),this.p2pToken=ey(6,\"\"),this._external_signal.clear(),this._external_signal=new SM(this,this.p2pToken)}async join(){if(!this.joinResponse){this.emit(pb.ABORT_P2P_EXECUTION);const e=await kv(this,pb.REQUEST_JOIN_INFO),t=await this.request(_b.JOIN,e);if(!t)return this.emit(pb.REPORT_JOIN_GATEWAY,nv.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(pb.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=hb.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleDataStream(e){try{var t;const i=Yv(e.payload),n=(new TextDecoder).decode(i),r=JSON.parse(n);\"total\"in r&&\"id\"in r||Dn(t=Object.values(sw)).call(t,r._type)?(r._uid=e.uid,this._external_signal.onMessage(r)):this.emit(mb.ON_DATA_STREAM,e)}catch(t){this.emit(mb.ON_DATA_STREAM,e)}}handleNotification(e){Qy.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e);const t=pw(e.code);if(\"success\"!==t.action){if(\"failed\"!==t.action)return\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(Av.UID_BANNED),void this.close()):void this.reconnect(t.action,Dv.SERVER_ERROR);Qy.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc)}}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=Dy(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(Qy.warning(\"[\".concat(this.clientId,\"] PINGPONG Timeout. Last Socket Message: \").concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>Dy(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",Dv.TIMEOUT):this.request(_b.PING,void 0,!0).then((()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),Dy(\"REPORT_STATS\")&&this.send(_b.PING_BACK,{pingpongElapse:e})})).catch((e=>{}))}handleWebsocketEvents(){this.websocket.on(Tb.RECONNECT_WAITTING_FINISH,(e=>{this.emit(pb.WS_RECONNECT_WAITTING_FINISH,e)})),this.websocket.on(Tb.RECONNECT_CREATE_CONNECTION,(e=>{this.emit(pb.WS_RECONNECT_CREATE_CONNECTION,e)})),this.websocket.on(Tb.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Tb.CLOSED,(()=>{this.connectionState=hb.CLOSED})),this.websocket.on(Tb.FAILED,(()=>{this._disconnectedReason=Av.NETWORK_ERROR,this.connectionState=hb.CLOSED})),this.websocket.on(Tb.RECONNECTING,(e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===hb.CONNECTED?this.connectionState=hb.RECONNECTING:this.connectionState=hb.CONNECTING})),this.websocket.on(Tb.WILL_RECONNECT,((e,t,i)=>{\"retry\"!==e?(Qy.debug(\"\".concat(this.clientId,\" websocket will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0):Qy.debug(\"\".concat(this.clientId,\" reconnect mode is retry, no need to renew session\")),i(e)})),this.websocket.on(Tb.CONNECTED,(()=>{this.openConnectionTime=Date.now(),this.join().catch((e=>{if(this.emit(pb.REPORT_JOIN_GATEWAY,e,this.url||\"\"),e instanceof rv&&e.code===nv.UNEXPECTED_RESPONSE&&e.data.code===ub.ERR_NO_AUTHORIZED)return Qy.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),void this.reconnect(\"recover\",Dv.SERVER_ERROR);Qy.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",Dv.SERVER_ERROR):(this.initError=e,this.close())}))})),this.websocket.on(Tb.REQUEST_NEW_URLS,((e,t)=>{kv(this,pb.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)})),this.websocket.on(Tb.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{this.emit(mb.ON_TOKEN_PRIVILEGE_DID_EXPIRE)}))}}var RM={exports:{}};RM.exports=(()=>{var e={8:(e,t,i)=>{i.r(t),i.d(t,{Parser:()=>C,Printer:()=>b,parse:()=>D,print:()=>P});const n=\"\\n\",r=\"\".concat(\"\\r\").concat(n),o=\" \";let s;function a(e){return e>=\"0\"&&e<=\"9\"}function c(e){return e>=\"!\"&&e<=\"~\"}function d(e){return c(e)||e>=\"Â\"&&e<=\"Ã¿\"}function l(e){return\"!\"===e||e>=\"#\"&&e<=\"'\"||e>=\"*\"&&e<=\"+\"||e>=\"-\"&&e<=\".\"||e>=\"0\"&&e<=\"9\"||e>=\"A\"&&e<=\"Z\"||e>=\"^\"&&e<=\"~\"}function u(e){return e>=\"1\"&&e<=\"9\"}function h(e){return e>=\"A\"&&e<=\"Z\"||e>=\"a\"&&e<=\"z\"}function p(e){return\"d\"===e||\"h\"===e||\"m\"===e||\"s\"===e}function _(e){return e>\"\u0001\"&&e<\"\\t\"||e>\"\\v\"&&e<\"\\f\"||e>\"\u000e\"&&e<\"Ã¿\"}function E(e){return h(e)||a(e)||\"+\"===e||\"/\"===e}function m(e){return a(e)||h(e)||\"+\"===e||\"/\"===e||\"-\"===e||\"_\"===e}function f(e){return h(e)||a(e)||\"+\"===e||\"/\"===e}function T(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function S(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?T(Object(i),!0).forEach((function(t){g(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):T(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function g(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function(e){e.VERSION=\"v\",e.ORIGIN=\"o\",e.SESSION_NAME=\"s\",e.INFORMATION=\"i\",e.URI=\"u\",e.EMAIL=\"e\",e.PHONE=\"p\",e.CONNECTION=\"c\",e.BANDWIDTH=\"b\",e.TIME=\"t\",e.REPEAT=\"r\",e.ZONE_ADJUSTMENTS=\"z\",e.KEY=\"k\",e.ATTRIBUTE=\"a\",e.MEDIA=\"m\"}(s||(s={}));class R{consumeText(e,t){let i=t;for(;i<e.length;){const t=e[i];if(\"\\0\"===t||\"\\r\"===t||t===n)break;i+=1}if(i-t==0)throw new Error(\"Invalid text, at \".concat(e));return i}consumeUnicastAddress(e,t,i){return this.consumeTill(e,t,o)}consumeOneOrMore(e,t,i){let n=t;for(;i(e[n]);)n++;if(n-t==0)throw new Error(\"Invalid rule at \".concat(t,\".\"));return n}consumeSpace(e,t){if(e[t]===o)return t+1;throw new Error(\"Invalid space at \".concat(t,\".\"))}consumeIP4Address(e,t){let i=t;for(let t=0;t<4;t++)if(i=this.consumeDecimalUChar(e,i),3!==t){if(\".\"!==e[i])throw new Error(\"Invalid IP4 address.\");i++}return i}consumeDecimalUChar(e,t){let i=t;for(let t=0;t<3&&a(e[i]);t++,i++);if(i-t==0)throw new Error(\"Invalid decimal uchar.\");const n=parseInt(e.slice(t,i));if(n>=0&&n<=255)return i;throw new Error(\"Invalid decimal uchar\")}consumeIP6Address(e,t){let i=this.consumeHexpart(e,t);return\":\"===e[i]?(i+=1,i=this.consumeIP4Address(e,i),i):i}consumeHexpart(e,t){let i=t;if(\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}if(i=this.consumeHexseq(e,i),\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}return i}consumeHexseq(e,t){let i=t;for(;i=this.consumeHex4(e,i),\":\"===e[i]&&\":\"!==e[i+1];)i+=1;return i}consumeHex4(e,t){let i=0;for(;i<4;i++)if(!((n=e[t+i])>=\"0\"&&n<=\"9\"||n>=\"a\"&&n<=\"f\"||n>=\"A\"&&n<=\"F\")){if(0===i)throw new Error(\"Invalid hex 4\");break}var n;return t+i}consumeFQDN(e,t){let i=t;for(;a(e[i])||h(e[i])||\"-\"===e[i]||\".\"===e[i];)i+=1;if(i-t<4)throw new Error(\"Invalid FQDN\");return i}consumeExtnAddr(e,t){return this.consumeOneOrMore(e,t,d)}consumeMulticastAddress(e,t,i){switch(i){case\"IP4\":case\"ip4\":return this.consumeIP4MulticastAddress(e,t);case\"IP6\":case\"ip6\":return this.consumeIP6MulticastAddress(e,t);default:try{return this.consumeFQDN(e,t)}catch(i){return this.consumeExtnAddr(e,t)}}}consumeIP6MulticastAddress(e,t){const i=this.consumeHexpart(e,t);return\"/\"===e[i]?this.consumeInteger(e,i+1):i}consumeIP4MulticastAddress(e,t){let i=t+3;const n=e.slice(t,i),r=parseInt(n);if(r<224||r>239)throw new Error(\"Invalid IP4 multicast address, IPv4 multicast addresses may be in the range 224.0.0.0 to 239.255.255.255.\");for(let t=0;t<3;t++){if(\".\"!==e[i])throw new Error(\"Invalid IP4 multicast address.\");i+=1,i=this.consumeDecimalUChar(e,i)}return\"/\"===e[i]&&(i+=1),i=this.consumeTTL(e,i),\"/\"===e[i]&&(i=this.consumeInteger(e,i)),i}consumeInteger(e,t){if(!u(e[t]))throw new Error(\"Invalid integer.\");for(t+=1;a(e[t]);)t+=1;return t}consumeTTL(e,t){if(\"0\"===e[t])return t+1;if(!u(e[t]))throw new Error(\"Invalid TTL.\");t+=1;for(let i=0;i<2&&a(e[t]);i++)t+=1;return t}consumeToken(e,t){return this.consumeOneOrMore(e,t,l)}consumeTime(e,t){let i=t;if(\"0\"===e[i])return i+1;for(u(e[i])&&(i+=1);a(e[i]);)i++;if(i-t<10)throw new Error(\"Invalid time\");return i}consumeAddress(e,t){return this.consumeTill(e,t,o)}consumeTypedTime(e,t){let i=t;return i=this.consumeOneOrMore(e,i,a),p(e[i])?i+1:i}consumeRepeatInterval(e,t){if(!u(e[t]))throw new Error(\"Invalid repeat interval\");for(t+=1;a(e[t]);)t+=1;return p(e[t])&&(t+=1),t}consumePort(e,t){return this.consumeOneOrMore(e,t,a)}consume(e,t,i){for(let n=0;n<i.length;n++){if(t+n>=e.length)throw new Error(\"consume exceeding value length\");if(e[t+n]!==i[n])throw new Error(\"consume \".concat(i,\" failed at \").concat(n))}return t+i.length}consumeTill(e,t,i){let n=t;for(;n<e.length&&(\"string\"!=typeof i||e[n]!==i)&&(\"function\"!=typeof i||!i(e[n]));)n++;return n}}class C extends R{constructor(){super(),g(this,\"records\",[]),g(this,\"currentLine\",0)}parse(e){const t=this.probeEOL(e);this.records=e.split(t).filter((e=>!!jp(e).call(e))).map(this.parseLine),this.currentLine=0;const i=this.parseVersion(),n=this.parseOrigin(),r=this.parseSessionName(),o=this.parseInformation(),s=this.parseUri(),a=this.parseEmail(),c=this.parsePhone(),d=this.parseConnection(),l=this.parseBandWidth(),u=this.parseTimeFields(),h=this.parseKey(),p=this.parseSessionAttribute(),_=this.parseMediaDescription();if(this.currentLine!==this.records.length)throw new Error(\"parsing failed, non exhaustive sdp lines.\");return{version:i,origin:n,sessionName:r,information:o,uri:s,emails:a,phones:c,connection:d,bandwidths:l,timeFields:u,key:h,attributes:p,mediaDescriptions:_}}getCurrentRecord(){const e=this.records[this.currentLine];if(!e)throw new Error(\"Record doesn't exit.\");return e}probeEOL(e){for(let t=0;t<e.length;t++)if(e[t]===n)return\"\\r\"===e[t-1]?r:n;throw new Error(\"Invalid newline character.\")}parseLine(e,t){if(e.length<2)throw new Error(\"Invalid sdp line, sdp line should be of form <type>=<value>.\");const i=e[0];if(\"=\"!==e[1])throw new Error('Invalid sdp line, <type> should be a single character followed by an \"=\" sign.');return{type:i,value:e.slice(2),line:t,cur:0}}parseSessionAttribute(){const e=new v;for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(t,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===t.value[t.cur]&&(t.cur+=1,i.attValue=this.extractOneOrMore(t,_)),e.parse(i),this.currentLine++}return e.digest()}parseMediaAttributes(e){const t=new y(e);for(;this.currentLine<this.records.length;){const e=this.getCurrentRecord();if(e.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(e,(e=>l(e)&&\":\"!==e)),_cur:0};\":\"===e.value[e.cur]&&(e.cur+=1,i.attValue=this.extractOneOrMore(e,_)),t.parse(i),this.currentLine++}return t.digest()}parseKey(){const e=this.getCurrentRecord();if(e.type===s.KEY){if(\"prompt\"===e.value||\"clear:\"===e.value||\"base64:\"===e.value||\"uri:\"===e.value)return e.value;throw this.currentLine++,new Error(\"Invalid key.\")}}parseZone(){const e=this.getCurrentRecord();if(e.type===s.ZONE_ADJUSTMENTS){const t=[];for(;;)try{const i=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);let n=!1;\"-\"===e.value[e.cur]&&(n=!0,e.cur+=1);const r=this.extract(e,this.consumeTypedTime);t.push({time:i,typedTime:r,back:n})}catch(e){break}if(0===t.length)throw new Error(\"Invalid zone adjustments\");return this.currentLine++,t}return[]}parseRepeat(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.REPEAT)break;{const i=this.extract(t,this.consumeRepeatInterval),n=this.parseTypedTime(t);e.push({repeatInterval:i,typedTimes:n}),this.currentLine++}}return e}parseTypedTime(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeTypedTime))}catch(e){break}if(0===t.length)throw new Error(\"Invalid typed time.\");return t}parseTime(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);const i=this.extract(e,this.consumeTime);return this.currentLine++,{startTime:t,stopTime:i}}parseBandWidth(){const e=[];for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.BANDWIDTH)break;{const i=this.extractOneOrMore(t,l);if(\":\"!==t.value[t.cur])throw new Error(\"Invalid bandwidth field.\");t.cur++;const n=this.extractOneOrMore(t,a);e.push({bwtype:i,bandwidth:n}),this.currentLine++}}return e}parseVersion(){const e=this.getCurrentRecord();if(e.type!==s.VERSION)throw new Error(\"first sdp record must be version\");const t=e.value.slice(0,this.consumeOneOrMore(e.value,0,a));if(t.length!==e.value.length)throw new Error('invalid proto version, \"v='.concat(e.value,'\"'));return this.currentLine++,t}parseOrigin(){const e=this.getCurrentRecord();if(e.type!==s.ORIGIN)throw new Error(\"second line of sdp must be origin\");const t=this.extractOneOrMore(e,d);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const n=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const o=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const c=this.extract(e,this.consumeUnicastAddress);return this.currentLine++,{username:t,sessId:i,sessVersion:n,nettype:r,addrtype:o,unicastAddress:c}}parseSessionName(){const e=this.getCurrentRecord();if(e.type===s.SESSION_NAME){const t=this.extract(e,this.consumeText);return this.currentLine++,t}}parseInformation(){const e=this.getCurrentRecord();if(e.type!==s.INFORMATION)return;const t=this.extract(e,this.consumeText);return this.currentLine++,t}parseUri(){const e=this.getCurrentRecord();if(e.type===s.URI)return this.currentLine++,e.value}parseEmail(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.EMAIL)break;e.push(t.value),this.currentLine++}return e}parsePhone(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.PHONE)break;e.push(t.value),this.currentLine++}return e}parseConnection(){const e=this.getCurrentRecord();if(e.type===s.CONNECTION){const t=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,l);this.consumeSpaceForRecord(e);const n=this.extract(e,this.consumeAddress);return this.currentLine++,{nettype:t,addrtype:i,address:n}}}parseMedia(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeToken);this.consumeSpaceForRecord(e);let i=this.extract(e,this.consumePort);\"/\"===e.value[e.cur]&&(e.cur+=1,i+=this.extract(e,this.consumeInteger)),this.consumeSpaceForRecord(e);const n=[];for(n.push(this.extract(e,this.consumeToken));\"/\"===e.value[e.cur];)e.cur+=1,n.push(this.extract(e,this.consumeToken));if(0===n.length)throw new Error(\"Invalid proto\");const r=this.parseFmt(e);return this.currentLine++,{mediaType:t,port:i,protos:n,fmts:r}}parseTimeFields(){const e=[];for(;this.getCurrentRecord().type===s.TIME;){const t=this.parseTime(),i=this.parseRepeat(),n=this.parseZone();e.push({time:t,repeats:i,zones:n})}return e}parseMediaDescription(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.MEDIA;){const t=this.parseMedia(),i=this.parseInformation(),n=this.parseConnections(),r=this.parseBandWidth(),o=this.parseKey(),s=this.parseMediaAttributes(t);e.push({media:t,information:i,connections:n,bandwidths:r,key:o,attributes:s})}return e}parseConnections(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.CONNECTION;)e.push(this.parseConnection());return e}parseFmt(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeToken))}catch(e){break}if(0===t.length)throw new Error(\"Invalid fmts\");return t}extract(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];const o=t.call(this,e.value,e.cur,...n),s=e.value.slice(e.cur,o);return e.cur=o,s}extractOneOrMore(e,t){const i=this.consumeOneOrMore(e.value,e.cur,t),n=e.value.slice(e.cur,i);return e.cur=i,n}consumeSpaceForRecord(e){if(e.value[e.cur]!==o)throw new Error(\"Invalid space at \".concat(e.cur,\".\"));e.cur+=1}}class I extends R{constructor(){super(...arguments),g(this,\"attributes\",void 0),g(this,\"digested\",!1)}extractOneOrMore(e,t,i){const n=this.consumeOneOrMore(e.attValue,e._cur,t),r=e.attValue.slice(e._cur,n),[o,s]=i||[];if(\"number\"==typeof o&&r.length<o)throw new Error(\"error in length, should be more or equal than \".concat(o,\" characters.\"));if(\"number\"==typeof s&&r.length>s)throw new Error(\"error in length, should be less or equal than \".concat(s,\" characters.\"));return e._cur=n,r}consumeAttributeSpace(e){if(e.attValue[e._cur]!==o)throw new Error(\"Invalid space at \".concat(e._cur,\".\"));e._cur+=1}extract(e,t){if(!e.attValue)throw new Error(\"Nothing to extract from attValue.\");for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];const o=t.call(this,e.attValue,e._cur,...n),s=e.attValue.slice(e._cur,o);return e._cur=o,s}atEnd(e){if(!e.attValue)throw new Error;return e._cur>=e.attValue.length}peekChar(e){if(!e.attValue)throw new Error;return e.attValue[e._cur]}peek(e,t){if(!e.attValue)throw new Error;for(let i=0;i<t.length;i++)if(t[i]!==e.attValue[e._cur+i])return!1;return!0}parseIceUfrag(e){if(this.attributes.iceUfrag)throw new Error(\"Invalid ice-ufrag, should be only a single line if 'a=ice-ufrag'\");this.attributes.iceUfrag=this.extractOneOrMore(e,E,[4,256])}parseIcePwd(e){if(this.attributes.icePwd)throw new Error(\"Invalid ice-pwd, should be only a single line if 'a=ice-pwd'\");this.attributes.icePwd=this.extractOneOrMore(e,E,[22,256])}parseIceOptions(e){if(this.attributes.iceOptions)throw new Error(\"Invalid ice-options, should be only one 'ice-options' line\");const t=[];for(;!this.atEnd(e);){t.push(this.extractOneOrMore(e,E));try{this.consumeAttributeSpace(e)}catch(t){if(this.atEnd(e))break;throw t}}this.attributes.iceOptions=t}parseFingerprint(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill);this.attributes.fingerprints.push({hashFunction:t,fingerprint:i})}parseExtmap(e){const t=this.extractOneOrMore(e,a);let i;\"/\"===this.peekChar(e)&&(this.extract(e,this.consume,\"/\"),i=this.extract(e,this.consumeToken)),this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeTill,o),r=S(S({entry:parseInt(t,10)},i&&{direction:i}),{},{extensionName:n});this.peekChar(e)===o&&(this.consumeAttributeSpace(e),r.extensionAttributes=this.extract(e,this.consumeTill)),this.attributes.extmaps.push(r)}parseSetup(e){if(this.attributes.setup)throw new Error(\"must only be one single 'a=setup' line.\");const t=this.extract(e,this.consumeTill);if(\"active\"!==t&&\"passive\"!==t&&\"actpass\"!==t&&\"holdconn\"!==t)throw new Error(\"role must be one of 'active', 'passive', 'actpass', 'holdconn'.\");this.attributes.setup=t}}class v extends I{constructor(){super(...arguments),g(this,\"attributes\",{unrecognized:[],groups:[],extmaps:[],fingerprints:[],identities:[]})}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"group\":this.parseGroup(e);break;case\"ice-lite\":this.parseIceLite();break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"fingerprint\":this.parseFingerprint(e);break;case\"setup\":this.parseSetup(e);break;case\"tls-id\":this.parseTlsId(e);break;case\"identity\":this.parseIdentity(e);break;case\"extmap\":this.parseExtmap(e);break;case\"msid-semantic\":this.parseMsidSemantic(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing session attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}digest(){return this.digested=!0,this.attributes}parseGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;)this.consumeAttributeSpace(e),i.push(this.extract(e,this.consumeToken));this.attributes.groups.push({semantic:t,identificationTag:i})}parseIceLite(){if(this.attributes.iceLite)throw new Error(\"Invalid ice-lite, should be only a single line of 'a=ice-lite'\");this.attributes.iceLite=!0}parseTlsId(e){if(this.attributes.tlsId)throw new Error(\"must be only one tld-id line\");this.attributes.tlsId=this.extractOneOrMore(e,m)}parseIdentity(e){const t=this.extractOneOrMore(e,f),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.extract(e,this.consume,\"=\");const n=this.extractOneOrMore(e,(e=>e!==o&&_(e)));i.push({name:t,value:n})}this.attributes.identities.push({assertionValue:t,extensions:i})}parseMsidSemantic(e){this.peekChar(e)===o&&this.consumeAttributeSpace(e);const t={semantic:this.extract(e,this.consumeToken),identifierList:[]};for(;;){try{this.consumeAttributeSpace(e)}catch(e){break}if(\"*\"===this.peekChar(e)){this.extract(e,this.consume,\"*\"),t.applyForAll=!0;break}{const i=this.extract(e,this.consumeTill,o);t.identifierList.push(i)}}this.attributes.msidSemantic=t}}class y extends I{constructor(e){super(),g(this,\"attributes\",void 0),-1!==e.protos.indexOf(\"RTP\")||e.protos.indexOf(\"rtp\"),this.attributes={unrecognized:[],candidates:[],extmaps:[],fingerprints:[],imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[]}}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"extmap\":this.parseExtmap(e);break;case\"setup\":this.parseSetup(e);break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"candidate\":this.parseCandidate(e);break;case\"remote-candidate\":this.parseRemoteCandidate(e);break;case\"end-of-candidates\":this.parseEndOfCandidates();break;case\"fingerprint\":this.parseFingerprint(e);break;case\"rtpmap\":this.parseRtpmap(e);break;case\"ptime\":this.parsePtime(e);break;case\"maxptime\":this.parseMaxPtime(e);break;case\"sendrecv\":case\"recvonly\":case\"sendonly\":case\"inactive\":this.parseDirection(e);break;case\"ssrc\":this.parseSSRC(e);break;case\"fmtp\":this.parseFmtp(e);break;case\"rtcp-fb\":this.parseRtcpFb(e);break;case\"rtcp-mux\":this.parseRTCPMux();break;case\"rtcp-mux-only\":this.parseRTCPMuxOnly();break;case\"rtcp-rsize\":this.parseRTCPRsize();break;case\"rtcp\":this.parseRTCP(e);break;case\"mid\":this.parseMid(e);break;case\"msid\":this.parseMsid(e);break;case\"imageattr\":this.parseImageAttr(e);break;case\"rid\":this.parseRid(e);break;case\"simulcast\":this.parseSimulcast(e);break;case\"sctp-port\":this.parseSctpPort(e);break;case\"max-message-size\":this.parseMaxMessageSize(e);break;case\"ssrc-group\":this.parseSSRCGroup(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing media attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}parseCandidate(e){const t=this.extractOneOrMore(e,E,[1,32]);this.consumeAttributeSpace(e);const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const r=this.extractOneOrMore(e,a,[1,10]);this.consumeAttributeSpace(e);const s=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const d=this.extract(e,this.consumePort);this.consumeAttributeSpace(e),this.extract(e,this.consume,\"typ\"),this.consumeAttributeSpace(e);const l={foundation:t,componentId:i,transport:n,priority:r,connectionAddress:s,port:d,type:this.extract(e,this.consumeToken),extension:{}};for(this.peek(e,\" raddr\")&&(this.extract(e,this.consume,\" raddr\"),this.consumeAttributeSpace(e),l.relAddr=this.extract(e,this.consumeAddress)),this.peek(e,\" rport\")&&(this.extract(e,this.consume,\" rport\"),this.consumeAttributeSpace(e),l.relPort=this.extract(e,this.consumePort));this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e),l.extension[t]=this.extractOneOrMore(e,c)}this.attributes.candidates.push(l)}parseRemoteCandidate(e){const t=[];for(;;){const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumePort);t.push({componentId:i,connectionAddress:n,port:r});try{this.consumeAttributeSpace(e)}catch(e){break}}this.attributes.remoteCandidatesList.push(t)}parseEndOfCandidates(){if(this.attributes.endOfCandidates)throw new Error(\"must be only one line of end-of-candidates\");this.attributes.endOfCandidates=!0}parseRtpmap(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\"/\");this.extract(e,this.consume,\"/\");const n={encodingName:i,clockRate:this.extractOneOrMore(e,a)};this.atEnd(e)||\"/\"!==this.peekChar(e)||(this.extract(e,this.consume,\"/\"),n.encodingParameters=parseInt(this.extract(e,this.consumeTill),10));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.rtpMap=n:this.attributes.payloads.push({payloadType:parseInt(t,10),rtpMap:n,rtcpFeedbacks:[]})}parsePtime(e){if(this.attributes.ptime)throw new Error(\"must be only one line of ptime\");this.attributes.ptime=this.extract(e,this.consumeTill)}parseMaxPtime(e){if(this.attributes.maxPtime)throw new Error(\"must be only one line of ptime\");this.attributes.maxPtime=this.extract(e,this.consumeTill)}parseDirection(e){if(this.attributes.direction)throw new Error(\"must be only one line of direction info\");this.attributes.direction=e.attField}parseSSRC(e){const t=this.extractOneOrMore(e,a);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\":\");let n;\":\"===this.peekChar(e)&&(this.extract(e,this.consume,\":\"),n=this.extract(e,this.consumeTill));const r=this.attributes.ssrcs.find((e=>e.ssrcId===parseInt(t,10)));r?r.attributes[i]=n:this.attributes.ssrcs.push({ssrcId:parseInt(t,10),attributes:{[i]:n}})}parseFmtp(e){const t=this.extract(e,this.consumeTill,o);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill),n={};i.split(\";\").forEach((e=>{let[t,i]=e.split(\"=\");t=jp(t).call(t);const r=\"string\"==typeof i?jp(i).call(i):null;\"string\"==typeof t&&t.length>0&&(n[t]=r)}));const r=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));r?r.fmtp={parameters:n}:this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[],fmtp:{parameters:n}})}parseFmtParameters(e){const t={},i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");for(t[i]=n;\";\"===e.attValue[e._cur];){const i=this.extract(e,this.consumeTill,\"=\");e._cur++;const n=this.extract(e,this.consumeTill,\";\");t[i]=n}return t}parseRtcpFb(e){let t=\"\";t=\"*\"===this.peekChar(e)?this.extract(e,this.consume,\"*\"):this.extract(e,this.consumeTill,o),this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,o);let n;if(\"trr-int\"===i)n={type:i,interval:this.extract(e,this.consumeTill)};else{const t={type:i};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.parameter=this.extract(e,this.consumeToken),this.peekChar(e)===o&&(t.additional=this.extract(e,this.consumeTill))),n=t}if(\"*\"===t)this.attributes.rtcpFeedbackWildcards.push(n);else{const e=this.attributes.payloads.find((e=>e.payloadType===parseInt(t,10)));e?e.rtcpFeedbacks.push(n):this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[n]})}}parseRTCPMux(){if(this.attributes.rtcpMux)throw new Error(\"must be single line of rtcp-mux\");this.attributes.rtcpMux=!0}parseRTCPMuxOnly(){if(this.attributes.rtcpMuxOnly)throw new Error(\"must be single line of rtcp-only\");this.attributes.rtcpMuxOnly=!0}parseRTCPRsize(){if(this.attributes.rtcpRsize)throw new Error(\"must be single line of rtcp-rsize\");this.attributes.rtcpRsize=!0}parseRTCP(e){if(this.attributes.rtcp)throw new Error(\"must be single line of rtcp\");const t={port:this.extract(e,this.consumePort)};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.netType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.addressType=this.extractOneOrMore(e,l),this.consumeAttributeSpace(e),t.address=this.extract(e,this.consumeAddress)),this.attributes.rtcp=t}parseMsid(e){const t={id:this.extractOneOrMore(e,l,[1,64])};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.appdata=this.extractOneOrMore(e,l,[1,64])),this.attributes.msids.push(t)}parseImageAttr(e){this.attributes.imageattr.push(e.attValue)}parseRid(e){const t=this.extractOneOrMore(e,(e=>h(e)||a(e)||\"_\"===e||\"-\"===e));this.consumeAttributeSpace(e);const i={id:t,direction:this.extract(e,this.consumeToken),params:[]};if(this.peekChar(e)===o){if(this.consumeAttributeSpace(e),this.peek(e,\"pt=\")){this.extract(e,this.consume,\"pt=\");const t=[];for(;;){const i=this.extract(e,this.consumeToken);t.push(i);try{this.extract(e,this.consume,\",\")}catch(e){break}}i.payloads=t,this.peekChar(e)===o&&this.extract(e,this.consume,o)}for(;;){const t=this.extract(e,this.consumeToken);switch(t){case\"depend\":{const n={type:t,rids:this.extract(e,this.consume,\"=\").split(\",\")};i.params.push(n);break}default:{const n={type:t};\"=\"===this.peekChar(e)&&(this.extract(e,this.consume,\"=\"),n.val=this.extract(e,this.consumeTill,\";\")),i.params.push(n)}}try{this.extract(e,this.consume,\";\")}catch(e){break}}}this.attributes.rids.push(i)}parseSimulcast(e){if(this.attributes.simulcast)throw new Error(\"must be single line of simulcast\");this.attributes.simulcast=e.attValue,this.extract(e,this.consumeTill)}parseSctpPort(e){this.attributes.sctpPort=this.extractOneOrMore(e,a,[1,5])}parseMaxMessageSize(e){this.attributes.maxMessageSize=this.extractOneOrMore(e,a,[1,void 0])}digest(){return this.digested=!0,this.attributes}parseMid(e){this.attributes.mid=this.extract(e,this.consumeToken)}parseSSRCGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;;)try{this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeInteger);i.push(parseInt(t,10))}catch(e){break}this.attributes.ssrcGroups.push({semantic:t,ssrcIds:i})}}function A(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class b{constructor(){A(this,\"eol\",r)}print(e,t){let i=\"\";return t&&(this.eol=t),i+=this.printVersion(e.version),i+=this.printOrigin(e.origin),i+=this.printSessionName(e.sessionName),i+=this.printInformation(e.information),i+=this.printUri(e.uri),i+=this.printEmail(e.emails),i+=this.printPhone(e.phones),i+=this.printConnection(e.connection),i+=this.printBandwidth(e.bandwidths),i+=this.printTimeFields(e.timeFields),i+=this.printKey(e.key),i+=this.printSessionAttributes(e.attributes),i+=this.printMediaDescription(e.mediaDescriptions),i}printVersion(e){return\"v=\".concat(e).concat(this.eol)}printOrigin(e){return\"o=\".concat(e.username,\" \").concat(e.sessId,\" \").concat(e.sessVersion,\" \").concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.unicastAddress).concat(this.eol)}printSessionName(e){return e?\"s=\".concat(e).concat(this.eol):\"\"}printInformation(e){return e?\"i=\".concat(e).concat(this.eol):\"\"}printUri(e){return e?\"u=\".concat(e).concat(this.eol):\"\"}printEmail(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printPhone(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printConnection(e){return e?\"c=\".concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.address).concat(this.eol):\"\"}printBandwidth(e){let t=\"\";for(const i of e)t+=\"b=\".concat(i.bwtype,\":\").concat(i.bandwidth).concat(this.eol);return t}printTimeFields(e){let t=\"\";for(const i of e){t+=\"t=\".concat(i.time.startTime,\" \").concat(i.time.startTime).concat(this.eol);for(const e of i.repeats)t+=\"r=\".concat(e.repeatInterval,\" \").concat(e.typedTimes.join(\" \")).concat(this.eol);i.zoneAdjustments&&(t+=\"z=\",t+=\"z=\".concat(i.zoneAdjustments.map((e=>\"\".concat(e.time,\" \").concat(e.back?\"-\":\"\",\" \").concat(e.typedTime))).join(\" \")).concat(this.eol),t+=this.eol)}return t}printKey(e){return e?\"k=\".concat(e).concat(this.eol):\"\"}printAttributes(e){let t=\"\";for(const i of e)t+=\"a=\".concat(i.attField).concat(i.attValue?\":\".concat(i.attValue):\"\").concat(this.eol);return t}printMediaDescription(e){let t=\"\";for(const i of e)t+=this.printMedia(i.media),t+=this.printInformation(i.information),t+=this.printConnections(i.connections),t+=this.printBandwidth(i.bandwidths),t+=this.printKey(i.key),t+=this.printMediaAttributes(i);return t}printConnections(e){let t=\"\";for(const i of e)t+=this.printConnection(i);return t}printMedia(e){return\"m=\".concat(e.mediaType,\" \").concat(e.port,\" \").concat(e.protos.join(\"/\"),\" \").concat(e.fmts.join(\" \")).concat(this.eol)}printSessionAttributes(e){return new O(this.eol).print(e)}printMediaAttributes(e){return new N(this.eol).print(e)}}class w{constructor(e){A(this,\"eol\",void 0),this.eol=e}printIceUfrag(e){return void 0===e?\"\":\"a=ice-ufrag:\".concat(e).concat(this.eol)}printIcePwd(e){return void 0===e?\"\":\"a=ice-pwd:\".concat(e).concat(this.eol)}printIceOptions(e){return void 0===e?\"\":\"a=ice-options:\".concat(e.join(o)).concat(this.eol)}printFingerprints(e){return e.length>0?e.map((e=>\"a=fingerprint:\".concat(e.hashFunction).concat(o).concat(e.fingerprint))).join(this.eol)+this.eol:\"\"}printExtmap(e){return e.map((e=>\"a=extmap:\".concat(e.entry).concat(e.direction?\"/\".concat(e.direction):\"\").concat(o).concat(e.extensionName).concat(e.extensionAttributes?\"\".concat(o).concat(e.extensionAttributes):\"\").concat(this.eol))).join(\"\")}printSetup(e){return void 0===e?\"\":\"a=setup:\".concat(e).concat(this.eol)}printUnrecognized(e){return e.map((e=>\"a=\".concat(e.attField).concat(e.attValue?\":\".concat(e.attValue):\"\").concat(this.eol))).join(\"\")}}class O extends w{print(e){let t=\"\";return t+=this.printGroups(e.groups),t+=this.printMsidSemantic(e.msidSemantic),t+=this.printIceLite(e.iceLite),t+=this.printIceUfrag(e.iceUfrag),t+=this.printIcePwd(e.icePwd),t+=this.printIceOptions(e.iceOptions),t+=this.printFingerprints(e.fingerprints),t+=this.printSetup(e.setup),t+=this.printTlsId(e.tlsId),t+=this.printIdentity(e.identities),t+=this.printExtmap(e.extmaps),t+=this.printUnrecognized(e.unrecognized),t}printGroups(e){let t=\"\";return e.length>0&&(t+=e.map((e=>\"a=group:\".concat(e.semantic).concat(e.identificationTag.map((e=>\"\".concat(o).concat(e))).join(\"\")).concat(this.eol))).join(\"\")),t}printIceLite(e){return void 0===e?\"\":\"a=ice-lite\"+this.eol}printTlsId(e){return e?\"a=tls-id:\".concat(e).concat(this.eol):\"\"}printIdentity(e){return 0===e.length?\"\":e.map((e=>\"a=identity:\".concat(e.assertionValue).concat(e.extensions.map((e=>\"\".concat(o).concat(e.name).concat(e.value?\"=\".concat(e.value):\"\")))))).join(this.eol)+this.eol}printMsidSemantic(e){if(!e)return\"\";let t=\"a=msid-semantic:\".concat(e.semantic);return e.applyForAll?t+=\"\".concat(o,\"*\"):e.identifierList.length>0&&(t+=e.identifierList.map((e=>\"\".concat(o).concat(e)))),t+this.eol}}class N extends w{print(e){const t=e.attributes;let i=\"\";return i+=this.printRTCP(t.rtcp),i+=this.printIceUfrag(t.iceUfrag),i+=this.printIcePwd(t.icePwd),i+=this.printIceOptions(t.iceOptions),i+=this.printCandidates(t.candidates),i+=this.printRemoteCandidatesList(t.remoteCandidatesList),i+=this.printEndOfCandidates(t.endOfCandidates),i+=this.printFingerprints(t.fingerprints),i+=this.printSetup(t.setup),i+=this.printMid(t.mid),i+=this.printExtmap(t.extmaps),i+=this.printRTPRelated(t),i+=this.printPtime(t.ptime),i+=this.printMaxPtime(t.maxPtime),i+=this.printDirection(t.direction),i+=this.printSSRCGroups(t.ssrcGroups),i+=this.printSSRC(t.ssrcs),i+=this.printRTCPMux(t.rtcpMux),i+=this.printRTCPMuxOnly(t.rtcpMuxOnly),i+=this.printRTCPRsize(t.rtcpRsize),i+=this.printMSId(t.msids),i+=this.printImageattr(t.imageattr),i+=this.printRid(t.rids),i+=this.printSimulcast(t.simulcast),i+=this.printSCTPPort(t.sctpPort),i+=this.printMaxMessageSize(t.maxMessageSize),i+=this.printUnrecognized(t.unrecognized),i}printCandidates(e){return e.map((e=>\"a=candidate:\".concat(e.foundation).concat(o).concat(e.componentId).concat(o).concat(e.transport).concat(o).concat(e.priority).concat(o).concat(e.connectionAddress).concat(o).concat(e.port).concat(o,\"typ\").concat(o).concat(e.type).concat(e.relAddr?\"\".concat(o,\"raddr\").concat(o).concat(e.relAddr):\"\").concat(e.relPort?\"\".concat(o,\"rport\").concat(o).concat(e.relPort):\"\").concat(Object.keys(e.extension).map((t=>\"\".concat(o).concat(t).concat(o).concat(e.extension[t]))).join(\"\")).concat(this.eol))).join(\"\")}printRemoteCandidatesList(e){return e.map((e=>\"a=remote-candidates:\".concat(e.join(o)).concat(this.eol))).join(\"\")}printEndOfCandidates(e){return void 0===e?\"\":\"a=end-of-candidates\"+this.eol}printRTPRelated(e){if(!e.payloads)return\"\";const t=e.payloads;let i=\"\";i+=e.rtcpFeedbackWildcards.map((e=>this.printRTCPFeedback(\"*\",e))).join(\"\");for(const e of t)i+=this.printRtpMap(e.payloadType,e.rtpMap),i+=this.printFmtp(e.payloadType,e.fmtp),i+=e.rtcpFeedbacks.map((t=>this.printRTCPFeedback(e.payloadType,t))).join(\"\");return i}printFmtp(e,t){if(!t)return\"\";const i=Object.keys(t.parameters);return 1===i.length&&null===t.parameters[i[0]]?\"a=fmtp:\".concat(e).concat(o).concat(i[0]).concat(this.eol):\"a=fmtp:\".concat(e).concat(o).concat(Object.keys(t.parameters).map((e=>\"\".concat(e,\"=\").concat(t.parameters[e]))).join(\";\")).concat(this.eol)}printRtpMap(e,t){return t?\"a=rtpmap:\".concat(e).concat(o).concat(t.encodingName,\"/\").concat(t.clockRate).concat(t.encodingParameters?\"/\".concat(t.encodingParameters):\"\").concat(this.eol):\"\"}printRTCPFeedback(e,t){let i=\"a=rtcp-fb:\".concat(e).concat(o),n=t;return\"trr-int\"===n.type?i+=\"ttr-int\".concat(o).concat(n.interval):(i+=\"\".concat(n.type),n.parameter&&(i+=\"\".concat(o).concat(n.parameter),n.additional&&(i+=\"\".concat(o).concat(n.additional)))),i+this.eol}printPtime(e){return void 0===e?\"\":\"a=ptime:\".concat(e).concat(this.eol)}printMaxPtime(e){return void 0===e?\"\":\"a=maxptime:\".concat(e).concat(this.eol)}printDirection(e){return void 0===e?\"\":\"a=\".concat(e).concat(this.eol)}printSSRC(e){return e.map((e=>Object.keys(e.attributes).map((t=>\"a=ssrc:\".concat(e.ssrcId.toString(10)).concat(o).concat(t).concat(e.attributes[t]?\":\".concat(e.attributes[t]):\"\").concat(this.eol))).join(\"\"))).join(\"\")}printRTCPMux(e){return void 0===e?\"\":\"a=rtcp-mux\".concat(this.eol)}printRTCPMuxOnly(e){return void 0===e?\"\":\"a=rtcp-mux-only\".concat(this.eol)}printRTCPRsize(e){return void 0===e?\"\":\"a=rtcp-rsize\".concat(this.eol)}printRTCP(e){if(void 0===e)return\"\";let t=\"a=rtcp:\".concat(e.port);return e.netType&&(t+=\"\".concat(o).concat(e.netType)),e.addressType&&(t+=\"\".concat(o).concat(e.addressType)),e.address&&(t+=\"\".concat(o).concat(e.address)),t+this.eol}printMSId(e){return e.map((e=>\"a=msid:\".concat(e.id).concat(e.appdata?\"\".concat(o).concat(e.appdata):\"\").concat(this.eol))).join(\"\")}printImageattr(e){return e.map((e=>\"a=imageattr:\".concat(e).concat(this.eol))).join(\"\")}printRid(e){return e.map((e=>{let t=\"a=rid:\".concat(e.id).concat(o).concat(e.direction);return e.payloads&&(t+=\"\".concat(o,\"pt=\").concat(e.payloads.join(\",\"))),e.params.length>0&&(t+=\"\".concat(o).concat(e.params.map((e=>\"depend\"===e.type?\"depend=\".concat(e.rids.join(\",\")):\"\".concat(e.type,\"=\").concat(e.val))).join(\";\"))),t+this.eol})).join(\"\")}printSimulcast(e){return void 0===e?\"\":\"a=simulcast:\".concat(e).concat(this.eol)}printSCTPPort(e){return void 0===e?\"\":\"a=sctp-port:\".concat(e).concat(this.eol)}printMaxMessageSize(e){return void 0===e?\"\":\"a=max-message-size:\".concat(e).concat(this.eol)}printMid(e){return void 0===e?\"\":\"a=mid:\".concat(e).concat(this.eol)}printSSRCGroups(e){return e.map((e=>\"a=ssrc-group:\".concat(e.semantic).concat(e.ssrcIds.map((e=>\"\".concat(o).concat(e.toString(10)))).join(\"\")).concat(this.eol))).join(\"\")}}function D(e){return(new C).parse(e)}function P(e,t){return(new b).print(e,t)}}},t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}return i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i(8)})();var CM=RM.exports;function IM(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Dy(\"SVC_MODE\");if(Dy(\"ENABLE_SVC\"))return function(e){return e in ob}(e)?e:ob.L1T3}function vM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function yM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vM(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function AM(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;const{filterRTX:r,filterVideoFec:o,filterAudioFec:s,filterAudioCodec:a,filterVideoCodec:c}=t,{useXR:d}=i;let l=[],u=[],h=[],p=[],_=!1,E=!1;if(CM.parse(e).mediaDescriptions.forEach((e=>{n&&n!==e.attributes.direction||(\"video\"!==e.media.mediaType||_||(u=e.attributes.payloads,p=e.attributes.extmaps,_=!0),\"audio\"!==e.media.mediaType||E||(l=e.attributes.payloads,h=e.attributes.extmaps,E=!0))})),!p||0===u.length)throw new Error(\"Cannot get video capabilities from SDP.\");if(!h||0===l.length)throw new Error(\"Cannot get audio capabilities from SDP.\");if(u.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),l.forEach((e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate)),d&&e.rtcpFeedbacks.push({type:\"rrtr\"})})),r&&(l=l.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})),u=u.filter((e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}))),o&&(u=u.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),s&&(l=l.filter((e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")}))),a&&(null==a?void 0:a.length)>0&&(l=l.filter((e=>{var t;return Dn(a).call(a,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")}))),c&&(null==c?void 0:c.length)>0){const e=u.filter((e=>{var t;return Dn(c).call(c,(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")}));u=e.concat(r?[]:HM(e,u))}const m=Dy(\"UNSUPPORTED_VIDEO_CODEC\");return m&&m.length>0&&(u=u.filter((e=>!(e.rtpMap&&Dn(m).call(m,e.rtpMap.encodingName.toLowerCase()))))),{audioCodecs:l,videoCodecs:u,audioExtensions:h,videoExtensions:p}}function bM(e){const t=CM.parse(e);let i,n;for(const e of t.mediaDescriptions){if(!i){const t=e.attributes.iceUfrag,n=e.attributes.icePwd;if(!t||!n)throw new Error(\"Cannot get iceUfrag or icePwd from SDP.\");i={iceUfrag:t,icePwd:n}}if(!n){const t=e.attributes.fingerprints;t.length>0&&(n={fingerprints:t})}}if(!n&&t.attributes.fingerprints.length>0&&(n={fingerprints:t.attributes.fingerprints}),!n||!i)throw new Error(\"Cannot get iceParameters or dtlsParameters from SDP.\");return{iceParameters:i,dtlsParameters:n}}function wM(e,t){const i=[],n=e.attributes.ssrcGroups.filter((e=>\"FID\"===e.semantic)),r=e.attributes.ssrcGroups.find((e=>\"SIM\"===e.semantic)),o=e.attributes.ssrcs;if(r)r.ssrcIds.forEach((e=>{var r;const o=null===(r=n.find((t=>t.ssrcIds[0]===e)))||void 0===r?void 0:r.ssrcIds[1];i.push({ssrcId:e,rtx:t?o:void 0})}));else if(n.length>0){const e=n[0].ssrcIds[0],r=n[0].ssrcIds[1];i.push({ssrcId:e,rtx:t?r:void 0})}else{if(0===o.length)throw new Error(\"No ssrcs found on local media description.\");i.push({ssrcId:o[0].ssrcId})}return i}function OM(e,t,i){const{cname:n}=e;let r;t?r=NM(t):(r=e.iceParameters.candidates.map((e=>({foundation:e.foundation,componentId:\"1\",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}}))),Qy.debug(\"Using candidates from gateway.\"));const o={fingerprints:e.dtlsParameters.fingerprints.map((e=>({hashFunction:e.algorithm,fingerprint:e.fingerprint})))},s={iceUfrag:e.iceParameters.iceUfrag,icePwd:e.iceParameters.icePwd};let a;switch(e.dtlsParameters.role){case\"server\":a=\"passive\";break;case\"client\":a=\"active\";break;case\"auto\":a=\"actpass\"}const c=jM(e.rtpCapabilities),d=[];return Array.isArray(i)&&i.length>0&&i.forEach((e=>{d.push({kind:Yb.VIDEO,ssrcId:e.v,rtx:e.v_rtx,mslabel:\"\".concat(e.v,\"_\").concat(e.a)},{kind:Yb.AUDIO,ssrcId:e.a,mslabel:\"\".concat(e.v,\"_\").concat(e.a)})})),{dtlsParameters:o,iceParameters:s,candidates:r,rtpCapabilities:c,setup:a,cname:n,preSSRCs:d}}function NM(e){let t=[];return e.ip&&\"number\"==typeof e.port&&(t=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip,port:e.port.toString(),type:\"host\",extension:{}}],Qy.debug(\"Using remote candidate from AP \".concat(e.ip,\":\").concat(e.port)),e.ip6&&(t.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip6,port:e.port.toString(),type:\"host\",extension:{}}),Qy.debug(\"Using IPV6 remote candidate from AP \".concat(e.ip6,\":\").concat(e.port)))),t}function DM(e,t,i){const n=[],r=[];return e.forEach((e=>{let{ssrcId:o,rtx:s}=e;const a=ey(8,\"track-\"),c={ssrcId:o,attributes:yM({label:a,mslabel:i=i||ey(10,\"\"),msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};if(n.push(c),void 0!==s){const e={ssrcId:s,attributes:yM({label:a,mslabel:i,msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};n.push(e),r.push({semantic:\"FID\",ssrcIds:[o,s]})}})),e.length>1&&r.push({semantic:\"SIM\",ssrcIds:e.map((e=>{let{ssrcId:t}=e;return t}))}),{ssrcs:n,ssrcGroups:r}}function PM(e,t){t instanceof tk&&e.attributes.payloads.forEach((e=>{var i;const n=null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase();if(!n||-1===[\"opus\",\"pcmu\",\"pcma\",\"g722\"].indexOf(n))return;e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.minptime=\"10\",e.fmtp.parameters.useinbandfec=\"1\";const r=t._encoderConfig;r&&\"pcmu\"!==n&&\"pcma\"!==n&&\"g722\"!==n&&(r.bitrate&&!kI()&&(e.fmtp.parameters.maxaveragebitrate=\"\".concat(Math.floor(1e3*r.bitrate))),r.sampleRate&&(e.fmtp.parameters.maxplaybackrate=\"\".concat(r.sampleRate),e.fmtp.parameters[\"sprop-maxcapturerate\"]=\"\".concat(r.sampleRate)),r.stereo&&(e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"))}))}function LM(e){const t=e.attributes.unrecognized.findIndex((e=>\"x-google-flag\"===e.attField&&\"conference\"===e.attValue));-1!==t&&e.attributes.unrecognized.splice(t,1)}function kM(e,t){var i;if(!(t instanceof Hk&&t._encoderConfig&&-1===t._hints.indexOf(eP.SCREEN_TRACK)))return;const n=t._encoderConfig;MD().supportMinBitrate&&n.bitrateMin&&e.attributes.payloads.forEach((e=>{var t,i;Dn(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-min-bitrate\"]=\"\".concat(n.bitrateMin))})),MD().supportMinBitrate&&!Dn(i=t._hints).call(i,eP.LOW_STREAM)&&n.bitrateMax&&e.attributes.payloads.forEach((e=>{var t,i;Dn(t=[\"h264\",\"h265\",\"vp8\",\"vp9\",\"av1\"]).call(t,(null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-start-bitrate\"]=\"\".concat(Dy(\"X_GOOGLE_START_BITRATE\")||Math.floor(n.bitrateMax)))}))}function MM(e){if(\"video\"!==e.media.mediaType)return;const t=AI();if(t.name!==CI.SAFARI&&t.os!==RI.IOS)return;const i=e.attributes.extmaps.findIndex((e=>/video-orientation/g.test(e.extensionName)));-1!==i&&e.attributes.extmaps.splice(i,1)}function UM(e,t,i){if(!t)return;let n,r;if(\"video\"===e.media.mediaType?(n=i.videoExtensions,r=i.videoCodecs):(n=i.audioExtensions,r=i.audioCodecs),!0===t.twcc){const t=n.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"transport-cc\"===e.type))||e.rtcpFeedbacks.push({type:\"transport-cc\"})}))}}else if(!1===t.twcc){const t=e.attributes.extmaps.findIndex((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}if(!0===t.remb){const t=n.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));if(t){e.attributes.extmaps.find((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName))||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"});const i=function(e,t){return t.filter((t=>!!e.find((e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))))))}(r,e.attributes.payloads);i.forEach((e=>{e.rtcpFeedbacks.find((e=>\"goog-remb\"===e.type))||e.rtcpFeedbacks.push({type:\"goog-remb\"})}))}}else if(!1===t.remb){const t=e.attributes.extmaps.findIndex((e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName));-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"goog-remb\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}}function xM(e,t,i){if(kI())return;if(\"video\"!==e.media.mediaType)return;if(!(t instanceof Hk))return;if(\"vp9\"!==i&&\"vp8\"!==i)return;if(\"vp8\"===i&&!Dy(\"SIMULCAST\"))return;if(\"vp9\"===i&&Dy(\"ENABLE_SVC\"))return;if(void 0===t._scalabilityMode||t._scalabilityMode.numSpatialLayers<=1)return;const n=\"vp8\"===i?2:t._scalabilityMode.numSpatialLayers,r=e.attributes.ssrcs[0],o=e.attributes.ssrcGroups.find((e=>\"FID\"===e.semantic&&e.ssrcIds[0]===r.ssrcId)),s={semantic:\"SIM\",ssrcIds:[r.ssrcId]};for(let t=1;t<n;t++)e.attributes.ssrcs.push({ssrcId:r.ssrcId+t,attributes:Gv(r.attributes)}),s.ssrcIds.push(r.ssrcId+t),o&&(e.attributes.ssrcs.push({ssrcId:o.ssrcIds[1]+t,attributes:Gv(r.attributes)}),e.attributes.ssrcGroups.push({semantic:\"FID\",ssrcIds:[r.ssrcId+t,o.ssrcIds[1]+t]}));e.attributes.ssrcGroups.unshift(s)}async function VM(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=new RTCPeerConnection;i.addTransceiver(\"video\",{direction:\"sendonly\"}),i.addTransceiver(\"audio\",{direction:\"sendonly\"}),i.addTransceiver(\"video\",{direction:\"recvonly\"}),i.addTransceiver(\"audio\",{direction:\"recvonly\"});const n=(await i.createOffer()).sdp,{send:r,recv:o,sendrecv:s}=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;const n=AM(i,e,t,\"sendonly\"),r=AM(i,e,t,\"recvonly\"),o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},s={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},a={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(BM(n,r,\"videoExtensions\",o,s,a),BM(n,r,\"videoCodecs\",o,s,a),BM(n,r,\"audioExtensions\",o,s,a),BM(n,r,\"audioCodecs\",o,s,a),Dy(\"RAISE_H264_BASELINE_PRIORITY\")){const e=a.videoCodecs.findIndex((e=>{var t,i;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"===(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])}));if(-1!==e){const t=a.videoCodecs.findIndex((e=>{var t;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())}));if(t<e){Qy.debug(\"raising H264 baseline profile priority\");const i=a.videoCodecs[e];a.videoCodecs.splice(e,1),a.videoCodecs.splice(t,0,i)}-1!==t&&(s.videoCodecs=s.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))}))),-1!==t&&Dy(\"FILTER_SEND_H264_BASELINE\")&&(o.videoCodecs=o.videoCodecs.filter((e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))})))}}return{send:o,recv:s,sendrecv:a}}(e,t,n);try{i.close()}catch(e){}return{send:r,recv:o,sendrecv:s}}function FM(){const e={audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},t=AM(arguments.length>2?arguments[2]:void 0,arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},\"recvonly\"),i={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(BM(e,t,\"videoExtensions\",i,n,r),BM(e,t,\"videoCodecs\",i,n,r),BM(e,t,\"audioExtensions\",i,n,r),BM(e,t,\"audioCodecs\",i,n,r),Dy(\"RAISE_H264_BASELINE_PRIORITY\")){const e=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"===e.fmtp.parameters[\"profile-level-id\"]));if(-1!==e){const t=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()));if(t<e){Qy.debug(\"raising H264 baseline profile priority\");const i=r.videoCodecs[e];r.videoCodecs.splice(e,1),r.videoCodecs.splice(t,0,i)}-1!==t&&(n.videoCodecs=n.videoCodecs.filter((e=>!(e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"!==e.fmtp.parameters[\"profile-level-id\"]))))}}return{send:i,recv:n,sendrecv:r}}function BM(e,t,i,n,r,o){if(\"videoExtensions\"===i||\"audioExtensions\"===i){const s=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.entry===t.entry&&e.extensionName===t.extensionName)return s.push(i),!0}))?o[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===s.indexOf(t)&&r[i].push(e)}))}if(\"videoCodecs\"===i||\"audioCodecs\"===i){const s=[];return e[i].forEach((e=>{t[i].some(((t,i)=>{if(e.payloadType===t.payloadType&&JSON.stringify(e)===JSON.stringify(t))return s.push(i),!0}))?o[i].push(e):n[i].push(e)})),void t[i].forEach(((e,t)=>{-1===s.indexOf(t)&&r[i].push(e)}))}}function jM(e){const{send:t,recv:i,sendrecv:n}=e;if(!n){if(!t||!i)throw new Error(\"cannot merge rtp capabilities because one of send or recv is empty!\");return{send:t,recv:i}}let r,o;return t?(r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r.audioCodecs=[...t.audioCodecs,...n.audioCodecs],r.videoCodecs=[...t.videoCodecs,...n.videoCodecs],r.audioExtensions=[...t.audioExtensions,...n.audioExtensions],r.videoExtensions=[...t.videoExtensions,...n.videoExtensions]):r=n,i?(o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},o.audioCodecs=[...i.audioCodecs,...n.audioCodecs],o.videoCodecs=[...i.videoCodecs,...n.videoCodecs],o.audioExtensions=[...i.audioExtensions,...n.audioExtensions],o.videoExtensions=[...i.videoExtensions,...n.videoExtensions]):o=n,{send:r,recv:o}}function GM(e){if(\"audio\"!==e.media.mediaType)return;e.attributes.payloads.filter((e=>{var t;return\"opus\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})).forEach((e=>{e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"}))}function WM(e,t,i,n){let r=[];if(e===Yb.VIDEO){if(Dy(\"H264_PROFILE_LEVEL_ID\")&&\"h264\"===n&&(r=t.videoCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)&&e&&e.fmtp&&e.fmtp.parameters[\"profile-level-id\"]===Dy(\"H264_PROFILE_LEVEL_ID\")}))),!Array.isArray(r)||0===r.length){let e=[];const o=[],s=[],a=[];if(i.videoCodecs.forEach((t=>{const i=t.rtpMap&&t.rtpMap.encodingName.toLowerCase()||\"\";Dn(i).call(i,n)?e.push(t):Dn(i).call(i,\"vp9\")?o.push(t):Dn(i).call(i,\"vp8\")?s.push(t):Dn(i).call(i,\"h264\")&&a.push(t)})),0===e.length){let t=\"\";0!==o.length?(e=o,t=\"vp9\"):0!==s.length?(e=s,t=\"vp8\"):0!==a.length&&(e=a,t=\"h264\"),Qy.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to default payloads: \").concat(t))}0!==e.length&&(r=t.videoCodecs.filter((t=>e.some((e=>e.payloadType===t.payloadType)))))}if(0===r.length&&(Qy.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to default payloads: \").concat(t.videoCodecs[0].rtpMap&&t.videoCodecs[0].rtpMap.encodingName)),r=t.videoCodecs),Dy(\"USE_PUB_RTX\")||Dy(\"USE_SUB_RTX\")){const e=HM(r,t.videoCodecs);r=[...r,...e]}}else r=t.audioCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,n)})),0===r.length&&(Qy.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to opus\")),r=t.audioCodecs.filter((e=>{var t;return Dn(t=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(t,\"opus\")})));return r}function HM(e,t){const i=e.map((e=>e.payloadType.toString()));return t.filter((e=>e.rtpMap&&\"rtx\"===e.rtpMap.encodingName&&e.fmtp&&e.fmtp.parameters.apt&&Dn(i).call(i,e.fmtp&&e.fmtp.parameters.apt)))}async function KM(e,t,i){const n=t.toString(),r=qM(n,\"offer\",\"remote\",\"exchangeSDP\");await e.setRemoteDescription({type:\"offer\",sdp:n});const o=await e.createAnswer();if(!o.sdp)throw new Error(\"cannot get answer sdp\");let s=o.sdp;s=YM(s,i||{}),null==r||r(s||\"\"),await e.setLocalDescription({type:\"answer\",sdp:s})}function YM(e,t,i){const n=CM.parse(e),{useXR:r}=t;return n.mediaDescriptions.forEach((e=>{var t;e.attributes.mid&&(Array.isArray(i)&&!Dn(i).call(i,e.attributes.mid)||(\"audio\"===e.media.mediaType&&GM(e),r&&Dn(t=[\"audio\",\"video\"]).call(t,e.media.mediaType)&&e.attributes.payloads.forEach((e=>{-1===e.rtcpFeedbacks.findIndex((e=>\"rrtr\"===e.type))&&e.rtcpFeedbacks.push({type:\"rrtr\"})}))))})),CM.print(n)}function qM(e,t,i,n){if(Dy(\"SDP_LOGGING\"))return Qy.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{qM(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}function zM(e,t){return typeof Dy(e)===t?Dy(e):void 0}function JM(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function XM(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?JM(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):JM(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const QM=new Map;class ZM extends Sv{get state(){return this._state}set state(e){if(e===this._state)return;const t=this._state;this._state=e,\"DISCONNECTED\"===e&&this._disconnectedReason?this.emit(Ub.CONNECTION_STATE_CHANGE,e,t,this._disconnectedReason):this.emit(Ub.CONNECTION_STATE_CHANGE,e,t)}get joinGatewayStartTime(){return this._joinGatewayStartTime}set joinGatewayStartTime(e){Qy.debug(\"[\".concat(this.store.clientId,\"] set joinGatewayStartTime at \").concat(e)),this._joinGatewayStartTime=e}constructor(e,t){super(),og(this,\"store\",void 0),og(this,\"joinInfo\",void 0),og(this,\"key\",void 0),og(this,\"ntpOffset\",0),og(this,\"signal\",void 0),og(this,\"role\",void 0),og(this,\"inChannelInfo\",{joinAt:null,duration:0}),og(this,\"spec\",void 0),og(this,\"_state\",\"DISCONNECTED\"),og(this,\"_statsCollector\",void 0),og(this,\"_disconnectedReason\",void 0),og(this,\"isSignalRecover\",!1),og(this,\"hasChangeBGPAddress\",!1),og(this,\"trafficStatsInterval\",void 0),og(this,\"networkQualityInterval\",void 0),og(this,\"_joinGatewayStartTime\",0),og(this,\"_signalTimeout\",!1),og(this,\"_clientRoleOptions\",void 0),og(this,\"_isProactiveJoin\",!1),this.store=e,this.spec=t,this.signal=this.store.useP2P?new gM(XM(XM({},t),{},{retryConfig:t.websocketRetryConfig}),e):new ww(XM(XM({},t),{},{retryConfig:t.websocketRetryConfig}),e),this._statsCollector=t.statsCollector,this.role=t.role||\"audience\",this._clientRoleOptions=t.clientRoleOptions,this.handleSignalEvents()}async join(e,t,i){this.store.joinGatewayStart(),\"disabled\"!==e.cloudProxyServer&&(this.hasChangeBGPAddress=!0);const n=Date.now();let r=QM.get(e.cname);if(r||(r=new Map,QM.set(e.cname,r)),this._isProactiveJoin=!0,r.has(e.uid)){const t=new Sb(nv.UID_CONFLICT);throw sA.joinGateway(e.sid,{lts:n,succ:!1,ec:t.code,addr:null,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!e.proxyServer,signalChannel:\"0\",preload:e.preload}),this._isProactiveJoin=!1,t}r.set(e.uid,!0),this.joinInfo=e,this.key=t;let o=0;this.joinGatewayStartTime=n;const s=e.proxyServer;try{Qy.debug(\"[\".concat(this.store.clientId,\"] use websocket join uid \").concat(o));const t=e.gatewayAddrs.map((t=>{let{address:i}=t;const[n,r]=i.split(\":\"),o={host:n,port:r};return e.proxyServer&&(o.proxy=e.proxyServer),o}));o=(await this.signal.init(t,i)).uid,Qy.debug(\"[\".concat(this.store.clientId,\"] websocket join uid \").concat(o,\" cost \").concat(Date.now()-this.joinGatewayStartTime))}catch(t){var a;throw Qy.error(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),sA.joinGateway(e.sid,{lts:n,succ:!1,ec:(null===(a=t.data)||void 0===a?void 0:a.desc)||t.code,errorMsg:t.message,addr:this.signal.url,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!s,signalChannel:\"0\",preload:e.preload}),this._isProactiveJoin=!1,r.delete(e.uid),this.signal.close(),t}return this.state=\"CONNECTED\",this.inChannelInfo.joinAt=Date.now(),Qy.debug(\"[\".concat(this.store.clientId,\"] Connected to gateway server\")),this.trafficStatsInterval=window.setInterval((()=>{this.updateTrafficStats().catch((e=>{Qy.warning(\"[\".concat(this.store.clientId,\"] get traffic stats error\"),e.toString())}))}),3e3),this.networkQualityInterval=window.setInterval((()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit(Ub.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit(Ub.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):\"CONNECTED\"===this.state&&this._statsCollector.trafficStats?this.emit(Ub.NETWORK_QUALITY,{uplinkNetworkQuality:Uw(this._statsCollector.trafficStats.B_unq),downlinkNetworkQuality:Uw(this._statsCollector.trafficStats.B_dnq)}):this.emit(Ub.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})}),2e3),this.store.joinGatewayEnd(),o}async leave(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;if(\"DISCONNECTED\"!==this.state){t!==Av.FALLBACK&&(this.state=\"DISCONNECTING\");try{e||this.signal.connectionState!==hb.CONNECTED||await function(e,t){return t===1/0?e:Gh.race([e,Zv(t)])}(this.signal.request(_b.LEAVE,void 0,!0),3e3)}catch(e){Qy.warning(\"[\".concat(this.store.clientId,\"] leave request failed, ignore\"),e)}this.signal.close(t),t!==Av.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()}}async publish(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const n={state:\"offer\",p2p_id:this.store.p2pId,ortc:t,mode:this.spec.mode,extend:Dy(\"PUB_EXTEND\"),twcc:!!Dy(\"PUBLISH_TWCC\"),rtx:!!Dy(\"USE_PUB_RTX\")};try{return(await this.signal.request(_b.PUBLISH,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===ub.ERR_PUBLISH_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] receive publish error code, retry\"),n.toString()),await this.tryUnpubBeforeRepub(e,t),this.publish(e,t,!1);throw n}}async publishDataChannel(e,t,i){var n;if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const r={stream_id:t.streamId,ordered:t.ordered?1:0,max_retrans_times:null!==(n=t.maxRetransmits)&&void 0!==n?n:10,channel_id:t.channelId,metadata:t.metadata};try{await this.signal.request(_b.PUBLISH_DATASTREAM,r,!0)}catch(n){if(i&&n.data&&n.data.code===ub.ERR_PUBLISH_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] receive publish datachannels error code, retry\"),n.toString()),await this.tryUnpubDataChannelBeforeRepub(e,t),this.publishDataChannel(e,t,!1);throw n}}async unpublish(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await this.signal.request(_b.UNPUBLISH,{stream_id:t,ortc:e},!0)}catch(e){Qy.warning(\"[\".concat(this.store.clientId,\"] unpublish warning: \"),e)}}async unpublishDataChannel(e){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await Gh.all(e.map((e=>this.signal.request(_b.UNPUBLISH_DATASTREAM,{channel_id:e},!0))))}catch(e){Qy.warning(\"unpublish datachannels warning: \",e)}}async presubscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not presubscribe when connection state is \".concat(this.state));const n={stream_id:e,stream_type:t,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,twcc:!!Dy(\"SUBSCRIBE_TWCC\"),rtx:!!Dy(\"USE_SUB_RTX\")||void 0,extend:Dy(\"SUB_EXTEND\"),svc:Array.isArray(Dy(\"SVC\"))&&0!==Dy(\"SVC\").length?Dy(\"SVC\"):void 0};try{return await this.signal.request(_b.PRE_SUBSCRIBE,n,!0)}catch(n){if(i&&n.data&&n.data.code===ub.ERR_SUBSCRIBE_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] pre-subscribe error, retry\"),n.toString()),this.presubscribe(e,t,!1);throw n}}async subscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not subscribe when connection state is \".concat(this.state));const n={stream_id:e,stream_type:t.stream_type,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,twcc:!!Dy(\"SUBSCRIBE_TWCC\"),rtx:!!Dy(\"USE_SUB_RTX\"),extend:Dy(\"SUB_EXTEND\"),ssrcId:t.ssrcId,svc:Array.isArray(Dy(\"SVC\"))&&0!==Dy(\"SVC\").length?Dy(\"SVC\"):void 0};try{return(await this.signal.request(_b.SUBSCRIBE,n,!0))._message}catch(n){if(i&&n.data&&n.data.code===ub.ERR_SUBSCRIBE_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe error code, retry\"),n.toString()),await this.tryUnsubBeforeResub(e,t),await this.subscribe(e,t,!1);throw n}}async subscribeDataChannel(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not subscribe datachannel when connection state is \".concat(this.state));const n={uid:e,stream_id:t.id,channel_id:t.datachannelId};try{return void await this.signal.request(_b.SUBSCRIBE_DATASTREAM,n,!0)}catch(n){if(i&&n.data&&n.data.code===ub.ERR_SUBSCRIBE_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe datachannel error code, retry\"),n.toString()),await this.tryUnsubDataChannelBeforeResub(e,t),await this.subscribeDataChannel(e,t,!1);throw n}}async subscribeAll(e,t){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not massSubscribe when connection state is \".concat(this.state));const i={p2p_id:this.store.p2pId,users:e,dtx:!1,rtx:!!Dy(\"USE_SUB_RTX\"),twcc:!!Dy(\"SUBSCRIBE_TWCC\"),svc:Array.isArray(Dy(\"SVC\"))&&0!==Dy(\"SVC\").length?Dy(\"SVC\"):void 0};try{return await this.signal.request(_b.SUBSCRIBE_STREAMS,i,!0)}catch(i){if(t&&i.data&&i.data.code===ub.ERR_SUBSCRIBE_REQUEST_INVALID)return Qy.warning(\"[\".concat(this.store.clientId,\"] receiver massSubscribe error code, retry\"),i.toString()),await this.tryMassUnsubBeforeResub(e),await this.subscribeAll(e,!1);throw i}}async setVideoProfile(e){const t=function(e){if(!(e.bitrateMax&&e.bitrateMin&&e.frameRate&&e.height&&e.width))return;let t=e.frameRate,i=e.width,n=e.height,r=!0;return\"number\"!=typeof t&&(t=t.exact||t.ideal||t.max||t.min||0,t||(r=!1)),\"number\"!=typeof i&&(i=i.exact||i.ideal||i.max||i.min||0,i||(r=!1)),\"number\"!=typeof n&&(n=n.exact||n.ideal||n.max||n.min||0,t||(r=!1)),r?{stream_type:0,width:i,height:n,fps:t,start_bps:1e3*e.bitrateMax,min_bps:1e3*e.bitrateMin,target_bps:1e3*e.bitrateMax}:void 0}(e);if(t)return this.signal.request(_b.SET_VIDEO_PROFILE,t);Qy.debug(\"[\".concat(this.store.clientId,\"] encoder config is not complete, do not report to gateway\"))}async unsubscribe(e,t){try{await this.signal.request(_b.UNSUBSCRIBE,{p2p_id:this.store.p2pId,ortc:e,stream_id:t},!0)}catch(e){Qy.warning(\"[\".concat(this.store.clientId,\"] unsubscribe warning: \"),e)}}async unsubscribeDataChannel(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new Sb(nv.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await Gh.all(e.map((e=>this.signal.request(_b.UNSUBSCRIBE_DATASTREAM,{stream_id:e,uid:t},!0))))}catch(e){Qy.warning(\"unsubscribeDataChannel warning: \",e)}}async massUnsubscribe(e){try{await this.signal.request(_b.UNSUBSCRIBE_STREAMS,e,!0)}catch(e){Qy.warning(\"[\".concat(this.store.clientId,\"] massUnsubscribeAll warning: \"),e)}}async reconnectPC(e){const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=e;return{gatewayEstablishParams:await this.signal.request(_b.CONNECT_PC,{p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}},!0),gatewayAddress:this.getCurrentGatewayAddress()}}getGatewayInfo(){return this.signal.request(_b.GATEWAY_INFO)}async renewToken(e){await this.signal.request(_b.RENEW_TOKEN,e),this.key=e.token}async setClientRole(e,t){if(t&&(this._clientRoleOptions=Object.assign({},t)),\"CONNECTED\"!==this.state)return void(this.role=e);let i,n=0;\"audience\"===e?this._clientRoleOptions&&this._clientRoleOptions.delay?(i=this._clientRoleOptions.delay,n=1):n=this._clientRoleOptions&&this._clientRoleOptions.level?this._clientRoleOptions.level:2:n=0,await this.signal.request(_b.SET_CLIENT_ROLE,{role:e,level:n,delay:i,client_ts:Date.now()}),this.role=e}async setRemoteVideoStreamType(e,t){await this.signal.request(_b.SWITCH_VIDEO_STREAM,{stream_id:e,stream_type:t})}async setDefaultRemoteVideoStreamType(e){await this.signal.request(_b.DEFAULT_VIDEO_STREAM,{stream_type:e})}async setStreamFallbackOption(e,t){await this.signal.request(_b.SET_FALLBACK_OPTION,{stream_id:e,fallback_type:t})}async pickSVCLayer(e,t){await this.signal.request(_b.PICK_SVC_LAYER,{stream_id:e,spatial_layer:t.spatialLayer,temporal_layer:t.temporalLayer})}async setRTM2Flag(e){await this.signal.request(_b.SET_RTM2_FLAG,{rtm2_flag:e})}async sendExtensionMessage(e,t,i){if(this.signal instanceof gM)return this.signal.sendExtensionMessage(e,t,i)}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt),XM({},this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(_b.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){const e=QM.get(this.joinInfo.cname);e&&e.delete(this.joinInfo.uid)}this.joinInfo=void 0,this.key=void 0,this.networkQualityInterval&&(window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(!this.joinInfo)return;const e=function(e){let t;return t=e.startsWith(\"dc\")?e.match(/(dc\\:\\/\\/)?([^:]+):(\\d+)/):e.match(/(wss\\:\\/\\/)?([^:]+):(\\d+)/),t?{username:cA.username,password:cA.password,turnServerURL:t[2],tcpport:parseInt(t[3])+30,udpport:parseInt(t[3])+30,forceturn:!1}:null}((\"disabled\"===this.joinInfo.cloudProxyServer?this.signal.url:this.joinInfo.gatewayAddrs[this.signal.currentURLIndex].address)||\"\");this.joinInfo.turnServer.serversFromGateway=[],e&&\"off\"!==this.joinInfo.turnServer.mode&&\"disabled\"===this.joinInfo.cloudProxyServer&&this.joinInfo.turnServer.serversFromGateway.push(XM(XM({},cA),{},{turnServerURL:e.turnServerURL,tcpport:e.tcpport,udpport:e.udpport,username:this.joinInfo.uid.toString(),password:this.joinInfo.token}))}async updateTrafficStats(){if(\"CONNECTED\"!==this.state)return;const e=await this.signal.request(_b.TRAFFIC_STATS,void 0,!0);e.timestamp=Date.now(),null!=e.ntp_offset&&(this.ntpOffset=e.ntp_offset),e.peer_delay.forEach((e=>{const t=this._statsCollector.trafficStats&&this._statsCollector.trafficStats.peer_delay.find((t=>t.peer_uid===e.peer_uid));t&&t.B_st!==e.B_st&&jv((()=>{this.emit(Ub.STREAM_TYPE_CHANGE,e.peer_uid,e.B_st)}))})),this._statsCollector.updateTrafficStats(e)}getJoinMessage(e){if(!this.joinInfo||!this.key)throw new Sb(nv.UNEXPECTED_ERROR,\"can not generate join message, no join info\");const t=Object.assign({},this.joinInfo.apResponse);let i=Dy(\"REPORT_APP_SCENARIO\");if(\"string\"!=typeof i)try{i=JSON.stringify(i)}catch(e){i=void 0}i&&i.length>128&&(i=void 0);const n=!(kI()||xI(87)||xD())&&(\"boolean\"==typeof Dy(\"ENABLE_PRE_SUB\")&&Dy(\"ENABLE_PRE_SUB\")),r=!xD()&&zM(\"ENABLE_PREALLOC_PC\",\"boolean\"),o=XM({license:this.joinInfo.license,p2p_id:this.store.p2pId,session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:vy,browser:navigator.userAgent,process_id:Dy(\"PROCESS_ID\"),mode:this.store.useP2P?\"p2p\":this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:t,extend:Dy(\"JOIN_EXTEND\"),details:{6:this.joinInfo.stringUid,cservice_map:\"proxy3\"===this.joinInfo.cloudProxyServer?\"1\":\"proxy5\"===this.joinInfo.cloudProxyServer?\"2\":void 0},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo,appScenario:i,attributes:{userAttributes:{enablePublishedUserList:Dy(\"ENABLE_PUBLISHED_USER_LIST\"),maxSubscription:Dy(\"MAX_SUBSCRIPTION\"),subscribeAudioFilterTopN:\"number\"==typeof Dy(\"SUBSCRIBE_AUDIO_FILTER_TOPN\")?Dy(\"SUBSCRIBE_AUDIO_FILTER_TOPN\"):void 0,enablePublishAudioFilter:\"boolean\"==typeof Dy(\"ENABLE_PUBLISH_AUDIO_FILTER\")?Dy(\"ENABLE_PUBLISH_AUDIO_FILTER\"):void 0,enableUserLicenseCheck:\"boolean\"==typeof Dy(\"ENABLE_USER_LICENSE_CHECK\")?Dy(\"ENABLE_USER_LICENSE_CHECK\"):void 0,enableRTX:!0===Dy(\"USE_PUB_RTX\")||!0===Dy(\"USE_SUB_RTX\")||void 0,disableFEC:Dy(\"DISABLE_FEC\"),enableNTPReport:!!Dy(\"ENABLE_NTP_REPORT\")||void 0,enableInstantVideo:!!Dy(\"ENABLE_INSTANT_VIDEO\")||void 0,enableFulllinkAvSync:!!Dy(\"ENABLE_FULL_LINK_AV_SYNC\")||void 0,enableDataStream2:zM(\"ENABLE_DATASTREAM_2\",\"boolean\"),enableAutFeedback:!!Dy(\"ENABLE_AUT_FEEDBACK\")||void 0,rtm2Flag:\"number\"==typeof this.joinInfo.rtmFlag?this.joinInfo.rtmFlag:void 0,enableUserAutoRebalanceCheck:!!Dy(\"ENABLE_USER_AUTO_REBALANCE_CHECK\"),enableXR:zM(\"USE_XR\",\"boolean\"),enableLossbasedBwe:zM(\"ENABLE_LOSSBASED_BWE\",\"boolean\"),enableAutCC:!!Dy(\"ENABLE_AUT_CC\")||void 0,enableCCFallback:zM(\"ENABLE_CC_FALLBACK\",\"boolean\"),enablePreallocPC:r,preSubNum:n?zM(\"PRE_SUB_NUM\",\"number\"):void 0,enablePubTWCC:zM(\"PUBLISH_TWCC\",\"boolean\"),enableSubTWCC:zM(\"SUBSCRIBE_TWCC\",\"boolean\"),enablePubRTX:zM(\"USE_PUB_RTX\",\"boolean\"),enableSubRTX:zM(\"USE_SUB_RTX\",\"boolean\"),enableSubSVC:Dy(\"ENABLE_SVC\")?Dy(\"ENABLE_SVC_DEFAULT_CODECS\"):Array.isArray(Dy(\"SVC\"))&&0!==Dy(\"SVC\").length?Dy(\"SVC\"):void 0}},join_ts:this.joinGatewayStartTime},e);return this.joinInfo.stringUid&&(o.string_uid=this.joinInfo.stringUid),this.joinInfo.aesmode&&this.joinInfo.aespassword&&(o.aes_mode=this.joinInfo.aesmode,Dy(\"ENCRYPT_AES\")?(o.aes_secret=this.joinInfo.aespassword,o.aes_encrypt=!0):o.aes_secret=this.joinInfo.aespassword,this.joinInfo.aessalt&&(o.aes_salt=this.joinInfo.aessalt)),t.addresses[this.signal.websocket.currentURLIndex]&&(o.ap_response.ticket=t.addresses[this.signal.websocket.currentURLIndex].ticket,delete t.addresses),void 0!==this.joinInfo.defaultVideoStream&&(o.default_video_stream=this.joinInfo.defaultVideoStream),o}getRejoinMessage(){if(!this.joinInfo)throw new Sb(nv.UNEXPECTED_ERROR,\"can not generate rejoin message, no join info\");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(pb.WS_RECONNECT_WAITTING_FINISH,(e=>{var t;Dn(t=[\"tryNext\",\"recover\"]).call(t,e)&&this.joinInfo&&sA.adjustSessionStartTime(this.joinInfo.sid)})),this.signal.on(pb.WS_RECONNECT_CREATE_CONNECTION,(e=>{this.joinGatewayStartTime=Date.now()})),this.signal.on(pb.WS_RECONNECTING,(e=>{this.joinInfo&&sA.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:e||Dv.NETWORK_ERROR}),this.joinInfo&&(this.state=\"RECONNECTING\",sA.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode,stringUid:this.joinInfo.stringUid,channelProfile:\"live\"===this.spec.mode?1:0,channelMode:0,lsid:this.joinInfo.sid,clientRole:\"audience\"===this.role?2:1,buildFormat:2}),this.isSignalRecover=!1,this.joinGatewayStartTime=Date.now())})),this.signal.on(pb.WS_CLOSED,(e=>{let t;switch(e){case Av.LEAVE:t=Dv.LEAVE;break;case Av.UID_BANNED:case Av.IP_BANNED:case Av.CHANNEL_BANNED:case Av.SERVER_ERROR:t=Dv.SERVER_ERROR;break;case Av.FALLBACK:t=Dv.FALLBACK;break;case Av.LICENSE_MISSING:case Av.LICENSE_EXPIRED:case Av.LICENSE_MINUTES_EXCEEDED:case Av.LICENSE_PERIOD_INVALID:case Av.LICENSE_MULTIPLE_SDK_SERVICE:case Av.LICENSE_ILLEGAL:case Av.TOKEN_EXPIRE:t=e;break;default:t=Dv.NETWORK_ERROR}Qy.debug(\"[\".concat(this.store.clientId,\"] [signal] websocket closed, reason: \").concat(t||\"undefined -> \"+Dv.NETWORK_ERROR)),this.joinInfo&&sA.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:e===Av.LEAVE?1:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:t}),this._disconnectedReason=e,e!==Av.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()})),this.signal.on(pb.WS_CONNECTED,(()=>{if(this.updateTurnConfigFromSignal(),this.state=\"CONNECTED\",this.joinInfo&&(\"audience\"===this.role&&this._clientRoleOptions&&(this._clientRoleOptions.level||this._clientRoleOptions.delay)&&(Qy.debug(\"[\".concat(this.store.clientId,\"] patch to send set client role, role: \").concat(this.role,\", mode: \").concat(this.spec.mode,\", level: \").concat(this._clientRoleOptions.level,\", delay: \").concat(this._clientRoleOptions.delay)),this.setClientRole(this.role,this._clientRoleOptions)),sA.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:\"0\",preload:this.joinInfo.preload}),this._isProactiveJoin=!1,this.joinInfo.useLocalAccessPoint&&1===this.joinInfo.setLocalAPVersion)){const e=this.signal.url&&this.signal.url.match(/wss\\:\\/\\/([^:]+):(\\d+)/);if(!e)return void Qy.error(\"[\".concat(this.store.clientId,\"] set local access point after joined failed: \").concat(e));Ny(\"EVENT_REPORT_DOMAIN\",e[1]),Ny(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]),Ny(\"LOG_UPLOAD_SERVER\",\"\".concat(e[1],\":6444\"))}})),this.signal.on(mb.ON_UPLINK_STATS,(e=>{this._statsCollector.updateUplinkStats(e)})),this.signal.on(pb.REQUEST_RECOVER,((e,t,i)=>{if(!this.joinInfo)return i(new Sb(nv.UNEXPECTED_ERROR,\"gateway: can not recover, no join info\"));e&&(this.joinInfo.multiIP=e,this.hasChangeBGPAddress=!0),this.isSignalRecover=!0,kv(this,Ub.REQUEST_NEW_GATEWAY_LIST).then(t).catch(i)})),this.signal.on(pb.REQUEST_JOIN_INFO,(async e=>{var t;if(this.updateTurnConfigFromSignal(),this.store.useP2P)return void e(this.getJoinMessage({ortc:{}}));const{iceParameters:i,dtlsParameters:n,rtpCapabilities:r}=await kv(this,Ub.REQUEST_P2P_CONNECTION_PARAMS,{turnServer:null===(t=this.joinInfo)||void 0===t?void 0:t.turnServer});e(this.getJoinMessage({ortc:{iceParameters:i,dtlsParameters:n,rtpCapabilities:r,version:\"2\"}}))})),this.signal.on(pb.REQUEST_REJOIN_INFO,(e=>{e(this.getRejoinMessage())})),this.signal.on(pb.REPORT_JOIN_GATEWAY,((e,t)=>{if(!this.joinInfo)return;let i,n=\"\";var r;e instanceof Sb?(i=(null===(r=e.data)||void 0===r?void 0:r.desc)||e.code,n=e.message):i=e;sA.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:i,errorMsg:n,addr:t,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:\"0\",preload:this.joinInfo.preload}),this._isProactiveJoin=!1})),this.signal.on(pb.IS_P2P_DISCONNECTED,(e=>{e(xv(this,Ub.IS_P2P_DISCONNECTED))})),this.signal.on(pb.DISCONNECT_P2P,(()=>{this.emit(Ub.DISCONNECT_P2P)})),this.signal.on(pb.REQUEST_SUCCESS,(()=>{this._signalTimeout=!1})),this.signal.on(pb.REQUEST_TIMEOUT,(()=>{this._signalTimeout=!0})),this.signal.on(pb.JOIN_RESPONSE,(e=>{const t=this.getCurrentGatewayAddress();this.emit(Ub.JOIN_RESPONSE,e,t)})),this.signal.on(pb.PRE_CONNECT_PC,(async()=>{if(this.joinInfo){this.updateTurnConfigFromSignal();const e=this.getCurrentGatewayAddress(),t=Dy(\"FINGERPRINT\")||this.joinInfo.apResponse.addresses[this.signal.currentURLIndex].fingerprint;if(e&&t){const i=NM(e);this.emit(Ub.PRE_CONNECT_PC,{candidates:i,fingerprint:t})}}}))}async tryUnsubBeforeResub(e,t){try{await this.signal.request(_b.UNSUBSCRIBE,{p2p_id:this.store.p2pId,stream_id:e,ortc:[t]},!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] tryUnsubBeforeResub warning\"),e),e}}async tryUnsubDataChannelBeforeResub(e,t){try{await this.signal.request(_b.UNSUBSCRIBE,{stream_id:t.id},!0)}catch(e){throw Qy.warning(\"unsubscribe datachannel warning\",e),e}}async tryUnpubBeforeRepub(e,t){try{await this.signal.request(_b.UNPUBLISH,{stream_id:e,ortc:t},!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] tryUnpubBeforeRepub warning: \"),e),e}}async tryUnpubDataChannelBeforeRepub(e,t){try{await this.signal.request(_b.UNPUBLISH_DATASTREAM,{channnel_id:t.channelId},!0)}catch(e){throw Qy.warning(\"unpublish datastream warning: \",e),e}}async tryMassUnsubBeforeResub(e){const t={users:e.map((e=>({stream_id:e.stream_id,stream_type:e.stream_type})))};try{await this.signal.request(_b.UNSUBSCRIBE_STREAMS,t,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] tryMassUnsubBeforeResub warning\"),e),e}}async muteLocal(e,t){const i={action:e.find((e=>e.stream_type===Mb.Audio))?\"mute_local_audio\":\"mute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(_b.CONTROL,i,!0,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] gateway muteLocal warning: \"),e),e}}async unmuteLocal(e,t){const i={action:e.find((e=>e.stream_type===Mb.Audio))?\"unmute_local_audio\":\"unmute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(_b.CONTROL,i,!0,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteLocal warning: \"),e),e}}async muteRemote(e,t){const i={action:e===Yb.AUDIO?\"mute_remote_audio\":\"mute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(_b.CONTROL,i,!0,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] gateway muteRemote warning: \"),e),e}}async unmuteRemote(e,t){const i={action:e===Yb.AUDIO?\"unmute_remote_audio\":\"unmute_remote_video\",p2p_id:this.store.p2pId,stream_id:t};try{await this.signal.request(_b.CONTROL,i,!0,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] gateway unmuteRemote warning: \"),e),e}}uploadWRTCStats(e){this.signal.uploadWRTCStats(e)}upload(e,t){this.signal.upload(e,t)}getSignalRTT(){return this.signal.rtt}async restartICE(e){const t={p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:e};try{return await this.signal.request(_b.RESTART_ICE,t,!0)}catch(e){throw Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.restartICE warning: \"),e),e}}reconnect(){\"CONNECTED\"===this.state&&this.signal.reconnect(void 0,Dv.P2P_FAILED)}getCurrentGatewayAddress(){var e,t;if(!Dy(\"GATEWAY_WSS_ADDRESS\"))return Dy(\"USE_CANDIDATE_FROM_AP_DETAIL\")&&null!==(e=this.joinInfo)&&void 0!==e&&e.apGatewayAddress?(Qy.debug(\"[\".concat(this.store.clientId,\"] use candidate from ap detail, \").concat(JSON.stringify(this.joinInfo.apGatewayAddress))),this.joinInfo.apGatewayAddress):null!==(t=this.joinInfo)&&void 0!==t&&t.gatewayAddrs?this.joinInfo.gatewayAddrs[this.signal.currentURLIndex]:void 0}async setPublishAudioFilterEnabled(e){await this.signal.request(_b.SET_PARAMETER,{enablePublishAudioFilter:e})}}let $M=0,eU=0;function tU(e,t,i,n){return new Gh(((r,o)=>{t.timeout=t.timeout||Dy(\"HTTP_CONNECT_TIMEOUT\"),t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),$M+=Xv(t.data)):i&&(t.data.size?$M+=t.data.size:t.data instanceof FormData?$M+=Qv(t.data):$M+=Xv(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,EI.request(t).then((e=>{\"string\"==typeof e.data?eU+=Xv(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?eU+=e.data.byteLength:eU+=Xv(JSON.stringify(e.data)),n&&r({data:e.data,headers:e.headers}),r(e.data)})).catch((e=>{EI.isCancel(e)?o(new Sb(nv.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?o(new Sb(nv.NETWORK_TIMEOUT,e.message)):e.response?o(new Sb(nv.NETWORK_RESPONSE_ERROR,e.response.status)):o(new Sb(nv.NETWORK_ERROR,e.message))}))}))}\n/*! formdata-polyfill. MIT License. Jimmy W?rting <https://jimmy.warting.se/opensource> */!function(){var e;function i(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var n=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){return e==Array.prototype||e==Object.prototype||(e[t]=i.value),e};var r,o=function(e){e=[\"object\"==typeof globalThis&&globalThis,e,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof t&&t];for(var i=0;i<e.length;++i){var n=e[i];if(n&&n.Math==Math)return n}throw Error(\"Cannot find global object\")}(this);function s(e,t){if(t)e:{var i=o;e=e.split(\".\");for(var r=0;r<e.length-1;r++){var s=e[r];if(!(s in i))break e;i=i[s]}(t=t(r=i[e=e[e.length-1]]))!=r&&null!=t&&n(i,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function c(e){var t=\"undefined\"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):{next:i(e)}}if(s(\"Symbol\",(function(e){function t(e,t){this.A=e,n(this,\"description\",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.A};var i=\"jscomp_symbol_\"+(1e9*Math.random()>>>0)+\"_\",r=0;return function e(n){if(this instanceof e)throw new TypeError(\"Symbol is not a constructor\");return new t(i+(n||\"\")+\"_\"+r++,n)}})),s(\"Symbol.iterator\",(function(e){if(e)return e;e=Symbol(\"Symbol.iterator\");for(var t=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),r=0;r<t.length;r++){var s=o[t[r]];\"function\"==typeof s&&\"function\"!=typeof s.prototype[e]&&n(s.prototype,e,{configurable:!0,writable:!0,value:function(){return a(i(this))}})}return e})),\"function\"==typeof Object.setPrototypeOf)r=Object.setPrototypeOf;else{var d;e:{var l={};try{l.__proto__={a:!0},d=l.a;break e}catch(e){}d=!1}r=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+\" is not extensible\");return e}:null}var u=r;function h(){this.m=!1,this.j=null,this.v=void 0,this.h=1,this.u=this.C=0,this.l=null}function p(e){if(e.m)throw new TypeError(\"Generator is already running\");e.m=!0}function _(e,t){return e.h=3,{value:t}}function E(e){this.g=new h,this.G=e}function m(e,t,i,n){try{var r=t.call(e.g.j,i);if(!(r instanceof Object))throw new TypeError(\"Iterator result \"+r+\" is not an object\");if(!r.done)return e.g.m=!1,r;var o=r.value}catch(t){return e.g.j=null,e.g.s(t),f(e)}return e.g.j=null,n.call(e.g,o),f(e)}function f(e){for(;e.g.h;)try{var t=e.G(e.g);if(t)return e.g.m=!1,{value:t.value,done:!1}}catch(t){e.g.v=void 0,e.g.s(t)}if(e.g.m=!1,e.g.l){if(t=e.g.l,e.g.l=null,t.F)throw t.D;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function T(e){this.next=function(t){return e.o(t)},this.throw=function(t){return e.s(t)},this.return=function(t){return function(e,t){p(e.g);var i=e.g.j;return i?m(e,\"return\"in i?i.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),f(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e,t){return t=new T(new E(t)),u&&e.prototype&&u(t,e.prototype),t}if(h.prototype.o=function(e){this.v=e},h.prototype.s=function(e){this.l={D:e,F:!0},this.h=this.C||this.u},h.prototype.return=function(e){this.l={return:e},this.h=this.u},E.prototype.o=function(e){return p(this.g),this.g.j?m(this,this.g.j.next,e,this.g.o):(this.g.o(e),f(this))},E.prototype.s=function(e){return p(this.g),this.g.j?m(this,this.g.j.throw,e,this.g.o):(this.g.s(e),f(this))},s(\"Array.prototype.entries\",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+=\"\");var i=0,n=!1,r={next:function(){if(!n&&i<e.length){var r=i++;return{value:t(r,e[r]),done:!1}}return n=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e,t){return[e,t]}))}})),\"undefined\"!=typeof Blob&&(\"undefined\"==typeof FormData||!FormData.prototype.keys)){var g=function(e,t){for(var i=0;i<e.length;i++)t(e[i])},R=function(e){return e.replace(/\\r?\\n|\\r/g,\"\\r\\n\")},C=function(e,t,i){return t instanceof Blob?(i=void 0!==i?String(i+\"\"):\"string\"==typeof t.name?t.name:\"blob\",t.name===i&&\"[object Blob]\"!==Object.prototype.toString.call(t)||(t=new File([t],i)),[String(e),t]):[String(e),String(t)]},I=function(e,t){if(e.length<t)throw new TypeError(t+\" argument required, but only \"+e.length+\" present.\")},v=\"object\"==typeof globalThis?globalThis:\"object\"==typeof window?window:\"object\"==typeof self?self:this,y=v.FormData,A=v.XMLHttpRequest&&v.XMLHttpRequest.prototype.send,b=v.Request&&v.fetch,w=v.navigator&&v.navigator.sendBeacon,O=v.Element&&v.Element.prototype,N=v.Symbol&&Symbol.toStringTag;N&&(Blob.prototype[N]||(Blob.prototype[N]=\"Blob\"),\"File\"in v&&!File.prototype[N]&&(File.prototype[N]=\"File\"));try{new File([],\"\")}catch(e){v.File=function(e,t,i){return e=new Blob(e,i||{}),Object.defineProperties(e,{name:{value:t},lastModified:{value:+(i&&void 0!==i.lastModified?new Date(i.lastModified):new Date)},toString:{value:function(){return\"[object File]\"}}}),N&&Object.defineProperty(e,N,{value:\"File\"}),e}}var D=function(e){return e.replace(/\\n/g,\"%0A\").replace(/\\r/g,\"%0D\").replace(/\"/g,\"%22\")},P=function(e){this.i=[];var t=this;e&&g(e.elements,(function(e){if(e.name&&!e.disabled&&\"submit\"!==e.type&&\"button\"!==e.type&&!e.matches(\"form fieldset[disabled] *\"))if(\"file\"===e.type){var i=e.files&&e.files.length?e.files:[new File([],\"\",{type:\"application/octet-stream\"})];g(i,(function(i){t.append(e.name,i)}))}else\"select-multiple\"===e.type||\"select-one\"===e.type?g(e.options,(function(i){!i.disabled&&i.selected&&t.append(e.name,i.value)})):\"checkbox\"===e.type||\"radio\"===e.type?e.checked&&t.append(e.name,e.value):(i=\"textarea\"===e.type?R(e.value):e.value,t.append(e.name,i))}))};if((e=P.prototype).append=function(e,t,i){I(arguments,2),this.i.push(C(e,t,i))},e.delete=function(e){I(arguments,1);var t=[];e=String(e),g(this.i,(function(i){i[0]!==e&&t.push(i)})),this.i=t},e.entries=function e(){var t,i=this;return S(e,(function(e){if(1==e.h&&(t=0),3!=e.h)return t<i.i.length?e=_(e,i.i[t]):(e.h=0,e=void 0),e;t++,e.h=2}))},e.forEach=function(e,t){I(arguments,1);for(var i=c(this),n=i.next();!n.done;n=i.next()){var r=c(n.value);n=r.next().value,r=r.next().value,e.call(t,r,n,this)}},e.get=function(e){I(arguments,1);var t=this.i;e=String(e);for(var i=0;i<t.length;i++)if(t[i][0]===e)return t[i][1];return null},e.getAll=function(e){I(arguments,1);var t=[];return e=String(e),g(this.i,(function(i){i[0]===e&&t.push(i[1])})),t},e.has=function(e){I(arguments,1),e=String(e);for(var t=0;t<this.i.length;t++)if(this.i[t][0]===e)return!0;return!1},e.keys=function e(){var t,i,n,r,o=this;return S(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,r=c(n),_(e,r.next().value));i=t.next(),e.h=2}))},e.set=function(e,t,i){I(arguments,2),e=String(e);var n=[],r=C(e,t,i),o=!0;g(this.i,(function(t){t[0]===e?o&&(o=!n.push(r)):n.push(t)})),o&&n.push(r),this.i=n},e.values=function e(){var t,i,n,r,o=this;return S(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(n=i.value,(r=c(n)).next(),_(e,r.next().value));i=t.next(),e.h=2}))},P.prototype._asNative=function(){for(var e=new y,t=c(this),i=t.next();!i.done;i=t.next()){var n=c(i.value);i=n.next().value,n=n.next().value,e.append(i,n)}return e},P.prototype._blob=function(){var e=\"----formdata-polyfill-\"+Math.random(),t=[],i=\"--\"+e+'\\r\\nContent-Disposition: form-data; name=\"';return this.forEach((function(e,n){return\"string\"==typeof e?t.push(i+D(R(n))+'\"\\r\\n\\r\\n'+R(e)+\"\\r\\n\"):t.push(i+D(R(n))+'\"; filename=\"'+D(e.name)+'\"\\r\\nContent-Type: '+(e.type||\"application/octet-stream\")+\"\\r\\n\\r\\n\",e,\"\\r\\n\")})),t.push(\"--\"+e+\"--\"),new Blob(t,{type:\"multipart/form-data; boundary=\"+e})},P.prototype[Symbol.iterator]=function(){return this.entries()},P.prototype.toString=function(){return\"[object FormData]\"},O&&!O.matches&&(O.matches=O.matchesSelector||O.mozMatchesSelector||O.msMatchesSelector||O.oMatchesSelector||O.webkitMatchesSelector||function(e){for(var t=(e=(this.document||this.ownerDocument).querySelectorAll(e)).length;0<=--t&&e.item(t)!==this;);return-1<t}),N&&(P.prototype[N]=\"FormData\"),A){var L=v.XMLHttpRequest.prototype.setRequestHeader;v.XMLHttpRequest.prototype.setRequestHeader=function(e,t){L.call(this,e,t),\"content-type\"===e.toLowerCase()&&(this.B=!0)},v.XMLHttpRequest.prototype.send=function(e){e instanceof P?(e=e._blob(),this.B||this.setRequestHeader(\"Content-Type\",e.type),A.call(this,e)):A.call(this,e)}}b&&(v.fetch=function(e,t){return t&&t.body&&t.body instanceof P&&(t.body=t.body._blob()),b.call(this,e,t)}),w&&(v.navigator.sendBeacon=function(e,t){return t instanceof P&&(t=t._asNative()),w.call(this,e,t)}),v.FormData=P}}();const iU=()=>{const e=Dy(\"AREAS\");0===e.length&&e.push(Fb.GLOBAL);return Jn(e).call(e,((e,t,i)=>{const n=nU(t);return n?0===i?n:\"\".concat(e,\",\").concat(n):e}),\"\")},nU=e=>e===Fb.OVERSEA?\"\".concat(jb.ASIA,\",\").concat(jb.EUROPE,\",\").concat(jb.AFRICA,\",\").concat(jb.NORTH_AMERICA,\",\").concat(jb.SOUTH_AMERICA,\",\").concat(jb.OCEANIA):jb[e],rU=e=>{const t={CODE:\"\",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[],PROXY_SERVER_TYPE3:[]};return e.map((e=>{const i=Gb[e],n=Object.keys(i);n&&n.map((e=>{\"CODE\"!==e&&(t[e]=t[e].concat(i[e]))}))})),t},oU={GLOBAL:{ASIA:[Fb.CHINA,Fb.JAPAN,Fb.INDIA,Fb.KOREA,Fb.HKMC],EUROPE:[],NORTH_AMERICA:[Fb.US],SOUTH_AMERICA:[],OCEANIA:[],AFRICA:[]}},sU=Object.keys(oU[Fb.GLOBAL]),aU=[Fb.CHINA,Fb.NORTH_AMERICA,Fb.EUROPE,Fb.ASIA,Fb.JAPAN,Fb.INDIA,Fb.OCEANIA,Fb.SOUTH_AMERICA,Fb.AFRICA,Fb.KOREA,Fb.HKMC,Fb.US],cU=function(e,t){let i=[];if(Dn(e).call(e,Fb.GLOBAL)){const o=[Fb.GLOBAL,Fb.OVERSEA],s=Object.keys(Gb);if(t===Fb.GLOBAL)throw new Sb(nv.INVALID_PARAMS,\"GLOBAL is an invalid excludedArea value\");if(t===Fb.CHINA)i=[Fb.OVERSEA];else if(r=t,Dn(sU).call(sU,r)){const e=(n=t,oU[Fb.GLOBAL][n]||[]),r=[...o,t,...e];i=s.filter((e=>!Dn(r).call(r,e)))}else if(function(e){let t=!1;return sU.forEach((i=>{var n;Dn(n=oU[Fb.GLOBAL][i]).call(n,e)&&(t=!0)})),t}(t)){const e=function(e){let t;return sU.forEach((i=>{var n;Dn(n=oU[Fb.GLOBAL][i]).call(n,e)&&(t=i)})),t}(t),n=[...o,e,t];i=s.filter((e=>!Dn(n).call(n,e)))}else i=e;i=function(e){const t=[];return aU.forEach((i=>{Dn(e).call(e,i)&&t.push(i)})),t.concat(e.filter((e=>!Dn(aU).call(aU,e))))}(i)}else i=e;var n,r;return i};function dU(e){var t,i;if(!e&&Dn(t=Dy(\"AREAS\")).call(t,Fb.EXTENSIONS))return Qy.debug(\"update area from ap : reset\"),void lU(aA,!0);if(!Dn(i=Dy(\"AREAS\")).call(i,Fb.GLOBAL)||!e)return;let n=Gb.EXTENSIONS;n&&(n={CODE:nU(Fb.EXTENSIONS),WEBCS_DOMAIN:[\"ap-web-1-\".concat(e,\".agora.io\")],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],PROXY_CS:[\"proxy-ap-web-\".concat(e,\".agora.io\")],CDS_AP:[\"cds-ap-web-1-\".concat(e,\".agora.io\"),\"cds-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],ACCOUNT_REGISTER:[\"sua-ap-web-1-\".concat(e,\".agora.io\"),\"sua-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],UAP_AP:[\"uap-ap-web-1-\".concat(e,\".agora.io\"),\"uap-ap-web-2-\".concat(e,\".ap.sd-rtn.com\")],EVENT_REPORT_DOMAIN:[\"statscollector-1-\".concat(e,\".agora.io\")],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-\".concat(e,\".agora.io\")],LOG_UPLOAD_SERVER:[\"logservice-\".concat(e,\".agora.io\")],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy-\".concat(e,\".agora.io\")]},Qy.debug(\"update area from ap success: \".concat(e,\",config is \"),n),Ny(\"AREAS\",[Fb.EXTENSIONS],!0),Object.keys(n).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){Ny(e,n[e][0])}else Ny(e,n[e])})))}function lU(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=sA.reportApiInvoke(null,{name:Cv.SET_AREA,options:e,tag:Iv.TRACER});try{let n=[];if(\"string\"==typeof e&&(n=[e]),Array.isArray(e)&&(e.forEach((e=>{if(!Dn(Bb).call(Bb,e))throw new Sb(nv.INVALID_PARAMS,\"invalid area code\")})),n=e),\"[object Object]\"===Object.prototype.toString.call(e)){const{areaCode:t,excludedArea:i}=e;if(!t)throw new Sb(nv.INVALID_PARAMS,\"area code is needed\");let r=t;\"string\"==typeof t&&(r=[t]),n=i?cU(r,i):r}if(!t){if(Py.AREAS){const e=new Sb(nv.PROHIBITED_OPERATION,\"setArea is prohibited because of config-distribute\");return i.onError(e),void Qy.warning(\"setArea is prohibited because of config-distribute\")}if(Dn(n).call(n,Fb.GLOBAL)&&Dy(\"AREAS\")===Fb.EXTENSIONS){const e=new Sb(nv.PROHIBITED_OPERATION,\"setArea is prohibited because of ap extensions\");return i.onError(e),void Qy.warning(\"setArea is prohibited because of ap extensions\")}}Ny(\"AREAS\",n,t);const r=rU(n);Object.keys(r).map((e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){Ny(e,r[e][0])}else Ny(e,r[e])})),Qy.debug(\"set area success:\",n.join(\",\"))}catch(e){throw i.onError(e),e}i.onSuccess()}function uU(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function hU(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?uU(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):uU(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let pU=1;function _U(e,t,i,n,r){pU+=1;const o={sid:i.sid,command:\"convergeAllocateEdge\",uid:\"666\",appId:i.appId,ts:Math.floor(Date.now()/1e3),seq:pU,requestId:pU,version:vy,cname:i.cname},s={service_name:t,json_body:JSON.stringify(o)};let a,c,d=e[0];return my((async()=>{a=Date.now();const e=await tU(d,{data:s,cancelToken:n,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"}});if(c=Date.now()-a,0!==e.code){const t=new Sb(nv.UNEXPECTED_RESPONSE,\"live streaming ap error, code\"+e.code,{retry:!0,responseTime:c});throw Qy.error(t.toString()),t}const i=JSON.parse(e.json_body);if(200!==i.code){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"live streaming app center error, code: \".concat(i.code,\", reason: \").concat(i.reason),{code:i.code,responseTime:c});throw Qy.error(e.toString()),e}if(!i.servers||0===i.servers.length){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"live streaming app center empty server\",{code:i.code,responseTime:c});throw Qy.error(e.toString()),e}const r=function(e,t){return{addressList:e.servers.map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(Dy(\"WORKER_DOMAIN\"),\":\").concat(e.wss,\"?serviceName=\").concat(encodeURIComponent(t)))),workerToken:e.workerToken,vid:e.vid}}(i,t);return Dy(\"LIVE_STREAMING_ADDRESS\")&&(r.addressList=Dy(\"LIVE_STREAMING_ADDRESS\")instanceof Array?Dy(\"LIVE_STREAMING_ADDRESS\"):[Dy(\"LIVE_STREAMING_ADDRESS\")]),hU(hU({},r),{},{responseTime:c})}),((n,r)=>(sA.apworkerEvent(i.sid,{success:!0,sc:200,serviceName:t,responseDetail:JSON.stringify(n.addressList),firstSuccess:0===r,responseTime:c,serverIp:e[r%e.length]}),!1)),((n,r)=>(sA.apworkerEvent(i.sid,{success:!1,sc:n.data&&n.data.code||200,serviceName:t,responseTime:c,serverIp:e[r%e.length]}),!!(n.code!==nv.OPERATION_ABORTED&&n.code!==nv.UNEXPECTED_RESPONSE||n.data&&n.data.retry)&&(d=e[(r+1)%e.length],!0))),r)}let EU=1;function mU(e,t,i,n){let{url:r,areaCode:o}=e;const{clientId:s,sid:a}=t,c=Date.now();let d;const[l,u]=RU(t,o,[Ow.CHOOSE_SERVER]);let h=Vv.networkState;return my((async()=>{h&&Vv.networkState===Pv.OFFLINE&&Vv.onlineWaiter&&await Gh.race([Vv.onlineWaiter,$v(n&&n.maxRetryTimeout||_y.maxRetryTimeout)]),h=Vv.networkState;const{data:e,headers:o}=await tU(r,{data:l,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);d=\"1\"===o.http3?1:-1,sA.reportResourceTiming(r,a),TU(e,r,t,c,[Ow.CHOOSE_SERVER],d);const s=xw(e,Ow.CHOOSE_SERVER);return SU(s),Lw(s,r)}),(e=>(e&&sA.joinChooseServer(a,{lts:c,succ:!0,csAddr:r,opid:u,serverList:e.gatewayAddrs.map((e=>e.address)),ec:null,cid:e.cid.toString(),uid:e.uid.toString(),csIp:e.csIp,unilbsServerIds:[Ow.CHOOSE_SERVER].toString(),isHttp3:d}),!1)),(e=>e.code!==nv.OPERATION_ABORTED&&(e.code===nv.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(sA.joinChooseServer(a,{lts:c,succ:!1,csAddr:r,serverList:null,opid:u,ec:e.code,csIp:e.data&&e.data.csIp,unilbsServerIds:[Ow.CHOOSE_SERVER].toString(),extend:JSON.stringify({networkState:h}),isHttp3:d}),Qy.warning(\"[\".concat(s||\"sid-\".concat(a.slice(0,6)),\"] Choose server network error, retry\"),e),!0))),n)}function fU(e,t,i,n){let r,{url:o,areaCode:s,serviceIds:a}=e;const c=Date.now(),[d,l]=RU(t,s,a);let u;return my((async()=>{u&&Vv.networkState===Pv.OFFLINE&&Vv.onlineWaiter&&await Gh.race([Vv.onlineWaiter,$v(n&&n.maxRetryTimeout||_y.maxRetryTimeout)]),u=Vv.networkState;const{data:e,headers:s}=await tU(o,{data:d,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);r=\"1\"===s.http3?1:-1,sA.reportResourceTiming(o,t.sid),TU(e,o,t,c,a,r);const l=xw(e,Ow.CHOOSE_SERVER),h=xw(e,\"proxy5\"===t.cloudProxyServer?Ow.CLOUD_PROXY_5:\"proxy3\"===t.cloudProxyServer||\"proxy4\"===t.cloudProxyServer?Ow.CLOUD_PROXY:Ow.CLOUD_PROXY_FALLBACK);return SU(l),{gatewayInfo:Lw(l,o),proxyInfo:h,url:o}}),(e=>(e.gatewayInfo&&sA.joinChooseServer(t.sid,{lts:c,succ:!0,csAddr:o,serverList:e.gatewayInfo.gatewayAddrs.map((e=>e.address)),ec:null,opid:l,cid:e.gatewayInfo.cid.toString(),uid:e.gatewayInfo.uid.toString(),csIp:e.gatewayInfo.csIp,unilbsServerIds:a.toString(),isHttp3:r}),e.proxyInfo&&sA.joinWebProxyAP(t.sid,{lts:c,sucess:1,apServerAddr:o,turnServerAddrList:e.proxyInfo.addresses.map((e=>e.ip)).join(\",\"),errorCode:null,eventType:t.cloudProxyServer,unilbsServerIds:a.toString()}),!1)),(e=>e.code!==nv.OPERATION_ABORTED&&(e.code===nv.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(sA.joinWebProxyAP(t.sid,{lts:c,sucess:0,apServerAddr:o,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer,unilbsServerIds:a.toString(),extend:JSON.stringify({networkState:u})}),Qy.warning(\"[\".concat(t.clientId,\"] multi unilbs network error, retry\"),e),!0))),n)}const TU=(e,t,i,n,r,o)=>{const{sid:s,clientId:a,cloudProxyServer:c}=i,d=[],l=i=>{4096===i.flag?sA.joinChooseServer(s,{lts:n,succ:!1,csAddr:t,opid:e.opid,serverList:null,ec:i.error.message,csIp:i.error.data&&i.error.data.csIp,unilbsServerIds:r.toString(),isHttp3:o}):1048576!==i.flag&&4194304!==i.flag&&4194310!==i.flag||sA.joinWebProxyAP(s,{lts:n,sucess:0,apServerAddr:t,turnServerAddrList:null,errorCode:i.error.code,eventType:c,unilbsServerIds:r.toString()})};if(e.response_body.forEach((t=>{const i=t.buffer.code;if(23===t.uri&&0===i&&!t.buffer.edges_services)if(4194310===t.buffer.flag)Qy.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\"),t.buffer.edges_services=[];else{const i={error:new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:t.buffer.flag};d.push(i),l(i)}if(0!==i){const n=uw(i),r={error:new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,n.desc,{desc:n.desc,retry:n.retry,csIp:e.detail[502]}),flag:t.buffer.flag};4194310===t.buffer.flag?Qy.warning(r.error.toString()):d.push(r),l(r)}})),d.length)throw Qy.warning(\"[\".concat(a||\"sid-\".concat(s.slice(0,6)),\"] multi unilbs \").concat(t,\" failed, \").concat(d.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message,\", retry: \").concat(e.error.data.retry))).join(\" | \"))),new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,d.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message))).join(\" | \"),{retry:!!d.find((e=>e.error.data.retry)),csIp:e.detail[502],desc:[...new Set(d.map((e=>{var t;return null==e||null===(t=e.error)||void 0===t||null===(t=t.data)||void 0===t?void 0:t.desc})).filter((e=>!!e)))]})},SU=e=>{var t,i,n,r;if(e.addresses&&0===e.addresses.length&&0===e.code)throw new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,\"void gateway address\",{retry:!0,csIp:e.detail&&e.detail[502]});Dy(\"AP_AREA\")&&(null!==(n=e.detail)&&void 0!==n&&n[23]&&\"string\"==typeof(null===(r=e.detail)||void 0===r?void 0:r[23])?dU(e.detail[23].toLowerCase()):dU());if(null!==(t=e.detail)&&void 0!==t&&t[19]&&\"string\"==typeof(null===(i=e.detail)||void 0===i?void 0:i[19])){const t=e.detail[19],i=null==t?void 0:t.split(\";\");for(let t=0;t<i.length;t++){var o;const n=jp(o=i[t]).call(o);e.addresses[t]&&i&&(e.addresses[t].fingerprint=n)}}if(Dy(\"GATEWAY_ADDRESS\")&&Dy(\"GATEWAY_ADDRESS\").length>0){Qy.debug(\"assign gateway address to\",Dy(\"GATEWAY_ADDRESS\"));const t=Dy(\"GATEWAY_ADDRESS\").map((t=>{var i,n;const r=null!==(i=null===(n=e.addresses.find((e=>e.ip===t.ip&&e.port===t.port)))||void 0===n?void 0:n.fingerprint)&&void 0!==i?i:\"\";return{ip:t.ip,port:t.port,ticket:e.addresses[0]&&e.addresses[0].ticket,fingerprint:r}}));e.addresses=t}},gU=(e,t)=>{if(e.response_body&&e.response_body.length){const t=e.response_body[0];if(0!==t.buffer.code){const e=uw(t.buffer.code);throw new Sb(nv.UPDATE_TICKET_FAILED,\"[\".concat(t.buffer.code,\"]: \").concat(e.desc),{retry:e.retry})}return t.buffer.ticket}throw Qy.debug(\"update ticket request received ap response without response body:\",t),new Sb(nv.UPDATE_TICKET_FAILED,\"cannot find response body from ap response\",{retry:!1})},RU=(e,t,i)=>{const n=Math.floor(Math.random()*10**12),r={appid:e.appId,client_ts:Date.now(),opid:n,sid:e.sid,request_bodies:[{uri:22,buffer:{cname:e.cname,detail:hU({6:e.stringUid,11:t,12:Dy(\"USE_NEW_TOKEN\")?\"1\":void 0,22:t},e.apRTM?{26:\"RTM2\"}:{}),key:e.token,service_ids:i,uid:e.uid||0}}]};r.request_bodies.forEach((t=>{e.multiIP&&e.multiIP.gateway_ip&&(t.buffer.detail[5]=JSON.stringify({vocs_ip:[e.multiIP.uni_lbs_ip],vos_ip:[e.multiIP.gateway_ip]}))}));const o=new FormData;return o.append(\"request\",JSON.stringify(r)),[o,n]},CU=(e,t)=>{const i=Math.floor(Math.random()*10**12),n={appid:e.appId,client_ts:Date.now(),opid:i,sid:e.sid,request_bodies:[{uri:28,buffer:{cname:e.cname,detail:{1:\"\",6:e.stringUid,12:\"1\"},token:e.token,service_ids:t,uid:e.uid||0,edges_services:e.apResponse.addresses.map((e=>({ip:e.ip,port:e.port})))}}]},r=new FormData;return r.append(\"request\",JSON.stringify(n)),[r,i]};let IU=0;function vU(e){return Gh.all(e.map((e=>e.then((e=>{throw e}),(e=>e))))).then((e=>{throw e}),(e=>e))}const yU=async e=>{let{fragementLength:t,referenceList:i,asyncMapHandler:n,allFailedhandler:r,promisesCollector:o}=e,s=0;const a=t;let c,d=0;const l=async()=>{const e=(()=>{const e=s*a,t=e+a;return i.slice(e,t).map(n)})();o&&o.push(...e);try{c=await vU(e)}catch(e){if(d+=a,s++,!(d>=i.length))return void await l();r(e)}e.forEach((e=>e.cancel()))};return await l(),c},AU=async e=>{let{referenceList:t,asyncMapHandler:i,closeFn:n}=e;const r=t.length;let o=0;const s=async()=>{const e=i(t.shift());try{return await e}catch(e){if(o++,o>=r||null!=n&&n(e))throw e;return s()}};return s()};async function bU(e,t,i,n){const r=async function(e,t,i,n){let r=null;const o=[],s=async()=>{const r=Dy(\"WEBCS_DOMAIN\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\")).map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:iU()}))),s=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),a=await yU({fragementLength:Dy(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(Qy.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),mU(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:o});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),a},a=async()=>{if(await $v(1e3),null!==r)return r;const s=Dy(\"WEBCS_DOMAIN_BACKUP_LIST\").map((t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:iU()}))),a=n.recordJoinChannelService({endTs:void 0,startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:s.map((e=>e.url))}),c=await yU({fragementLength:Dy(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:n=>(Qy.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),mU(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},a),e[0]},promisesCollector:o});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),c};try{return r=await vU([s(),a()]),o.length&&o.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),r}catch(e){throw e[0]}}(e,t,i,n);return{gatewayInfo:await r}}async function wU(e,t,i,n,r){const o=e.cloudProxyServer;if(\"disabled\"===o){if(!n)return;if(e.useLocalAccessPoint)return await bU(e,t,i,r);if(Dy(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")){const{gatewayInfo:n,proxyInfo:o}=await LU(e,t,i,r);if(e.turnServer&&\"auto\"!==e.turnServer.mode)return{gatewayInfo:n};const a=o.map((e=>({turnServerURL:e.address,tcpport:e.tcpport||cA.tcpport,udpport:e.udpport||cA.udpport,username:e.username||cA.username,password:e.password||cA.password,forceturn:!1,security:!0})));if(r.useP2P){var s;const t=null!==(s=e.uid)&&void 0!==s?s:n.uid,i=\"glb:\".concat(t.toString()),r=await Tv(i),c=o.map((e=>({turnServerURL:e.address,tcpport:e.tcpport||cA.tcpport,udpport:e.udpport||cA.udpport,username:i,password:r,forceturn:!1,security:!0})));a.push(...c)}return e.turnServer={mode:\"manual\",servers:a},{gatewayInfo:n}}return await bU(e,t,i,r)}const{proxyInfo:a,gatewayInfo:c}=await LU(e,t,i,r),d={gatewayInfo:c},l=a.map((e=>({turnServerURL:e.address,tcpport:\"proxy3\"===o?void 0:e.tcpport?e.tcpport:cA.tcpport,udpport:\"proxy4\"===o?void 0:e.udpport?e.udpport:cA.udpport,username:e.username||cA.username,password:e.password||cA.password,forceturn:\"proxy4\"!==o,security:\"proxy5\"===o})));if(r.useP2P){var u;const t=null!==(u=e.uid)&&void 0!==u?u:c.uid,i=\"glb:\".concat(t.toString()),n=await Tv(i),r=a.map((e=>({turnServerURL:e.address,tcpport:\"proxy3\"===o?void 0:e.tcpport||cA.tcpport,udpport:\"proxy4\"===o?void 0:e.udpport||cA.udpport,username:i,password:n,forceturn:\"proxy4\"!==o,security:\"proxy5\"===o})));l.push(...r)}return e.turnServer={mode:\"manual\",servers:l},Qy.debug(\"[\".concat(e.clientId,\"] set proxy server: \").concat(e.proxyServer,\", mode: \").concat(o)),d}async function OU(e,t,i,n,r){const o=Dy(\"ACCOUNT_REGISTER\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\"));let s=[];s=t.proxyServer?o.map((e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\"))):o.map((e=>\"https://\".concat(e,\"/api/v1\")));const a=null==r?void 0:r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"stringUID\",urls:s});try{const o=await async function(e,t,i,n,r){const o=Date.now(),s={sid:i.sid,opid:10,appid:i.appId,string_uid:t};let a=e[0];const c=await my((()=>tU(a+\"\".concat(-1===a.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:s,cancelToken:n,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}})),((i,n)=>{if(0===i.code){if(i.uid<=0||i.uid>=Math.pow(2,32))throw Qy.error(\"Invalid Uint Uid \".concat(t,\" => \").concat(i.uid),i),sA.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:nv.INVALID_UINT_UID_FROM_STRING_UID,extend:s}),new Sb(nv.INVALID_UINT_UID_FROM_STRING_UID);return sA.reqUserAccount(s.sid,{lts:o,success:!0,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:null,extend:s}),!1}const r=uw(i.code);return r.retry&&(a=e[(n+1)%e.length]),sA.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:r.desc,extend:s}),r.retry}),((t,i)=>t.code!==nv.OPERATION_ABORTED&&(sA.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:null,errorCode:t.code,extend:s}),a=e[(i+1)%e.length],!0)),r);if(0!==c.code){const e=uw(c.code);throw new Sb(nv.UNEXPECTED_RESPONSE,e.desc)}return c}(s,e,t,i,n);return null==r||r.recordJoinChannelService({status:\"success\",endTs:Date.now()},a),o.uid}catch(e){throw null==r||r.recordJoinChannelService({status:\"error\",endTs:Date.now(),errors:[e]},a),e}}async function NU(e,t,i){const n=Dy(\"ACCOUNT_REGISTER\");let r=[];r=t.proxyServer?n.map((e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\"))):n.map((e=>\"https://\".concat(e,\"/api/v1\")));try{const n=await AU({referenceList:r,asyncMapHandler:n=>async function(e,t,i,n){const r=Date.now(),o={sid:i.sid,opid:10,appid:i.appId,string_uid:t};try{const t=await tU(e+\"\".concat(-1===e.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:o,cancelToken:n,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}});if(0!==t.code){const e=uw(t.code);throw new Sb(nv.UNEXPECTED_RESPONSE,\"preload sua error:\".concat(e.desc),e)}if(t.uid<=0||t.uid>=Math.pow(2,32))throw new Sb(nv.INVALID_UINT_UID_FROM_STRING_UID);return{requestTime:r,url:e,req:o,uid:t.uid,elapse:Date.now()-r}}catch(e){throw e}}(n,e,t,i),closeFn:e=>e.code===nv.OPERATION_ABORTED||e.code===nv.UNEXPECTED_RESPONSE&&!e.data.retry});return n}catch(e){throw e}}async function DU(e,t,i){const n=Dy(\"CDS_AP\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1\"):\"https://\".concat(t,\"/api/v1?action=config\"))),r=n.map((n=>function(e,t,i,n){const r=AI(),o={flag:64,cipher_method:0,features:{device:r.name,system:r.os,system_general:navigator.userAgent,vendor:t.appId,version:vy,cname:t.cname,sid:t.sid,session_id:t.sid,detail:\"\",proxyServer:t.proxyServer}};return my((()=>tU(e,{data:o,timeout:1e3,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":54}})),void 0,(e=>e.code!==nv.OPERATION_ABORTED),n)}(n,e,t,i)));let o=null,s=null,a={};try{o=await vU(r)}catch(e){if(e.code===nv.OPERATION_ABORTED)throw e;s=e}r.forEach((e=>e.cancel()));if(sA.reportApiInvoke(e.sid,{name:Cv.REQUEST_CONFIG_DISTRIBUTE,options:{error:s,res:o}}).onSuccess(),o&&o.test_tags)try{a=function(e){if(!e.test_tags)return{};const t=e.test_tags,i=Object.keys(t),n={};return i.forEach((e=>{var i;const r=jp(i=e.slice(4)).call(i),o=JSON.parse(t[e])[1];n[r]=o})),n}(o)}catch(e){}return a}async function PU(e,t){const i=Dy(\"WEBCS_DOMAIN\").concat(Dy(\"WEBCS_DOMAIN_BACKUP_LIST\")).map((e=>({url:\"https://\".concat(e,\"/api/v2/transpond/webrtc?v=2\"),areaCode:iU(),serviceIds:[Ow.CHOOSE_SERVER,Ow.CLOUD_PROXY_FALLBACK]})));try{const n=await AU({referenceList:i,asyncMapHandler:i=>async function(e,t,i){let n,{url:r,areaCode:o,serviceIds:s}=e;const a=Date.now(),[c,d]=RU(t,o,s);let l=Vv.networkState;try{l&&Vv.networkState===Pv.OFFLINE&&Vv.onlineWaiter&&await Gh.race([Vv.onlineWaiter,$v(_y.maxRetryTimeout)]),l=Vv.networkState;const{data:e,headers:t}=await tU(r,{data:c,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);n=\"1\"===t.http3?1:-1;const o=e=>{const t=[];if(e.response_body.forEach((i=>{const n=i.buffer.code;if(23===i.uri&&0===n&&!i.buffer.edges_services)if(4194310===i.buffer.flag)i.buffer.edges_services=[];else{const n={error:new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:i.buffer.flag};t.push(n)}if(0!==n){const r=uw(n),o={error:new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,r.desc,{desc:r.desc,retry:r.retry,csIp:e.detail[502]}),flag:i.buffer.flag};4194310===i.buffer.flag?Qy.warning(o.error.toString()):t.push(o)}})),t.length)throw new Sb(nv.CAN_NOT_GET_GATEWAY_SERVER,t.map((e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message))).join(\" | \"),{retry:!!t.find((e=>e.error.data.retry)),csIp:e.detail[502],desc:[...new Set(t.map((e=>{var t;return null==e||null===(t=e.error)||void 0===t||null===(t=t.data)||void 0===t?void 0:t.desc})).filter((e=>!!e)))]})};o(e);const s=xw(e,Ow.CHOOSE_SERVER),u=xw(e,Ow.CLOUD_PROXY_FALLBACK);return SU(s),{gatewayInfo:Lw(s,r),proxyInfo:u,opid:d,requestTime:a,url:r,isHttp3:n,elapse:Date.now()-a}}catch(e){throw e}}(i,e,t),closeFn:e=>e.code===nv.OPERATION_ABORTED||e.code===nv.CAN_NOT_GET_GATEWAY_SERVER&&!e.data.retry});return n}catch(e){throw e}}async function LU(e,t,i,n){const r=Dy(\"PROXY_SERVER_TYPE3\"),o=(e,t,i)=>{let n=i||r;return Array.isArray(n)&&(n=t%2==0?r[1]:r[0]),\"https://\".concat(n,\"/ap/?url=\").concat(e)};let s=null;const a=[],c=async()=>{const r=Dy(\"WEBCS_DOMAIN\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\")).map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:iU(),serviceIds:[Ow.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?Ow.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?Ow.CLOUD_PROXY:Ow.CLOUD_PROXY_FALLBACK]}})),s=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),c=await yU({fragementLength:Dy(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(Qy.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),n.url),fU(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),c},d=async()=>{if(await $v(1e3),null!==s)return s;const r=Dy(\"WEBCS_DOMAIN_BACKUP_LIST\").map(((t,i)=>{let n;return n=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:n,areaCode:iU(),serviceIds:[Ow.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?Ow.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?Ow.CLOUD_PROXY:Ow.CLOUD_PROXY_FALLBACK]}})),c=n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:r.map((e=>e.url))}),d=await yU({fragementLength:Dy(\"FRAGEMENT_LENGTH\"),referenceList:r,asyncMapHandler:n=>(Qy.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),n.url),fU(n,e,t,i)),allFailedhandler:e=>{throw n.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},c),e[0]},promisesCollector:a});return n.recordJoinChannelService({endTs:Date.now(),status:\"success\"},c),d};let l,u,h;try{({gatewayInfo:l,proxyInfo:u,url:h}=await vU([c(),d()]))}catch(e){throw e[0]}if(a.length&&a.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),!l||!u)throw new Sb(nv.UNEXPECTED_ERROR,\"missing gateway or proxy response\").print();if(e.apUrl=h,\"disabled\"!==e.cloudProxyServer&&Array.isArray(r)&&h){const t=/^https?:\\/\\/(.+?)(\\/.*)?$/.exec(h)[1];Dn(r).call(r,t)&&(e.proxyServer=t,Qy.setProxyServer(t),sA.setProxyServer(t))}return s={gatewayInfo:l,proxyInfo:await Vw(u,l.uid)},s}async function kU(e,t,i){const n=Dy(\"UAP_AP\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\")).map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1?action=uap\"):\"https://\".concat(t,\"/api/v1?action=uap\"))),r=n.map((n=>function(e,t,i,n){const r={command:\"convergeAllocateEdge\",sid:t.sid,appId:t.appId,token:t.token,ts:Date.now(),version:vy,cname:t.cname,uid:t.uid.toString(),requestId:EU,seq:EU};EU+=1;const o={service_name:\"tele_channel\",json_body:JSON.stringify(r)};return my((async()=>{const t=await tU(e,{data:o,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":61}});if(0!==t.code){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"cross channel ap error, code\"+t.code,{retry:!0});throw Qy.error(e.toString()),e}const n=JSON.parse(t.json_body);if(200!==n.code){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"cross channel app center error, code: \".concat(n.code,\", reason: \").concat(n.reason));throw Qy.error(e.toString()),e}if(!n.servers||0===n.servers.length){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"cross channel app center empty server\");throw Qy.error(e.toString()),e}return{vid:n.vid,workerToken:n.workerToken,addressList:(Dy(\"CHANNEL_MEDIA_RELAY_SERVERS\")||n.servers).map((e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(Dy(\"WORKER_DOMAIN\"),\":\").concat(e.wss)))}}),void 0,(e=>!!(e.code!==nv.OPERATION_ABORTED&&e.code!==nv.UNEXPECTED_RESPONSE||e.data&&e.data.retry)),n)}(n,e,t,i)));try{const e=await vU(r);return r.forEach((e=>e.cancel())),e}catch(e){throw e[0]}}async function MU(e,t,i){let n=null;const r=[],o=async o=>{const s=Dy(o?\"WEBCS_DOMAIN_BACKUP_LIST\":\"WEBCS_DOMAIN\").map((t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\")));return o&&(await $v(1e3),null!==n)?n:await yU({fragementLength:Dy(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:n=>(Qy.debug(\"[\".concat(e.clientId,\"] update ticket, Connect to \").concat(o?\"backup\":\"\",\" choose_server:\"),n),function(e,t,i,n){const[r]=CU(t,[Ow.CHOOSE_SERVER]);let o=Vv.networkState;return my((async()=>{o&&Vv.networkState===Pv.OFFLINE&&Vv.onlineWaiter&&await Gh.race([Vv.onlineWaiter,$v(n&&n.maxRetryTimeout||_y.maxRetryTimeout)]),o=Vv.networkState;const t=await tU(e,{data:r,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0);return gU(t,e)}),(()=>!1),(e=>e.code!==nv.OPERATION_ABORTED&&(e.code===nv.UPDATE_TICKET_FAILED?e.data.retry:(Qy.warning(\"[\".concat(t.clientId,\"] update ticket network error, retry\"),e),!0))),n)}(n,e,t,i)),allFailedhandler:e=>{throw e[0]},promisesCollector:r})};try{return n=await vU([o(!1),o(!0)]),r.length&&r.forEach((e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel())),n}catch(e){throw e[0]}}function UU(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function xU(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?UU(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):UU(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class VU extends Sv{get isSuccess(){return!!this.configs}constructor(){super(),og(this,\"configs\",void 0),og(this,\"joinInfo\",void 0),og(this,\"cancelToken\",void 0),og(this,\"retryConfig\",{timeout:3e3,timeoutFactor:1.5,maxRetryCount:1,maxRetryTimeout:1e4}),og(this,\"interval\",void 0),og(this,\"mutex\",new hy(\"config-distribute\")),og(this,\"mutableParamsRead\",!1)}startGetConfigDistribute(e,t){this.joinInfo=e,this.cancelToken=t,this.interval&&this.stopGetConfigDistribute(),Dy(\"ENABLE_CONFIG_DISTRIBUTE\")&&(this.updateConfigDistribute(),this.interval=window.setInterval((()=>{this.updateConfigDistribute()}),Dy(\"CONFIG_DISTRIBUTE_INTERVAL\")))}stopGetConfigDistribute(){this.interval&&clearInterval(this.interval),this.interval=void 0,this.joinInfo=void 0,this.cancelToken=void 0}async awaitConfigDistributeComplete(){if(!this.mutex.isLocked)return;(await this.mutex.lock())()}async updateConfigDistribute(){if(!this.mutableParamsRead){this.mutableParamsRead=!0;sA.reportApiInvoke(null,{options:void 0,name:Cv.LOAD_CONFIG_FROM_LOCALSTORAGE,tag:Iv.TRACER}).onSuccess(JSON.stringify(Py))}if(!this.joinInfo||!this.cancelToken||!this.retryConfig)return void Qy.debug(\"[config-distribute] get config distribute interrupted have no joininfo\");let e;const t=await this.mutex.lock();try{e=await DU(this.joinInfo,this.cancelToken,this.retryConfig),Qy.debug(\"[config-distribute] get config distribute\",JSON.stringify(e)),e.limit_bitrate&&this.handleBitrateLimit(e.limit_bitrate),this.cacheGlobalParameterConfig(e),this.configs=e}catch(e){const t=new Sb(nv.NETWORK_RESPONSE_ERROR,e);Qy.warning(\"[config-distribute] \".concat(t.toString()))}finally{t()}}getBitrateLimit(){return this.configs?this.configs.limit_bitrate:void 0}handleBitrateLimit(e){var t;(t=e)&&t.uplink&&t.id&&void 0!==t.uplink.max_bitrate&&void 0!==t.uplink.min_bitrate&&(this.configs&&this.configs.limit_bitrate?this.configs&&this.configs.limit_bitrate&&this.configs.limit_bitrate.id!==e.id&&this.emit(Wb.UPDATE_BITRATE_LIMIT,e):this.emit(Wb.UPDATE_BITRATE_LIMIT,e))}getLowStreamConfigDistribute(){return this.configs&&this.configs.limit_bitrate&&xU({},this.configs.limit_bitrate.low_stream_uplink)}cacheGlobalParameterConfig(e){var t;const i=aE(t=Object.keys(e).filter((e=>/^webrtc_ng_global_parameter/.test(e)))).call(t);for(let t=0;t<i.length;t++)for(let n=i.length-1;n>t;n--){const t=i[n];if(\"number\"==typeof e[t].__priority){const r=e[t].__priority,o=i[n-1];if(\"number\"==typeof e[o].__priority){if(!(r>e[o].__priority))continue;{const e=t;i[n]=i[n-1],i[n-1]=e}}else{const e=t;i[n]=i[n-1],i[n-1]=e}}}const n={};i.forEach((t=>{const i=e[t],r=i.__expires;Object.keys(i).forEach((e=>{\"__priority\"===e||\"__expires\"===e||Object.prototype.hasOwnProperty.call(n,e)||(n[e]=xU({value:i[e]},r&&{expires:r}))}))}));try{!function(e){try{const t=Date.now();Object.keys(e).forEach((i=>{switch(i){case\"ENABLE_EVENT_REPORT\":case\"UPLOAD_LOG\":case\"ENABLE_AG_ADAPTATION\":case\"FORCE_AG_HIGH_FRAMERATE\":case\"FORCE_SUPPORT_AG_ADAPTATION\":case\"ENCODER_CONFIG_LIMIT\":case\"CAMERA_CAPTURE_CONFIG\":case\"ENABLE_PRELOAD\":if(Object.prototype.hasOwnProperty.call(Oy,i)){const{value:n,expires:r}=e[i];if(r&&r<=t)return;Py[i]=n,Oy[i]=n,Qy.debug(\"Update global parameters from config distribute\",i,n)}}}))}catch(t){Qy.error(\"Error update config immediately: \".concat(e),t.message)}}(n);const e=JSON.stringify(n),t=window.btoa(e);window.localStorage.setItem(\"websdk_ng_global_parameter\",t),Qy.debug(\"Caching global parameters \".concat(e))}catch(e){Qy.error(\"Error caching global parameters:\",e.message)}}}class FU extends Sv{constructor(){super(...arguments),og(this,\"resultStorage\",new Map)}setLocalAudioStats(e,t,i){this.record(\"AUDIO_INPUT_LEVEL_TOO_LOW\",e,this.checkAudioInputLevel(i,t)),this.record(\"SEND_AUDIO_BITRATE_TOO_LOW\",e,this.checkSendAudioBitrate(i,t))}setLocalVideoStats(e,t,i){this.record(\"SEND_VIDEO_BITRATE_TOO_LOW\",e,this.checkSendVideoBitrate(i,t)),this.record(\"FRAMERATE_INPUT_TOO_LOW\",e,this.checkFramerateInput(i,t)),this.record(\"FRAMERATE_SENT_TOO_LOW\",e,this.checkFramerateSent(i))}setRemoteAudioStats(e,t){const i=e.getUserId();this.record(\"AUDIO_OUTPUT_LEVEL_TOO_LOW\",i,this.checkAudioOutputLevel(t))}setRemoteVideoStats(e,t){const i=e.getUserId();this.record(\"RECV_VIDEO_DECODE_FAILED\",i,this.checkVideoDecode(t))}record(e,t,i){if(Dy(\"STATS_UPDATE_INTERVAL\")>500)return;this.resultStorage.has(e)||this.resultStorage.set(e,{result:[],isPrevNormal:!0});const n=this.resultStorage.get(e);if(n&&(n.result.push(i),n.result.length>=5)){var r;const i=Dn(r=n.result).call(r,!0);n.isPrevNormal&&!i&&this.emit(\"exception\",BU[e],e,t),!n.isPrevNormal&&i&&this.emit(\"exception\",BU[e]+2e3,e+\"_RECOVER\",t),n.isPrevNormal=i,n.result=[]}}checkAudioOutputLevel(e){return!(e.receiveBitrate>0&&0===e.receiveLevel)}checkAudioInputLevel(e,t){return t instanceof rk&&!t.isActive||(!!t.muted||0!==e.sendVolumeLevel)}checkFramerateInput(e,t){let i=null;t._encoderConfig&&t._encoderConfig.frameRate&&(i=kw(t._encoderConfig.frameRate));const n=e.captureFrameRate;return!i||!n||!(i>10&&n<5||i<10&&i>=5&&n<=1)}checkFramerateSent(e){return!(e.captureFrameRate&&e.sendFrameRate&&e.captureFrameRate>5&&e.sendFrameRate<=1)}checkSendVideoBitrate(e,t){return!!t.muted||0!==e.sendBitrate}checkSendAudioBitrate(e,t){return t instanceof rk&&!t.isActive||(!!t.muted||0!==e.sendBitrate)}checkVideoDecode(e){return 0===e.receiveBitrate||0!==e.decodeFrameRate}}const BU={FRAMERATE_INPUT_TOO_LOW:1001,FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};const jU=new class{markSubscribeStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t))}markPublishStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t))}measureFromSubscribeStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}measureFromPublishStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}};function GU(e,t){this.v=e,this.k=t}function WU(e){return new GU(e,0)}var HU=jh,KU=Sl;wi({target:\"Promise\",stat:!0,forced:!0},{withResolvers:function(){var e=KU.f(this);return{promise:e.promise,resolve:e.resolve,reject:e.reject}}});var YU=Sl,qU=el;wi({target:\"Promise\",stat:!0,forced:!0},{try:function(e){var t=YU.f(this),i=qU(e);return(i.error?t.reject:t.resolve)(i.value),t.promise}});var zU=i(HU),JU=rf.f(\"asyncIterator\"),XU=i(JU);function QU(e){var t,i;function n(t,i){try{var o=e[t](i),s=o.value,a=s instanceof GU;zU.resolve(a?s.v:s).then((function(i){if(a){var c=\"return\"===t?\"return\":\"next\";if(!s.k||i.done)return n(c,i);i=e[c](i).value}r(o.done?\"return\":\"normal\",i)}),(function(e){n(\"throw\",e)}))}catch(e){r(\"throw\",e)}}function r(e,r){switch(e){case\"return\":t.resolve({value:r,done:!0});break;case\"throw\":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?n(t.key,t.arg):i=null}this._invoke=function(e,r){return new zU((function(o,s){var a={key:e,arg:r,resolve:o,reject:s,next:null};i?i=i.next=a:(t=i=a,n(e,r))}))},\"function\"!=typeof e.return&&(this.return=void 0)}function ZU(e){return function(){return new QU(e.apply(this,arguments))}}QU.prototype[\"function\"==typeof eg&&XU||\"@@asyncIterator\"]=function(){return this},QU.prototype.next=function(e){return this._invoke(\"next\",e)},QU.prototype.throw=function(e){return this._invoke(\"throw\",e)},QU.prototype.return=function(e){return this._invoke(\"return\",e)};var $U=i(ie.Object.getOwnPropertySymbols),ex=wi,tx=qi.indexOf,ix=Bn,nx=v([].indexOf),rx=!!nx&&1/nx([1],1,-0)<0;ex({target:\"Array\",proto:!0,forced:rx||!ix(\"indexOf\")},{indexOf:function(e){var t=arguments.length>1?arguments[1]:void 0;return rx?nx(this,e,t)||0:tx(this,e,t)}});var ox=Xi(\"Array\").indexOf,sx=l,ax=ox,cx=Array.prototype,dx=function(e){var t=e.indexOf;return e===cx||sx(cx,e)&&t===cx.indexOf?ax:t},lx=i(dx);function ux(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=yA(e);for(n=0;n<o.length;n++)i=o[n],lx(t).call(t,i)>=0||(r[i]=e[i]);return r}(e,t);if($U){var o=$U(e);for(n=0;n<o.length;n++)i=o[n],lx(t).call(t,i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}function hx(e){if(Array.isArray(e))return e.map((e=>e));if(!px(e))return e;const t={};for(const i in e){const n=e[i];px(n)||Array.isArray(n)?t[i]=hx(n):t[i]=n}return t}function px(e){return!(\"object\"!=typeof e||Array.isArray(e)||!e)}class _x{constructor(e){og(this,\"input\",[]),og(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}diffMean(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length}}const Ex={address:\"unknown\",candidateType:\"unknown\",id:\"unknown\",port:0,priority:0,protocol:\"unknown\",type:\"unknown\"},mx={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[],selectedCandidatePair:{id:\"unknown\",localCandidate:Ex,remoteCandidate:Ex}},fx={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,qpSumPerFrame:0,framesDroppedCount:0,outputFrameRate:0},Tx={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0,qpSumPerFrame:0},Sx={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,jitterMs:0},gx={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packetsDiscarded:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0,concealedSamples:0};function Rx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Cx(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Rx(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Rx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class Ix{constructor(e,t){og(this,\"onFirstVideoReceived\",void 0),og(this,\"onFirstVideoDecoded\",void 0),og(this,\"onFirstAudioReceived\",void 0),og(this,\"onFirstVideoDecodedTimeout\",void 0),og(this,\"onFirstAudioDecoded\",void 0),og(this,\"onSelectedLocalCandidateChanged\",void 0),og(this,\"onSelectedRemoteCandidateChanged\",void 0),og(this,\"videoIsReady\",!1),og(this,\"videoIsReady2\",{}),og(this,\"pc\",void 0),og(this,\"options\",void 0),og(this,\"intervalTimer\",void 0),og(this,\"stats\",hx(mx)),og(this,\"isFirstVideoReceived\",{}),og(this,\"isFirstVideoDecoded\",{}),og(this,\"isFirstAudioReceived\",{}),og(this,\"isFirstAudioDecoded\",{}),og(this,\"isFirstVideoDecodedTimeout\",{}),og(this,\"lossRateWindowStats\",[]),this.pc=e,this.options=t,this.intervalTimer=window.setInterval((async()=>{this.updateStats()}),this.options.updateInterval)}getStats(){return this.stats}getSelectedCandidatePair(){return new Gh((e=>{e({local:Cx({},Ex),remote:Cx({},Ex)})}))}setVideoIsReady(e){this.videoIsReady=e}setVideoIsReady2(e,t){this.videoIsReady2[e]=t}getVideoIsReady(e){return this.videoIsReady2[e]||!1}setIsFirstAudioDecoded(e){}destroy(){window.clearInterval(this.intervalTimer),this.pc=void 0}calcLossRate(e){this.lossRateWindowStats.push(e),this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);const t=this.lossRateWindowStats.length,i=[\"videoSend\",\"audioSend\",\"videoRecv\",\"audioRecv\"];let n=0,r=0,o=0,s=0;for(const a of i)e[a].forEach(((e,i)=>{if(!this.lossRateWindowStats[t-1][a][i]||!this.lossRateWindowStats[0][a][i])return;const c=this.lossRateWindowStats[t-1][a][i].packets-this.lossRateWindowStats[0][a][i].packets,d=this.lossRateWindowStats[t-1][a][i].packetsLost-this.lossRateWindowStats[0][a][i].packetsLost;\"videoSend\"===a||\"audioSend\"===a?(n+=c,o+=d):(r+=c,s+=d),Number.isNaN(c)||Number.isNaN(c)?e.packetLostRate=0:e.packetLostRate=c<=0||d<=0?0:d/(c+d)}));e.sendPacketLossRate=n<=0||o<=0?0:o/(n+o),e.recvPacketLossRate=r<=0||s<=0?0:s/(r+s)}}function vx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function yx(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?vx(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):vx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class Ax extends Ix{constructor(){super(...arguments),og(this,\"_stats\",mx),og(this,\"lastDecodeVideoReceiverStats\",new Map)}async updateStats(){const e=await this._getStats(),t=this.statsResponsesToObjects(e);this._stats=hx(mx);const i=t.filter((e=>\"ssrc\"===e.type));this.processSSRCStats(i);const n=t.find((e=>\"VideoBwe\"===e.type));n&&this.processBandwidthStats(n),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}processBandwidthStats(e){this._stats.bitrate={actualEncoded:Number(e.googActualEncBitrate),targetEncoded:Number(e.googTargetEncBitrate),retransmit:Number(e.googRetransmitBitrate),transmit:Number(e.googTransmitBitrate)},this._stats.sendBandwidth=Number(e.googAvailableSendBandwidth)}processSSRCStats(e){e.forEach((e=>{var t;const i=Dn(t=e.id).call(t,\"send\");switch(\"\".concat(e.mediaType,\"_\").concat(i?\"send\":\"recv\")){case\"video_send\":{const t=hx(Tx);t.codec=e.googCodecName,t.adaptionChangeReason=\"none\",e.googCpuLimitedResolution&&(t.adaptionChangeReason=\"cpu\"),e.googBandwidthLimitedResolution&&(t.adaptionChangeReason=\"bandwidth\"),t.avgEncodeMs=Number(e.googAvgEncodeMs),t.inputFrame={width:Number(e.googFrameWidthInput)||Number(e.googFrameWidthSent),height:Number(e.googFrameHeightInput)||Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.sentFrame={width:Number(e.googFrameWidthSent),height:Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},t.firsCount=Number(e.googFirReceived),t.nacksCount=Number(e.googNacksReceived),t.plisCount=Number(e.googPlisReceived),t.frameCount=Number(e.framesEncoded),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.videoSend.push(t),this._stats.rtt=t.rttMs;break}case\"video_recv\":{const t=hx(fx),i=this.lastDecodeVideoReceiverStats.get(Number(e.ssrc));if(t.codec=e.googCodecName,t.targetDelayMs=Number(e.googTargetDelayMs),t.renderDelayMs=Number(e.googRenderDelayMs),t.currentDelayMs=Number(e.googCurrentDelayMs),t.minPlayoutDelayMs=Number(e.googMinPlayoutDelayMs),t.decodeMs=Number(e.googDecodeMs),t.maxDecodeMs=Number(e.googMaxDecodeMs),t.receivedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateReceived)},t.decodedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateDecoded)},t.decodeFrameRate=Number(e.googFrameRateDecoded),t.outputFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateOutput)},t.jitterBufferMs=Number(e.googJitterBufferMs),t.firsCount=Number(e.googFirsSent),t.nacksCount=Number(e.googNacksSent),t.plisCount=Number(e.googPlisSent),t.framesDecodeCount=Number(e.framesDecoded),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]&&(this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,t.decodedFrame.width,t.decodedFrame.height),this.isFirstVideoDecoded[t.ssrc]=!0),i){const n=i.stats,r=Date.now()-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=r,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc,10))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<i.stats.framesDecodeCount&&(t.framesDecodeInterval=0)}this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:yx({},t),lts:Date.now()}),this._stats.videoRecv.push(t);break}case\"audio_recv\":{const t=hx(gx);t.codec=e.googCodecName,t.outputLevel=Math.abs(Number(e.audioOutputLevel))/32767,t.decodingCNG=Number(e.googDecodingCNG),t.decodingCTN=Number(e.googDecodingCTN),t.decodingCTSG=Number(e.googDecodingCTSG),t.decodingNormal=Number(e.googDecodingNormal),t.decodingPLC=Number(e.googDecodingPLC),t.decodingPLCCNG=Number(e.googDecodingPLCCNG),t.expandRate=Number(e.googExpandRate),t.accelerateRate=Number(e.googAccelerateRate),t.preemptiveExpandRate=Number(e.googPreemptiveExpandRate),t.secondaryDecodedRate=Number(e.googSecondaryDecodedRate),t.speechExpandRate=Number(e.googSpeechExpandRate),t.preferredJitterBufferMs=Number(e.googPreferredJitterBufferMs),t.jitterBufferMs=Number(e.googJitterBufferMs),t.jitterMs=Number(e.googJitterReceived),t.bytes=Number(e.bytesReceived),t.packets=Number(e.packetsReceived),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.receivedFrames=Number(e.googDecodingCTN)||Number(e.packetsReceived),t.droppedFrames=Number(e.googDecodingPLC)+Number(e.googDecodingPLCCNG)||Number(e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.decodingNormal>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),this._stats.audioRecv.push(t);break}case\"audio_send\":{const t=hx(Sx);t.codec=e.googCodecName,t.inputLevel=Math.abs(Number(e.audioInputLevel))/32767,t.aecReturnLoss=Number(e.googEchoCancellationReturnLoss||0),t.aecReturnLossEnhancement=Number(e.googEchoCancellationReturnLossEnhancement||0),t.residualEchoLikelihood=Number(e.googResidualEchoLikelihood||0),t.residualEchoLikelihoodRecentMax=Number(e.googResidualEchoLikelihoodRecentMax||0),t.bytes=Number(e.bytesSent),t.packets=Number(e.packetsSent),t.packetsLost=Number(e.packetsLost),t.ssrc=Number(e.ssrc),t.rttMs=Number(e.googRtt||0),this._stats.rtt=t.rttMs,this._stats.audioSend.push(t);break}}}))}_getStats(){return new Gh(((e,t)=>{this.pc.getStats(e,t)}))}statsResponsesToObjects(e){const t=[];return e.result().forEach((e=>{const i={id:e.id,timestamp:e.timestamp.valueOf().toString(),type:e.type};e.names().forEach((t=>{i[t]=e.stat(t)})),t.push(i)})),t}}function bx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function wx(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?bx(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):bx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class Ox extends Ix{constructor(){super(...arguments),og(this,\"_stats\",mx),og(this,\"report\",void 0),og(this,\"lastDecodeVideoReceiverStats\",new Map),og(this,\"lastVideoFramesRecv\",new Map),og(this,\"lastVideoFramesSent\",new Map),og(this,\"lastVideoFramesDecode\",new Map),og(this,\"lastVideoFramesOutput\",new Map),og(this,\"lastVideoJBDelay\",new Map),og(this,\"lastAudioJBDelay\",new Map),og(this,\"mediaBytesSent\",new Map),og(this,\"mediaBytesRetransmit\",new Map),og(this,\"mediaBytesTargetEncode\",new Map),og(this,\"lastEncoderMs\",new Map)}async updateStats(){this.report=await this.pc.getStats(),this._stats=hx(mx),this.report.forEach((e=>{switch(e.type){case sb.OUTBOUND:case sb.INBOUND:{const t=e.mediaType||e.kind,i=!t&&\"frameWidth\"in e,n=!t&&!(\"frameWidth\"in e);e.type===sb.OUTBOUND?\"audio\"===t||n?this.processAudioOutboundStats(e):(\"video\"===t||i)&&this.processVideoOutboundStats(e):e.type===sb.INBOUND&&(\"audio\"===t||n?this.processAudioInboundStats(e):(\"video\"===t||i)&&this.processVideoInboundStats(e));break}case sb.TRANSPORT:{const t=this.report.get(e.selectedCandidatePairId);t&&this.processCandidatePairStats(t);break}case sb.CANDIDATE_PAIR:e.selected&&this.processCandidatePairStats(e)}})),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats}async getSelectedCandidatePair(){const e=await this.pc.getStats(),t={local:wx({},Ex),remote:wx({},Ex)};return e.forEach((i=>{let n;if(i.type===sb.TRANSPORT&&(n=e.get(i.selectedCandidatePairId)),i.type===sb.CANDIDATE_PAIR&&i.selected&&(n=i),n){const i=(e,t)=>{e.type=t.type,e.id=t.id,t.address&&(e.address=t.address),t.candidateType&&(e.candidateType=t.candidateType),t.port&&(e.port=t.port),t.priority&&(e.priority=t.priority),t.protocol&&(e.protocol=t.protocol),t.relayProtocol&&(e.relayProtocol=t.relayProtocol)};if(n.localCandidateId){const r=e.get(n.localCandidateId);r&&i(t.local,r)}if(n.remoteCandidateId){const r=e.get(n.remoteCandidateId);r&&i(t.remote,r)}}})),t}processCandidatePairStats(e){if(this._stats.sendBandwidth=e.availableOutgoingBitrate||0,e.currentRoundTripTime&&(this._stats.rtt=1e3*e.currentRoundTripTime),this._stats.videoSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.audioSend.forEach((t=>{e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.selectedCandidatePair.id=e.id,e.localCandidateId){const t=this.report.get(e.localCandidateId);t&&this.processCandidateStats(t)}if(e.remoteCandidateId){const t=this.report.get(e.remoteCandidateId);t&&this.processCandidateStats(t)}}processCandidateStats(e){let t;e.type===sb.LOCAL_CANDIDATE&&(t=this._stats.selectedCandidatePair.localCandidate),e.type===sb.REMOTE_CANDIDATE&&(t=this._stats.selectedCandidatePair.remoteCandidate),t&&(t.type=e.type,t.id=e.id,e.address&&(t.address=e.address),e.candidateType&&(t.candidateType=e.candidateType),e.port&&(t.port=e.port),e.priority&&(t.priority=e.priority),e.protocol&&(t.protocol=e.protocol),e.relayProtocol&&(t.relayProtocol=e.relayProtocol),e.type===sb.LOCAL_CANDIDATE&&this.stats.selectedCandidatePair.localCandidate.id!==t.id&&this.onSelectedLocalCandidateChanged&&this.onSelectedLocalCandidateChanged(wx({},t),wx({},this.stats.selectedCandidatePair.localCandidate)),e.type===sb.REMOTE_CANDIDATE&&this.stats.selectedCandidatePair.remoteCandidate.id!==t.id&&this.onSelectedRemoteCandidateChanged&&this.onSelectedRemoteCandidateChanged(wx({},t),wx({},this.stats.selectedCandidatePair.remoteCandidate)))}processAudioInboundStats(e){let t=this._stats.audioRecv.find((t=>t.ssrc===e.ssrc));t||(t=hx(gx),this._stats.audioRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.packetsDiscarded=e.packetsDiscarded,t.bytes=e.bytesReceived,t.jitterMs=1e3*e.jitter,this.processAudioTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),t.receivedFrames||(t.receivedFrames=e.packetsReceived),t.droppedFrames||(t.droppedFrames=e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.outputLevel&&t.outputLevel>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0),\"number\"==typeof e.concealedSamples&&(t.concealedSamples=e.concealedSamples)}processVideoInboundStats(e){let t=this._stats.videoRecv.find((t=>t.ssrc===e.ssrc));t||(t=hx(fx),this._stats.videoRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.framesDecodeCount=e.framesDecoded,t.framesDroppedCount=e.framesDropped,t.totalInterFrameDelay=e.totalInterFrameDelay,t.totalSquaredInterFrameDelay=e.totalSquaredInterFrameDelay,t.totalFreezesDuration=e.totalFreezesDuration;const i=this.lastDecodeVideoReceiverStats.get(t.ssrc),n=this.lastVideoFramesDecode.get(t.ssrc),r=this.lastVideoFramesOutput.get(t.ssrc),o=Date.now();if(t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]){const e=t.decodedFrame?t.decodedFrame.width:0,i=t.decodedFrame?t.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,e,i),this.isFirstVideoDecoded[t.ssrc]=!0}if(i){const n=i.stats,r=o-i.lts;t.framesDecodeFreezeTime=n.framesDecodeFreezeTime,t.framesDecodeInterval=n.framesDecodeInterval,!this.isFirstVideoDecoded[t.ssrc]&&r>this.options.firstVideoDecodedTimeout&&!this.isFirstVideoDecodedTimeout[t.ssrc]&&(this.onFirstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout(t.ssrc),this.isFirstVideoDecodedTimeout[t.ssrc]=!0),t.framesDecodeCount>n.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=r,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<n.framesDecodeCount&&(t.framesDecodeInterval=0),e.framesDecoded&&e.qpSum&&(i.stats.framesDecodeCount>e.framesDecoded?t.qpSumPerFrame=e.qpSum/e.framesDecoded:t.qpSumPerFrame=(e.qpSum-i.qpSum)/(e.framesDecoded-i.stats.framesDecodeCount))}n&&o-n.lts>=800?(t.decodeFrameRate=Math.round((t.framesDecodeCount-n.count)/((o-n.lts)/1e3)),this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:o,rate:t.decodeFrameRate})):n?t.decodeFrameRate=n.rate:this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:o,rate:0}),t.framesDroppedCount&&e.framesReceived&&(r&&o-r.lts>=800?(t.outputFrameRate=Math.round((e.framesReceived-t.framesDroppedCount-r.count)/((o-r.lts)/1e3)),this.lastVideoFramesOutput.set(t.ssrc,{count:e.framesReceived-t.framesDroppedCount,lts:o,rate:Math.max(t.outputFrameRate,0)})):r?t.outputFrameRate=r.rate:this.lastVideoFramesOutput.set(t.ssrc,{count:e.framesReceived-t.framesDroppedCount,lts:o,rate:0})),e.totalDecodeTime&&(t.decodeMs=1e3*e.totalDecodeTime),this.processVideoTrackReceiverStats(e,e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.framerateMean&&(t.framesRateFirefox=e.framerateMean),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:wx({},t),lts:i?i.lts:Date.now(),qpSum:e.qpSum})}processVideoOutboundStats(e){let t=this._stats.videoSend.find((t=>t.ssrc===e.ssrc));t||(t=hx(Tx),this._stats.videoSend.push(t));const i=this.mediaBytesSent.get(e.ssrc);if(i)i.add(e.bytesSent);else{const t=new _x(10);t.add(e.bytesSent),this.mediaBytesSent.set(e.ssrc,t)}if(void 0!==e.retransmittedBytesSent){const t=this.mediaBytesRetransmit.get(e.ssrc);if(t)t.add(e.retransmittedBytesSent);else{const t=new _x(10);t.add(e.retransmittedBytesSent),this.mediaBytesRetransmit.set(e.ssrc,t)}}if(e.totalEncodedBytesTarget){const t=this.mediaBytesTargetEncode.get(e.ssrc);if(t)t.add(e.totalEncodedBytesTarget);else{const t=new _x(10);t.add(e.totalEncodedBytesTarget),this.mediaBytesTargetEncode.set(e.ssrc,t)}}if(t.ssrc=e.ssrc,t.bytes=e.bytesSent,t.packets=e.packetsSent,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.frameCount=e.framesEncoded,t.adaptionChangeReason=e.qualityLimitationReason,t.scalabilityMode=e.scalabilityMode,e.totalEncodeTime&&e.framesEncoded){const i=this.lastEncoderMs.get(e.ssrc);if(!i||i.lastFrameCount>e.framesEncoded)t.avgEncodeMs=1e3*e.totalEncodeTime/e.framesEncoded;else{const n=e.framesEncoded-i.lastFrameCount,r=e.totalEncodeTime-i.lastEncoderTime;t.avgEncodeMs=1e3*r/n}}if(e.framesEncoded&&e.qpSum){const i=this.lastEncoderMs.get(e.ssrc);!i||i.lastFrameCount>e.framesEncoded?t.qpSumPerFrame=e.qpSum/e.framesEncoded:t.qpSumPerFrame=(e.qpSum-i.lastQpSum)/(e.framesEncoded-i.lastFrameCount)}if(this.lastEncoderMs.set(e.ssrc,{lastFrameCount:e.framesEncoded,lastEncoderTime:e.totalEncodeTime,lastQpSum:e.qpSum,lts:Date.now()}),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.mediaSourceId&&this.processVideoMediaSource(e.mediaSourceId,t),this.processVideoTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,sb.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}processAudioOutboundStats(e){let t=this._stats.audioSend.find((t=>t.ssrc===e.ssrc));if(t||(t=hx(Sx),this._stats.audioSend.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsSent,t.bytes=e.bytesSent,e.mediaSourceId&&this.processAudioMediaSource(e.mediaSourceId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),this.processAudioTrackSenderStats(e,e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{const i=this.findRemoteStatsId(e.ssrc,sb.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}}findRemoteStatsId(e,t){var i;const n=Array.from(Qw(i=this.report).call(i)).find((i=>i.type===t&&i.ssrc===e));return n?n.id:null}processVideoMediaSource(e,t){const i=this.report.get(e);i&&i.width&&i.height&&i.framesPerSecond&&(t.inputFrame={width:i.width,height:i.height,frameRate:i.framesPerSecond})}processAudioMediaSource(e,t){const i=this.report.get(e);i&&(t.inputLevel=i.audioLevel)}processVideoTrackSenderStats(e,t,i){var n,r,o,s;const a=t?this.report.get(t):void 0,c=null!==(n=null==a?void 0:a.framesSent)&&void 0!==n?n:e.framesSent;if(\"number\"!=typeof c)return;let d=null!==(r=null==a?void 0:a.frameWidth)&&void 0!==r?r:e.frameWidth,l=null!==(o=null==a?void 0:a.frameHeight)&&void 0!==o?o:e.frameHeight,u=null!==(s=null==a?void 0:a.framesPerSecond)&&void 0!==s?s:e.framesPerSecond;if(\"number\"==typeof d&&\"number\"==typeof l||(d=0,l=0),null==u){const e=Date.now(),t=this.lastVideoFramesSent.get(i.ssrc);t&&e-t.lts>=800?(u=Math.round((c-t.count)/((e-t.lts)/1e3)),this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:u})):t?u=t.rate:this.lastVideoFramesSent.set(i.ssrc,{count:c,lts:e,rate:0})}i.sentFrame={width:d,height:l,frameRate:Math.max(0,u)}}processVideoTrackReceiverStats(e,t,i){var n,r,o,s,a;const c=t?this.report.get(t):void 0,d=null!==(n=null==c?void 0:c.framesReceived)&&void 0!==n?n:e.framesReceived,l=null!==(r=null==c?void 0:c.frameWidth)&&void 0!==r?r:e.frameWidth,u=null!==(o=null==c?void 0:c.frameHeight)&&void 0!==o?o:e.frameHeight,h=null!==(s=null==c?void 0:c.jitterBufferDelay)&&void 0!==s?s:e.jitterBufferDelay,p=null!==(a=null==c?void 0:c.jitterBufferEmittedCount)&&void 0!==a?a:e.jitterBufferEmittedCount;if(\"number\"==typeof d){const e=this.lastVideoFramesRecv.get(i.ssrc),t=Date.now();i.framesReceivedCount=d;let n=0;e&&t-e.lts>=800?(n=Math.round((d-e.count)/((t-e.lts)/1e3)),this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:n})):e?n=e.rate:this.lastVideoFramesRecv.set(i.ssrc,{count:d,lts:t,rate:0}),i.receivedFrame={width:l||0,height:u||0,frameRate:n||0},i.decodedFrame={width:l||0,height:u||0,frameRate:i.decodeFrameRate||0},i.outputFrame={width:l||0,height:u||0,frameRate:i.outputFrameRate||i.decodeFrameRate||0}}if(h&&p){const e=this.lastVideoJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=p-e.jitterBufferEmittedCount;n>0&&(t=1e3*(h-e.jitterBufferDelay)/n),i.jitterBufferMs=t,i.currentDelayMs=Math.round(t),this.lastVideoJBDelay.set(i.ssrc,{jitterBufferDelay:h,jitterBufferEmittedCount:p,jitterBufferMs:i.currentDelayMs})}}processAudioTrackSenderStats(e,t,i){var n,r,o,s;const a=t?this.report.get(t):void 0,c=null!==(n=null!==(r=null==a?void 0:a.echoReturnLoss)&&void 0!==r?r:e.echoReturnLoss)&&void 0!==n?n:0,d=null!==(o=null!==(s=null==a?void 0:a.echoReturnLossEnhancement)&&void 0!==s?s:e.echoReturnLossEnhancement)&&void 0!==o?o:0;i.aecReturnLoss=c,i.aecReturnLossEnhancement=d}processAudioTrackReceiverStats(e,t,i){var n,r,o,s,a,c,d;const l=t?this.report.get(t):void 0,u=null!==(n=null==l?void 0:l.removedSamplesForAcceleration)&&void 0!==n?n:e.removedSamplesForAcceleration,h=null!==(r=null==l?void 0:l.totalSamplesReceived)&&void 0!==r?r:e.totalSamplesReceived,p=null!==(o=null==l?void 0:l.jitterBufferDelay)&&void 0!==o?o:e.jitterBufferDelay,_=null!==(s=null==l?void 0:l.jitterBufferEmittedCount)&&void 0!==s?s:e.jitterBufferEmittedCount,E=null!==(a=null==l?void 0:l.audioLevel)&&void 0!==a?a:null==e?void 0:e.audioLevel,m=null!==(c=null==l?void 0:l.totalSamplesDuration)&&void 0!==c?c:null==e?void 0:e.totalSamplesDuration,f=null!==(d=null==l?void 0:l.concealedSamples)&&void 0!==d?d:e.concealedSamples;if(u&&h&&(i.accelerateRate=u/h),p&&_){const e=this.lastAudioJBDelay.get(i.ssrc)||{jitterBufferDelay:0,jitterBufferEmittedCount:0,jitterBufferMs:0};let t=e.jitterBufferMs;const n=_-e.jitterBufferEmittedCount;n>0&&(t=1e3*(p-e.jitterBufferDelay)/n),i.jitterBufferMs=Math.round(t),this.lastAudioJBDelay.set(i.ssrc,{jitterBufferDelay:p,jitterBufferEmittedCount:_,jitterBufferMs:i.jitterBufferMs})}i.outputLevel=E;let T=1920;m&&h&&(T=h/m/50,i.receivedFrames=Math.round(h/T)),f&&(i.droppedFrames=Math.round(f/T))}processRemoteInboundStats(e,t){const i=this.report.get(e);i&&(t.packetsLost=i.packetsLost,i.roundTripTime&&(t.rttMs=1e3*i.roundTripTime),i.jitter&&(t.jitterMs=1e3*i.jitter),i.timestamp&&(t.timestamp=i.timestamp))}getCodecFromCodecStats(e){const t=this.report.get(e);if(!t)return\"\";const i=t.mimeType.match(/\\/(.*)$/);return i&&i[1]?i[1]:\"\"}updateSendBitrate(){let e=0,t=null,i=null;this.mediaBytesSent.forEach((t=>{e+=t.diffMean()})),this.mediaBytesRetransmit.forEach((e=>{t=null===t?e.diffMean():t+e.diffMean()})),this.mediaBytesTargetEncode.forEach((e=>{i=null===i?e.diffMean():i+e.diffMean()}));const n=null!==t?e-t:e;this._stats.bitrate={actualEncoded:8*n/(this.options.updateInterval/1e3),transmit:8*e/(this.options.updateInterval/1e3)},null!==t&&(this._stats.bitrate.retransmit=8*t/(this.options.updateInterval/1e3)),null!==i&&(this._stats.bitrate.targetEncoded=8*i/(this.options.updateInterval/1e3))}}class Nx extends Ix{updateStats(){return Gh.resolve()}}function Dx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:250,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:500,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1e4;const o=function(){const e=navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]*/i);return e&&e[0]?Number(e[0].split(\"/\")[1]):null}();return o?o<76?new Ax(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new Ox(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):function(e){if(!window.RTCStatsReport)return!1;const t=e.getStats();return!!(t instanceof Gh||function(e){return!!e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof e.then}(t))}(e)?new Ox(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r}):new Nx(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:n,firstVideoDecodedTimeout:r})}let Px=class{get localCapabilities(){return Gv(this._localCapabilities)}get rtpCapabilities(){return Gv(this._rtpCapabilities)}get candidates(){return Gv(this._candidates)}get iceParameters(){return Gv(this._iceParameters)}get dtlsParameters(){return Gv(this._dtlsParameters)}constructor(e){og(this,\"sessionDesc\",void 0),og(this,\"_localCapabilities\",void 0),og(this,\"_rtpCapabilities\",void 0),og(this,\"_candidates\",void 0),og(this,\"_iceParameters\",void 0),og(this,\"_dtlsParameters\",void 0),og(this,\"setup\",void 0),og(this,\"currentMidIndex\",void 0),og(this,\"cname\",\"o/i14u9pJrxRKAsu\"),og(this,\"firefoxSsrcMidMap\",new Map),e=Gv(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:n,remoteRTPCapabilities:r,localCapabilities:o,direction:s,setup:a,videoCodec:c,audioCodec:d}=e;let l;this.setup=a,l=s===fb.RECEIVE_ONLY?CM.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=extmap-allow-mixed\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\"):CM.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=extmap-allow-mixed\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=recvonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=recvonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\"),this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=o;const u=s===fb.RECEIVE_ONLY?this.rtpCapabilities.send:this.rtpCapabilities.recv,h=s===fb.RECEIVE_ONLY?this._localCapabilities.recv:this._localCapabilities.send,p=s===fb.RECEIVE_ONLY?r.send.videoCodecs:WM(Yb.VIDEO,u,h,c),_=s===fb.RECEIVE_ONLY?r.send.audioCodecs:WM(Yb.AUDIO,u,h,d);for(const e of l.mediaDescriptions)e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=n,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=p.map((e=>e.payloadType.toString(10))),e.attributes.payloads=p,e.attributes.extmaps=u.videoExtensions),\"audio\"===e.media.mediaType&&(e.media.fmts=_.map((e=>e.payloadType.toString(10))),e.attributes.payloads=_,e.attributes.extmaps=u.audioExtensions,GM(e));this.sessionDesc=l,this.currentMidIndex=l.mediaDescriptions.length-1}toString(){return CM.print(this.sessionDesc)}hasMid(e){return Array.isArray(e)?e.every((e=>this.hasMid(e))):this.sessionDesc.mediaDescriptions.some((t=>t.attributes.mid===e))}send(e,t,i,n,r){i=i.replace(/ /g,\"-\");const{ssrcs:o,ssrcGroups:s}=DM(t,this.cname,Dy(\"SYNC_GROUP\")?i:void 0),a=this.findPreloadMediaDesc(o);if(a){if(kI()&&this.firefoxSsrcMidMap.set(o[0].ssrcId,a.attributes.mid),r&&(r.twcc||r.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(a);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(a,r),{mid:a.attributes.mid,needExchangeSDP:!0}}return{mid:a.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,o,n);let i;return-1===t?(i=this.createOrRecycleSendMedia(e,o,s,\"sendonly\",n,r),this.updateBundleMids()):(i=Gv(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=o,i.attributes.ssrcGroups=s,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,r)),kI()&&this.firefoxSsrcMidMap.set(o[0].ssrcId,i.attributes.mid),{needExchangeSDP:!0,mid:i.attributes.mid}}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{e.attributes.ssrcs=[]})),this.updateBundleMids()}receive(e,t,i){const n=[];return e.forEach((e=>{const r=e._mediaStreamTrack.kind,o=this.findAvailableRecvMediaIndex(r);let s,a=!1;-1===o?(a=!0,s=this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i),this.updateBundleMids()):(s=Gv(this.sessionDesc.mediaDescriptions[o]),s.attributes.direction=\"recvonly\"),n.push({mid:s.attributes.mid,needCreateTransceiver:a})})),n}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}addRemoteCandidate(e){const{foundation:t,protocol:i,address:n,port:r,type:o,relatedAddress:s,relatedPort:a,priority:c}=new RTCIceCandidate(e),d={foundation:null!=t?t:\"\",componentId:\"1\",transport:null!=i?i:\"\",priority:c?c+\"\":\"\",connectionAddress:null!=n?n:\"\",port:r?r+\"\":\"\",type:o?o+\"\":\"\",relAddr:null!=s?s:\"\",relPort:a?a+\"\":\"\",extension:{}};this.candidates.some((e=>e.priority===d.priority&&e.connectionAddress===d.connectionAddress&&e.port===d.port))||(this._candidates.push(d),this.sessionDesc.mediaDescriptions.forEach((e=>{e.attributes.candidates=this.candidates})))}clearRemoteCandidate(){this._candidates=[],this.sessionDesc.mediaDescriptions[0].attributes.candidates=this._candidates}createOrRecycleRecvMedia(e,t,i,n,r){const o=e._mediaStreamTrack.kind,s=this.rtpCapabilities.recv,a=WM(o,s,this.localCapabilities.send,o===Yb.AUDIO?r:n),c=o===Yb.VIDEO?s.videoExtensions:s.audioExtensions,d=\"\".concat(++this.currentMidIndex);let l={media:{mediaType:o,port:\"9\",protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:a.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:[],extmaps:c,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:a,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(d)}};l=this.mungRecvMediaDsec(l,e);const u=this.findFirstClosedMedia(o);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=l}else this.sessionDesc.mediaDescriptions.push(l);return l}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}findAvailableMediaIndex(e,t,i){return this.sessionDesc.mediaDescriptions.findIndex((n=>{const r=n.media.mediaType===e&&\"0\"!==n.media.port&&(\"sendonly\"===n.attributes.direction||\"sendrecv\"===n.attributes.direction)&&0===n.attributes.ssrcs.length;if(kI()){if(r){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==n.attributes.mid&&\"1\"!==n.attributes.mid)||!(!e||e!==n.attributes.mid)}return!1}return r&&n.attributes.mid===i}))}findAvailableRecvMediaIndex(e){return this.sessionDesc.mediaDescriptions.findIndex((t=>{const i=t.media.mediaType===e&&\"0\"!==t.media.port&&(\"recvonly\"===t.attributes.direction||\"sendrecv\"===t.attributes.direction);return\"0\"!==t.attributes.mid&&\"1\"!==t.attributes.mid&&i}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}restartICE(e){e=Gv(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}createOrRecycleSendMedia(e,t,i,n,r,o){const s=this.rtpCapabilities.send,a=e===Yb.VIDEO?s.videoCodecs:s.audioCodecs,c=e===Yb.VIDEO?s.videoExtensions:s.audioExtensions;kI()&&(r=\"\".concat(++this.currentMidIndex));let d={media:{mediaType:e,port:\"9\",protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:a.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:[],extmaps:c,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:a,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:r}};d=this.mungSendMediaDesc(d,o);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}mungRecvMediaDsec(e,t,i){const n=Gv(e);return LM(n),PM(n,t),kM(n,t),MM(n),UM(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=Gv(e);return UM(i,t,this.localCapabilities.recv),GM(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>kI()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}};const Lx=[\"sdp\"];var kx;function Mx(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Ux(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Mx(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Mx(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let xx=(kx=class e extends Hb{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}get localCodecs(){return[]}set isInRestartIce(e){this._isInRestartIce=e}get isInRestartIce(){return this._isInRestartIce}constructor(t,i,n){super(t,i),og(this,\"direction\",void 0),og(this,\"name\",void 0),og(this,\"store\",void 0),og(this,\"spec\",void 0),og(this,\"peerConnection\",void 0),og(this,\"initialOffer\",void 0),og(this,\"transport\",void 0),og(this,\"statsFilter\",void 0),og(this,\"localCandidateCount\",0),og(this,\"_isInRestartIce\",!1),og(this,\"mutex\",new hy(\"P2PConnection-mutex\")),og(this,\"onLocalCandidate\",void 0),og(this,\"remoteSDP\",void 0),og(this,\"pendingCandidates\",[]),og(this,\"localCapabilities\",void 0),og(this,\"isReady\",!1),og(this,\"restartCnt\",0),og(this,\"curTurnServerIndex\",0),this.store=i,this.spec=t,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t,i.p2pTransport),{optional:[{googDscp:!0}]}),this.direction=null!=n?n:fb.SEND_ONLY,this.name=this.direction===fb.SEND_ONLY?\"sendP2PConnection\":\"recvP2PConnection\",this.statsFilter=Dx(this.peerConnection,Dy(\"STATS_UPDATE_INTERVAL\"),void 0,kI()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(e){try{const t=await VM();if(this.localCapabilities=jM(t),e){const{sdp:t}=e,i=ux(e,Lx),n=function(){const e={audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},t=AM(arguments.length>2?arguments[2]:void 0,arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},\"sendonly\"),i={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},r={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(BM(t,e,\"videoExtensions\",i,n,r),BM(t,e,\"videoCodecs\",i,n,r),BM(t,e,\"audioExtensions\",i,n,r),BM(t,e,\"audioCodecs\",i,n,r),Dy(\"RAISE_H264_BASELINE_PRIORITY\")){const e=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"===e.fmtp.parameters[\"profile-level-id\"]));if(-1!==e){const t=r.videoCodecs.findIndex((e=>e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()));if(t<e){Qy.debug(\"raising H264 baseline profile priority\");const i=r.videoCodecs[e];r.videoCodecs.splice(e,1),r.videoCodecs.splice(t,0,i)}-1!==t&&Dy(\"FILTER_SEND_H264_BASELINE\")&&(i.videoCodecs=i.videoCodecs.filter((e=>!(e.rtpMap&&\"h264\"===e.rtpMap.encodingName.toLocaleLowerCase()&&e.fmtp&&\"42001f\"!==e.fmtp.parameters[\"profile-level-id\"]))))}}return{send:i,recv:n,sendrecv:r}}({},{},t);this.remoteSDP=new Px({remoteIceParameters:i.iceParameters,remoteDtlsParameters:i.dtlsParameters,candidates:[],remoteRTPCapabilities:n,localCapabilities:this.localCapabilities,direction:this.direction,setup:\"actpass\",videoCodec:this.store.codec,audioCodec:this.store.audioCodec}),await this.setRemoteDescription({type:\"offer\",sdp:this.remoteSDP.toString()}),this.isReady=!0;const r=await this.peerConnection.createAnswer();if(!r.sdp)throw new Error(\"Cannot get answer sdp when trying to establish PeerConnection.\");const o=bM(r.sdp);await this.peerConnection.setLocalDescription(r);const s=await FM({},{},r.sdp);this.localCapabilities=jM(s);const a=this.peerConnection.getTransceivers()[0];return null!=a&&a.receiver&&a.receiver.transport&&this.tryBindTransportEvents(a.receiver.transport),Ux(Ux({},o),{},{sdp:r.sdp})}{this.peerConnection.addTransceiver(\"video\",{direction:\"sendonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"sendonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=bM(e.sdp);return this.initialOffer=e,Ux(Ux({},t),{},{sdp:e.sdp})}}catch(e){throw new rv(nv.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");await this.peerConnection.setLocalDescription(this.initialOffer);const{sdp:t,iceParameters:i,dtlsParameters:n}=e,r=await FM({},{},t);this.remoteSDP=new Px({remoteIceParameters:i,remoteDtlsParameters:n,candidates:[],remoteRTPCapabilities:r,localCapabilities:this.localCapabilities,direction:this.direction,setup:\"active\",videoCodec:this.store.codec,audioCodec:this.store.audioCodec}),await this.setRemoteDescription({type:\"answer\",sdp:this.remoteSDP.toString()});const o=this.peerConnection.getTransceivers()[0];null!=o&&o.sender&&o.sender.transport&&this.tryBindTransportEvents(o.sender.transport)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async addRemoteCandidate(e){try{e&&this.pendingCandidates.push(e),this.peerConnection.remoteDescription&&this.isReady&&(this.pendingCandidates.forEach((e=>{this.peerConnection.addIceCandidate(e)})),this.pendingCandidates=[])}catch(e){throw new rv(nv.ADD_CANDIDATE_FAILED,\"P2PConnection.addRemoteCandidate failed; \".concat(e.toString()))}}send(e,t,i){var n=this;return ZU((function*(){const r=yield WU(n.mutex.lock(\"From P2PConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const o=[],s=n.remoteSDP.receive(e,t,i);e.forEach(((e,t)=>{if(s[t].needCreateTransceiver){const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t),e._updateRtpTransceiver(t)}else{const i=n.peerConnection.getTransceivers().find((e=>e.mid===s[t].mid));if(!i)throw new Error(\"cannot find transceiver when sendPeerconnection send, mid is \".concat(s[t].mid));o.push(i),e._updateRtpTransceiver(i)}})),kI()&&!0===Dy(\"SIMULCAST\")&&(yield WU(n.applySimulcastForFirefox(o,e)));const a=s.map((e=>e.mid)),c=yield WU(n.peerConnection.createOffer()),d=n.mungSendOfferSDP(c.sdp,e,a),l=CM.parse(d),u=a.map((e=>{const t=l.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return wM(t,Dy(\"USE_PUB_RTX\"))})),h=o.map(((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i}}));yield WU(n.peerConnection.setLocalDescription({type:\"offer\",sdp:d}));try{yield h}catch(e){const t=n.remoteSDP.toString();throw yield WU(n.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield WU(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:t})),yield WU(n.stopSending(a,!0)),e}yield WU(n.applySimulcastEncodings(o,e)),yield WU(n.applySendEncodings(o,e));const p=n.remoteSDP.toString(),_=n.logSDPExchange(d,\"offer\",\"local\",\"send\");return null==_||_(p),yield WU(n.setRemoteDescription({type:\"answer\",sdp:p})),o.map(((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i}}))}catch(e){throw e instanceof rv?e:new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length (\".concat(t.length,\") doesn't match mids' length (\").concat(e.length,\") when trying to call P2PConnection.stopSending.\"));t.map((e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==r||r(o),await this.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"))}else Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" no need to exchange SDP.\"));const s=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!s||null===s.mid)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,mid:s.mid,transceiver:s}}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async mockReceive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(n.sdp,r,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\"))}else Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" no need to exchange SDP.\"))}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async restartICE(t){try{if(this.store.p2pTransport===Ay.Auto&&(this.store.p2pTransport=Ay.SdRtn,MD().supportPCSetConfiguration&&this.peerConnection.setConfiguration(e.resolvePCConfiguration(this.spec,this.store.p2pTransport))),this.restartCnt>3&&(this.restartCnt=0,MD().supportPCSetConfiguration&&this.peerConnection.setConfiguration(e.resolvePCConfiguration(this.spec,this.store.p2pTransport,++this.curTurnServerIndex))),!t){this.restartCnt++,this.isReady=!1;const e=await this.peerConnection.createOffer({iceRestart:!0});if(!e.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const{iceParameters:t}=bM(e.sdp);return this.store.descriptionStart(),this.direction===fb.SEND_ONLY&&await this.peerConnection.setLocalDescription(e),t}if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");if(this.remoteSDP.restartICE(t),this.store.descriptionStart(),this.direction===fb.RECEIVE_ONLY){this.restartCnt++,await this.setRemoteDescription({type:\"offer\",sdp:this.remoteSDP.toString()});const e=await this.peerConnection.createAnswer();if(!e.sdp)throw new Error(\"Cannot get answer sdp when trying to iceRestart.\");const{iceParameters:t}=bM(e.sdp);return await this.peerConnection.setLocalDescription(e),t}await this.setRemoteDescription({type:\"answer\",sdp:this.remoteSDP.toString()}),this.isReady=!0}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}close(){var e;this.peerConnection.close(),this.peerConnection.onicecandidate=null,null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.transport=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),o=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==o||o(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?kI()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:Ux(Ux({},Ex),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:Ux(Ux({},Ex),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e,t;Dn(e=[\"connected\",\"completed\"]).call(e,this.peerConnection.iceConnectionState)&&(this.isReady=!1),null===(t=this.onICEConnectionStateChange)||void 0===t||t.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;\"connected\"===this.peerConnection.connectionState&&(this.restartCnt=0),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.startICECandidate()}startICECandidate(){this.peerConnection.onicecandidate||(this.localCandidateCount=0,this.peerConnection.onicecandidate=e=>{if(e.candidate){var t;if(e.candidate.candidate)null===(t=this.onLocalCandidate)||void 0===t||t.call(this,e.candidate.toJSON());this.localCandidateCount+=1}else Qy.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount)})}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t,i){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={iceServers:[]};var o;t.iceServers?r.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(bv(t.turnServer.servers)?r.iceServers=t.turnServer.servers:(r.iceServers&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers,i,n)),Dy(\"USE_TURN_SERVER_OF_GATEWAY\")&&r.iceServers&&t.turnServer.serversFromGateway&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway,i,n)),Dn(o=[Ay.Relay,Ay.SdRtn]).call(o,i)&&(r.iceTransportPolicy=\"relay\"),Dy(\"FORCE_TURN_TCP\")?r.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(r.iceTransportPolicy=\"relay\")}))));return Dy(\"ENABLE_ENCODED_TRANSFORM\")&&MD().supportWebRTCEncodedTransform&&(r.encodedInsertableStreams=!0),Qy.debug(\"P2PConnection p2pTransport is \".concat(i)),r}static turnServerConfigToIceServers(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=[],r=e.filter((e=>e.tcpport));Qy.debug(\"P2PConnection turnServers is \".concat(r,\", current index is \").concat(i));const o=r.length>i?r[i]:r[0];switch(t){case Ay.SdRtn:const t=e.filter((e=>{var t;return Dn(t=e.username).call(t,\"glb:\")&&e.turnServerURL==e.turnServerURL})),r=t.length>i?t[i]:t[0];r&&(n.push({username:r.username,credential:r.password,credentialType:\"password\",urls:\"turn:\".concat(Pw(r.turnServerURL),\":\").concat(r.tcpport,\"?transport=udp\")}),n.push({username:r.username,credential:r.password,credentialType:\"password\",urls:\"turns:\".concat(Pw(r.turnServerURL),\":\").concat(r.tcpport,\"?transport=tcp\")}));break;case Ay.Relay:o&&(n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turn:\".concat(o.turnServerURL,\":\").concat(o.tcpport,\"?transport=udp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turns:\".concat(Pw(o.turnServerURL),\":\").concat(o.tcpport,\"?transport=tcp\")}));break;default:o&&(n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turn:\".concat(o.turnServerURL,\":\").concat(o.tcpport,\"?transport=udp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"turns:\".concat(Pw(o.turnServerURL),\":\").concat(o.tcpport,\"?transport=tcp\")}),n.push({username:o.username,credential:o.password,credentialType:\"password\",urls:\"stun:\".concat(o.turnServerURL,\":\").concat(o.tcpport)}))}return n}tryBindTransportEvents(e){if(e){this.transport=e,e.onstatechange=()=>{var t;null!=e&&e.state&&(null===(t=this.onDTLSTransportStateChange)||void 0===t||t.call(this,e.state))},e.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const t=e.iceTransport;t&&(t.onstatechange=()=>{const t=null==e?void 0:e.iceTransport.state;var i;t&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,t))},t.getSelectedCandidatePair&&(t.onselectedcandidatepairchange=()=>{if(t.getSelectedCandidatePair()){const{local:e,remote:i}=t.getSelectedCandidatePair();Qy.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transport&&(this.transport.onstatechange=null,this.transport.onerror=null,this.transport.iceTransport&&(this.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>t.track===e._mediaStreamTrack))}if(!t)return Qy.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return Qy.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!MD().supportSetRtpSenderParameters)return Qy.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const n={},r={};switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(e._encoderConfig){var o;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(r.maxBitrate=1e3*t),Dn(o=e._hints).call(o,eP.LOW_STREAM)&&(i&&(r.maxFramerate=kw(i)),n&&n>=1&&(r.scaleResolutionDownBy=n))}if(Dy(\"DSCP_TYPE\")&&QI()){var s;const e=Dy(\"DSCP_TYPE\");Dn(s=[\"very-low\",\"low\",\"medium\",\"high\"]).call(s,e)&&(r.networkPriority=e)}const a=t.getParameters(),c=null===(i=a.encodings)||void 0===i?void 0:i[0];kI()&&!c&&(n.encodings=[r]),c&&Object.assign(c,r),Object.assign(a,n),Qy.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(a.encodings))),await t.setParameters(a)}async applySendEncodings(e,t){try{if(!MD().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof Hk&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){Qy.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=CM.parse(e);return t.forEach(((e,t)=>{const r=i[t],o=n.mediaDescriptions.find((e=>e.attributes.mid===r));o&&(PM(o,e),xM(o,e,this.store.codec))})),CM.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,o,s;const c=e[a],d=t[a];if(d instanceof Hk&&!Dn(i=d._hints).call(i,eP.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(o=d._scalabilityMode)&&void 0!==o&&o.numSpatialLayers&&(null===(s=d._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!kI()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof Hk&&this.isVP8Simulcast(n)){const t=e[i],r={},o={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,r))}}}isVP8Simulcast(e){var t,i,n,r,o;return!!(e instanceof Hk&&Dy(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Dn(t=e._hints).call(t,eP.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(o=e._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(Dy(\"SDP_LOGGING\"))return Qy.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async e=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}async getRemoteSSRC(e,t){var i,n;if(t=null!==(i=t)&&void 0!==i?i:null===(n=this.currentRemoteDescription)||void 0===n?void 0:n.sdp){var r;const i=null===(r=CM.parse(t).mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===r?void 0:r.attributes.ssrcs;return null==i?void 0:i[0].ssrcId}}async setRemoteDescription(e){var t;await this.peerConnection.setRemoteDescription(e),Dn(t=[\"connected\",\"completed\"]).call(t,this.peerConnection.iceConnectionState)||(this.isReady=!0,this.addRemoteCandidate())}mungReceiveAnswerSDP(e,t,i){const n=CM.parse(e),r=n.mediaDescriptions.find((e=>e.attributes.mid===t));return r&&i===Yb.AUDIO&&\"audio\"===r.media.mediaType&&GM(r),CM.print(n)}},rb(kx.prototype,\"establish\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"establish\"),kx.prototype),rb(kx.prototype,\"connect\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"connect\"),kx.prototype),rb(kx.prototype,\"receive\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"receive\"),kx.prototype),rb(kx.prototype,\"mockReceive\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"mockReceive\"),kx.prototype),rb(kx.prototype,\"stopReceiving\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"stopReceiving\"),kx.prototype),rb(kx.prototype,\"restartICE\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"restartICE\"),kx.prototype),rb(kx.prototype,\"close\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"close\"),kx.prototype),rb(kx.prototype,\"updateEncoderConfig\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"updateEncoderConfig\"),kx.prototype),rb(kx.prototype,\"updateSendParameters\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"updateSendParameters\"),kx.prototype),rb(kx.prototype,\"replaceTrack\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"replaceTrack\"),kx.prototype),rb(kx.prototype,\"muteLocal\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"muteLocal\"),kx.prototype),rb(kx.prototype,\"unmuteLocal\",[Vx],Object.getOwnPropertyDescriptor(kx.prototype,\"unmuteLocal\"),kx.prototype),kx);function Vx(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}function Fx(e,t){let i=document.createElement(\"video\"),n=document.createElement(\"canvas\");i.setAttribute(\"style\",\"display:none\"),n.setAttribute(\"style\",\"display:none\"),i.setAttribute(\"muted\",\"\"),i.muted=!0,i.setAttribute(\"autoplay\",\"\"),i.autoplay=!0,i.setAttribute(\"playsinline\",\"\"),n.width=kw(t.width),n.height=kw(t.height);const r=kw(t.framerate||15);document.body.append(i),document.body.append(n);let o=e._mediaStreamTrack;i.srcObject=new MediaStream([o]),i.play();const s=n.getContext(\"2d\");if(!s)throw new Sb(nv.UNEXPECTED_ERROR,\"can not get canvas context\");const a=MD(),c=n.captureStream(a.supportRequestFrame?0:r).getVideoTracks()[0];c.canvas||(c.canvas=n),n.startCapture=()=>{if(!i)return n.stopCapture&&n.stopCapture();if(i.paused&&i.play(),i.videoHeight>2&&i.videoWidth>2){const e=i.videoWidth,t=i.videoHeight/e,r=n.width*t;Math.abs(r-n.height)>=2&&(Qy.debug(\"adjust low stream resolution\",\"\".concat(n.width,\"x\").concat(n.height,\" -> \").concat(n.width,\"x\").concat(r)),n.height=r)}s.drawImage(i,0,0,n.width,n.height),c.requestFrame&&c.requestFrame(),o!==e._mediaStreamTrack&&(o=e._mediaStreamTrack,i.srcObject=new MediaStream([o]))},n.stopCapture=kP((()=>n.startCapture&&n.startCapture()),r);const d=c.stop;return c.stop=()=>{d.call(c),i&&(i.remove(),i.srcObject=null,i=null),n&&(n.width=0,n.remove(),n.stopCapture&&n.stopCapture(),n.startCapture=void 0,n.stopCapture=void 0,n=null),Qy.debug(\"clean low stream renderer\")},c}var Bx=function(e){return e[e.HEIGHT=2033]=\"HEIGHT\",e[e.FRAME_RATE=2034]=\"FRAME_RATE\",e[e.WIDTH=2035]=\"WIDTH\",e}(Bx||{}),jx=function(e){return e[e.FRAME_RATE=2002]=\"FRAME_RATE\",e[e.WIDTH=2003]=\"WIDTH\",e[e.HEIGHT=2004]=\"HEIGHT\",e[e.PACKAGE_LOST=2005]=\"PACKAGE_LOST\",e[e.AVG_ENCODE=2007]=\"AVG_ENCODE\",e[e.NACKS=2009]=\"NACKS\",e[e.PLIS=2010]=\"PLIS\",e[e.FIRS=2011]=\"FIRS\",e[e.BITRATE=2012]=\"BITRATE\",e[e.PACKAGE_RATE=2031]=\"PACKAGE_RATE\",e[e.ADAPTATION=2032]=\"ADAPTATION\",e[e.ACTUAL_ENCODED=2060]=\"ACTUAL_ENCODED\",e[e.BANDWIDTH=2061]=\"BANDWIDTH\",e[e.RETRANSMIT=2062]=\"RETRANSMIT\",e[e.TARGET_ENCODED=2064]=\"TARGET_ENCODED\",e[e.TRANSMIT=2066]=\"TRANSMIT\",e[e.FREEZE=2082]=\"FREEZE\",e[e.DISABLED=2095]=\"DISABLED\",e[e.PLAYER_STATUS=2128]=\"PLAYER_STATUS\",e[e.QP_SUM=2143]=\"QP_SUM\",e}(jx||{}),Gx=function(e){return e[e.BITRATE=2069]=\"BITRATE\",e[e.PACKAGE_LOST=2070]=\"PACKAGE_LOST\",e[e.PACKAGE_RATE=2071]=\"PACKAGE_RATE\",e[e.HEIGHT=2073]=\"HEIGHT\",e[e.FRAME_RATE=2075]=\"FRAME_RATE\",e[e.WIDTH=2077]=\"WIDTH\",e}(Gx||{}),Wx=function(e){return e[e.JITTER=-1]=\"JITTER\",e[e.PACKAGE_LOST=2014]=\"PACKAGE_LOST\",e[e.WIDTH=2018]=\"WIDTH\",e[e.HEIGHT=2019]=\"HEIGHT\",e[e.FRAME_RATE=2020]=\"FRAME_RATE\",e[e.JITTER_BUFFER=2023]=\"JITTER_BUFFER\",e[e.CURRENT_DELAY=2024]=\"CURRENT_DELAY\",e[e.NACKS=2026]=\"NACKS\",e[e.PLIS=2027]=\"PLIS\",e[e.FIRS=2028]=\"FIRS\",e[e.BITRATE=2029]=\"BITRATE\",e[e.PACKAGE_RATE=2078]=\"PACKAGE_RATE\",e[e.FREEZE=2084]=\"FREEZE\",e[e.DISABLED=2101]=\"DISABLED\",e[e.PLAYER_STATUS=2129]=\"PLAYER_STATUS\",e[e.QP_SUM=2144]=\"QP_SUM\",e[e.I_FRAME_DELAY=2149]=\"I_FRAME_DELAY\",e}(Wx||{}),Hx=function(e){return e[e.FRAME_RATE_DECODE=2021]=\"FRAME_RATE_DECODE\",e[e.FRAME_RATE_RENDER=2022]=\"FRAME_RATE_RENDER\",e[e.FRAME_RATE_OUTPUT=2155]=\"FRAME_RATE_OUTPUT\",e[e.FREEZE_TIME=2109]=\"FREEZE_TIME\",e[e.FREEZE_TIME_RENDER=2147]=\"FREEZE_TIME_RENDER\",e[e.FREEZE_DURATION=2156]=\"FREEZE_DURATION\",e}(Hx||{}),Kx=function(e){return e[e.PCM_LEVEL=2104]=\"PCM_LEVEL\",e}(Kx||{}),Yx=function(e){return e[e.PACKAGE_LOST=-1]=\"PACKAGE_LOST\",e[e.LEVEL=2038]=\"LEVEL\",e[e.BITRATE=2039]=\"BITRATE\",e[e.PACKAGE_RATE=2040]=\"PACKAGE_RATE\",e[e.AEC_RETURN_LOSS=2041]=\"AEC_RETURN_LOSS\",e[e.AEC_RETURN_LOSS_ENH=2042]=\"AEC_RETURN_LOSS_ENH\",e[e.FREEZE=2081]=\"FREEZE\",e[e.DISABLED=2096]=\"DISABLED\",e}(Yx||{}),qx=function(e){return e[e.BITRATE=2044]=\"BITRATE\",e[e.PACKAGE_LOST=2045]=\"PACKAGE_LOST\",e[e.PACKAGE_RATE=2046]=\"PACKAGE_RATE\",e[e.CURRENT_DELAY=2047]=\"CURRENT_DELAY\",e[e.JITTER_BUFFER=2054]=\"JITTER_BUFFER\",e[e.JITTER=2055]=\"JITTER\",e[e.FREEZE=2083]=\"FREEZE\",e[e.DISABLED=2102]=\"DISABLED\",e[e.PCM_LEVEL=2105]=\"PCM_LEVEL\",e[e.PLAYER_STATUS=2130]=\"PLAYER_STATUS\",e[e.CONCEALED_SAMPLES=2148]=\"CONCEALED_SAMPLES\",e}(qx||{}),zx=function(e){return e[e.FREEZE_TIME=-1]=\"FREEZE_TIME\",e[e.LEVEL=2043]=\"LEVEL\",e}(zx||{}),Jx=function(e){return e[e.RTT=2006]=\"RTT\",e[e.CONN_TYPE=801]=\"CONN_TYPE\",e}(Jx||{});const Xx=1e3,Qx=3;function Zx(e,t,i){null!=i&&Number.isFinite(i)&&(e[t]=Math.round(Math.max(0,i)))}function $x(e){const t={[Jx.CONN_TYPE]:0,[Jx.RTT]:e.rtt};switch(e.selectedCandidatePair.localCandidate.candidateType){case\"relay\":{const i=e.selectedCandidatePair.localCandidate.relayProtocol;\"udp\"===i&&(t[Jx.CONN_TYPE]=1),\"tcp\"===i&&(t[Jx.CONN_TYPE]=3),\"tls\"===i&&(t[Jx.CONN_TYPE]=4);break}case\"srflx\":t[Jx.CONN_TYPE]=2}return t}function eV(e){let t=0;switch(e){case\"none\":t=0;break;case\"cpu\":t=1;break;case\"bandwidth\":t=2;break;case\"other\":t=3}return t}class tV extends Sv{constructor(e){super(),og(this,\"store\",void 0),og(this,\"uploadWRTCStatsTimer\",void 0),og(this,\"uploadOutboundDenoiserStatsTimer\",void 0),og(this,\"uploadExtStatsTimer\",void 0),og(this,\"uploadExtUsageStatsTimer\",void 0),og(this,\"uploadInboundExtStatsTimer\",void 0),og(this,\"requestStats\",void 0),og(this,\"requestTransportStats\",void 0),og(this,\"requestLocalMedia\",void 0),og(this,\"requestRemoteMedia\",void 0),og(this,\"requestAllTracks\",void 0),og(this,\"requestVideoIsReady\",void 0),og(this,\"requestUploadStats\",void 0),og(this,\"requestUpload\",void 0),og(this,\"uploadOutboundStarted\",!1),og(this,\"uploadInboundStarted\",!1),og(this,\"uploadTransportStarted\",!1),og(this,\"uploadExtensionUsageStarted\",!1),og(this,\"lastRecvStats\",void 0),og(this,\"lastSendStats\",void 0),og(this,\"lastFullRecvStats\",void 0),og(this,\"lastFullSendStats\",void 0),og(this,\"needUploadRenderFreezeTime\",!0),this.store=e}uploadWRTCStats(e){if(!this.requestStats||!this.requestUploadStats)return;let t,i;if(this.uploadTransportStarted&&(t=this.requestStats(),this.store.useP2P&&(i=this.requestStats(!0))),!t&&this.uploadOutboundStarted&&(t=this.requestStats()),!i&&this.uploadInboundStarted&&(i=this.requestStats(!0)),t||i){const n={};if(this.uploadTransportStarted&&t){const r=this.getTransportStats(t,i,e);r&&(n.misc=[r])}if(this.uploadOutboundStarted&&t){const i=this.getOutboundStats(t,e?this.lastSendStats:this.lastFullSendStats,e);i&&(n.outbound=[i])}if(this.uploadInboundStarted&&i){const t=this.getInboundStats(i,e?this.lastRecvStats:this.lastFullRecvStats,e);t&&(n.inbound=t)}this.requestUploadStats(n)}this.lastRecvStats=i,this.lastSendStats=t,e||(this.lastFullRecvStats=i,this.lastFullSendStats=t)}startUploadWRTCStats(){if(this.uploadWRTCStatsTimer)return;let e=1;this.uploadWRTCStatsTimer=window.setInterval((()=>{if(!this.uploadTransportStarted&&!this.uploadInboundStarted&&!this.uploadOutboundStarted)return this.stopUploadWRTCStats();this.uploadWRTCStats(e!==Qx),++e===Qx+1&&(e=1)}),Xx)}stopUploadWRTCStats(){window.clearInterval(this.uploadWRTCStatsTimer),this.uploadWRTCStatsTimer=void 0,this.lastSendStats&&(this.lastSendStats.videoSend=[],this.lastSendStats.audioSend=[],this.lastSendStats=void 0),this.lastRecvStats&&(this.lastRecvStats.videoRecv=[],this.lastRecvStats.audioRecv=[],this.lastRecvStats=void 0)}getTransportStats(e,t,i){if(!this.requestStats)return;if(i)return null==e.rtt?void 0:{addition:{[Jx.RTT]:e.rtt,[Jx.CONN_TYPE]:void 0}};const n=$x(e);if(this.store.useP2P){if(t){const e=$x(t);n[Jx.CONN_TYPE]+=e[Jx.CONN_TYPE]<<3}n[Jx.CONN_TYPE]+=110}else n[Jx.CONN_TYPE]+=100;return{addition:n}}getOutboundStats(e,t,i){if(!this.requestUploadStats||!this.requestLocalMedia)return;const n=this.requestLocalMedia();if(!n||0===n.length)return;let r,o,s;return n.forEach((n=>{let[a,{track:c,ssrcs:d}]=n;switch(a){case Jb.LocalVideoLowTrack:case Jb.LocalVideoTrack:if(a===Jb.LocalVideoTrack){const n=function(e,t,i,n,r){const o=t.videoSend.find((t=>t.ssrc===e));if(!o)return;const s={},{sentFrame:a,inputFrame:c}=o;if(c&&a){const e=c.frameRate,t=a.frameRate;s[jx.FREEZE]=function(e,t){let i=!0;return i=!(e<=5)&&(e<=10?t<3:e<=20?t<4:t<5),i}(e,t)?1:0}if(Zx(s,jx.QP_SUM,o.qpSumPerFrame),r)return s;switch(a&&(Zx(s,jx.HEIGHT,a.height),Zx(s,jx.WIDTH,a.width),Zx(s,jx.FRAME_RATE,a.frameRate)),s[jx.DISABLED]=n._originMediaStreamTrack&&!n._originMediaStreamTrack.enabled||n._mediaStreamTrack&&!n._mediaStreamTrack.enabled?1:0,o.adaptionChangeReason){case\"none\":s[jx.ADAPTATION]=0;break;case\"cpu\":s[jx.ADAPTATION]=1;break;case\"bandwidth\":s[jx.ADAPTATION]=2;break;case\"other\":s[jx.ADAPTATION]=3}let d=0;o.adaptionChangeReason&&(d+=eV(o.adaptionChangeReason)),t.qualityLimitationReason&&(d+=eV(t.qualityLimitationReason)<<3),s[jx.ADAPTATION]=d,s[jx.PLAYER_STATUS]=gP[n._player?n._player.videoElementStatus:\"uninit\"],Zx(s,jx.NACKS,o.nacksCount),Zx(s,jx.PLIS,o.plisCount),Zx(s,jx.FIRS,o.firsCount),Zx(s,jx.AVG_ENCODE,o.avgEncodeMs);const l=i&&i.videoSend.find((t=>t.ssrc===e));if(l){let e=r?Xx:Xx*Qx;l.timestamp&&o.timestamp&&(e=o.timestamp-l.timestamp),null!=l.packets&&null!=o.packets&&Zx(s,jx.PACKAGE_RATE,1e3*(o.packets-l.packets)/e),null!=o.packetsLost&&null!=l.packetsLost&&Zx(s,jx.PACKAGE_LOST,o.packetsLost-l.packetsLost),null!=l.bytes&&null!=o.bytes&&Zx(s,jx.BITRATE,8*(o.bytes-l.bytes)/e)}return s}(d[0].ssrcId,e,t,c,i),r=i?null:function(e,t,i){const n=t.videoSend.find((t=>t.ssrc===e));if(!n)return null;const r={},o=n.inputFrame,s=o&&o.height||i&&i.videoHeight||0,a=o&&o.width||i&&i.videoWidth||0,c=o&&o.frameRate||0;return Zx(r,Bx.HEIGHT,s),Zx(r,Bx.WIDTH,a),Zx(r,Bx.FRAME_RATE,c),r}(d[0].ssrcId,e,c),s=i?null:function(e){const t={};return Zx(t,jx.RETRANSMIT,e.bitrate.retransmit),Zx(t,jx.TARGET_ENCODED,e.bitrate.targetEncoded),Zx(t,jx.ACTUAL_ENCODED,e.bitrate.actualEncoded),Zx(t,jx.TRANSMIT,e.bitrate.transmit),Zx(t,jx.BANDWIDTH,e.sendBandwidth),t}(e);o=Object.assign({},n,r,s)}else s=i?void 0:function(e,t,i){const n=t.videoSend.find((t=>t.ssrc===e));if(!n)return;const r={},o=n.sentFrame;if(o&&(Zx(r,Gx.HEIGHT,o.height),Zx(r,Gx.WIDTH,o.width),Zx(r,Gx.FRAME_RATE,o.frameRate)),i){const t=i.videoSend.find((t=>t.ssrc===e));if(t){let e=Xx*Qx;t.timestamp&&n.timestamp&&(e=n.timestamp-t.timestamp),null!=t.packets&&null!=n.packets&&Zx(r,Gx.PACKAGE_RATE,1e3*(n.packets-t.packets)/e),null!=n.packetsLost&&null!=t.packetsLost&&Zx(r,Gx.PACKAGE_LOST,n.packetsLost-t.packetsLost),null!=t.bytes&&null!=n.bytes&&Zx(r,Gx.BITRATE,8*(n.bytes-t.bytes)/e)}}return r}(d[0].ssrcId,e,t);break;case Jb.LocalAudioTrack:r=i?void 0:function(e,t,i,n){const r=t.audioSend.find((t=>t.ssrc===e));if(!r)return;const o={};o[Yx.DISABLED]=n._originMediaStreamTrack&&!n._originMediaStreamTrack.enabled||n._mediaStreamTrack&&!n._mediaStreamTrack.enabled?1:0;const s=100*n._source.getAccurateVolumeLevel(),a=r.inputLevel;if(null!=a){const e=Math.ceil(50*Math.log10(100*a+1));Zx(o,Yx.LEVEL,e)}Zx(o,Kx.PCM_LEVEL,s),Zx(o,Yx.AEC_RETURN_LOSS,r.aecReturnLoss),Zx(o,Yx.AEC_RETURN_LOSS_ENH,r.aecReturnLossEnhancement),o[Yx.FREEZE]=0;const c=i&&i.audioSend.find((t=>t.ssrc===e));if(c){let e=Xx*Qx;c.timestamp&&r.timestamp&&(e=r.timestamp-c.timestamp),null!=c.bytes&&null!=r.bytes&&Zx(o,Yx.BITRATE,8*(r.bytes-c.bytes)/e),null!=c.packets&&null!=r.packets&&Zx(o,Yx.PACKAGE_RATE,1e3*(r.packets-c.packets)/e)}return o}(d[0].ssrcId,e,t,c)}})),{high:o,low:s,audio:r}}getInboundStats(e,t,i){if(!this.requestRemoteMedia)return;const n=this.requestRemoteMedia()||[],r=[];return n.forEach((n=>{let[o,s]=n;const a={peer:o.uid};if(s.has(Yb.VIDEO)&&o.videoTrack){const n=o._videoSSRC&&this.requestVideoIsReady&&this.requestVideoIsReady(o._videoSSRC)||!1,r=o.videoTrack?function(e,t,i,n,r,o,s){var a;const c=t.videoRecv.find((t=>t.ssrc===e));if(!c)return;const d={},{receivedFrame:l,outputFrame:u,decodeFrameRate:h}=c,p=i&&i.videoRecv.find((t=>t.ssrc===e));if(d[Wx.FREEZE]=r&&yV.isRemoteVideoFreeze(n,c,p)?1:0,Zx(d,Hx.FRAME_RATE_DECODE,h),Zx(d,Wx.QP_SUM,c.qpSumPerFrame),c.framesRateFirefox&&Zx(d,Wx.FRAME_RATE,c.framesRateFirefox),l&&Zx(d,Wx.FRAME_RATE,l.frameRate),p){const e=t.timestamp-i.timestamp||(s?Xx:Qx*Xx);null!=c.packetsLost&&null!=p.packetsLost&&Zx(d,Wx.PACKAGE_LOST,c.packetsLost-p.packetsLost),null!=p.bytes&&null!=c.bytes&&Zx(d,Wx.BITRATE,8*(c.bytes-p.bytes)/e),null!=p.packets&&null!=c.packets&&Zx(d,Wx.PACKAGE_RATE,1e3*(c.packets-p.packets)/e)}if(s)return d;l?(Zx(d,Wx.HEIGHT,l.height),Zx(d,Wx.WIDTH,l.width)):n&&(Zx(d,Wx.HEIGHT,n._videoHeight||0),Zx(d,Wx.WIDTH,n._videoWidth||0)),u&&Zx(d,Hx.FRAME_RATE_OUTPUT,u.frameRate);const _=null===(a=n._player)||void 0===a?void 0:a.rendFrameRate.toFixed(0);if(_&&Zx(d,Hx.FRAME_RATE_RENDER,+_),Zx(d,Wx.JITTER_BUFFER,c.jitterBufferMs),Zx(d,Wx.CURRENT_DELAY,c.currentDelayMs),Zx(d,Wx.FIRS,c.firsCount),Zx(d,Wx.NACKS,c.nacksCount),Zx(d,Wx.PLIS,c.plisCount),n){d[Wx.DISABLED]=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?0:1;const e=n._player;if(e){const{freezeTimeCounterList:t,renderFreezeAccTime:i,videoElementStatus:n}=e;if(t&&t.length>0&&Zx(d,Hx.FREEZE_TIME,t.splice(0,1)[0]),o&&\"visible\"===cM.visibility&&n===TP.PLAYING&&MD().supportRequestVideoFrameCallback){const t=Math.min(6e3,i);e.renderFreezeAccTime=Math.max(0,i-t),Zx(d,Hx.FREEZE_TIME_RENDER,t)}if(\"number\"==typeof c.totalFreezesDuration){const e=p&&p.totalFreezesDuration?c.totalFreezesDuration-p.totalFreezesDuration:c.totalFreezesDuration;Zx(d,Hx.FREEZE_DURATION,1e3*e)}}}if(d[Wx.PLAYER_STATUS]=gP[n._player?n._player.videoElementStatus:\"uninit\"],p&&void 0!==c.totalInterFrameDelay&&void 0!==c.totalSquaredInterFrameDelay&&void 0!==p.totalInterFrameDelay&&void 0!==p.totalSquaredInterFrameDelay){const e=c.totalInterFrameDelay-p.totalInterFrameDelay,t=c.totalSquaredInterFrameDelay-p.totalSquaredInterFrameDelay,i=c.framesDecodeCount-p.framesDecodeCount,n=e/i*1e3,r=Math.round(1e3*Math.sqrt((t-Math.pow(e,2)/i)/i));!isNaN(r)&&n+r>Math.max(3*n,n+150)&&(d[Wx.I_FRAME_DELAY]=r)}return d}(o._videoSSRC,e,t,o.videoTrack,!0===n,this.needUploadRenderFreezeTime,i):void 0;r&&(a.video=r)}if(s.has(Yb.AUDIO)&&o.audioTrack){const n=o.audioTrack?function(e,t,i,n,r){const o=t.audioRecv.find((t=>t.ssrc===e));if(!o)return;const s={},a=i&&i.audioRecv.find((t=>t.ssrc===e)),{receivedFrames:c,droppedFrames:d}=o;var l,u;if(Zx(s,qx.JITTER,o.jitterMs),null!=c&&null!=d&&(s[qx.FREEZE]=(u=d,0===(l=c)||100*u/l>20?1:0)),a){const e=t.timestamp-i.timestamp||(r?Xx:Xx*Qx);null!=o.packets&&null!=a.packets&&Zx(s,qx.PACKAGE_RATE,1e3*(o.packets-a.packets)/e),null!=a.bytes&&null!=o.bytes&&Zx(s,qx.BITRATE,8*(o.bytes-a.bytes)/e),null!=o.packetsLost&&null!=a.packetsLost&&Zx(s,qx.PACKAGE_LOST,o.packetsLost-a.packetsLost)}if(r)return s;const h=100*n._source.getAccurateVolumeLevel(),p=o.outputLevel;if(null!=p){const e=Math.ceil(50*Math.log10(100*p+1));Zx(s,zx.LEVEL,e)}if(Zx(s,qx.PCM_LEVEL,h),n&&(s[qx.DISABLED]=n._originMediaStreamTrack.enabled&&n._mediaStreamTrack.enabled?0:1),Zx(s,qx.JITTER_BUFFER,o.jitterBufferMs),Zx(s,qx.CURRENT_DELAY,o.jitterBufferMs),s[qx.PLAYER_STATUS]=gP[eL.getPlayerState(n.getTrackId())],a){const e=o.concealedSamples-a.concealedSamples;e>0&&Zx(s,qx.CONCEALED_SAMPLES,e)}return s}(o._audioSSRC,e,t,o.audioTrack,i):void 0;n&&(a.audio=n)}(a.video||a.audio)&&r.push(a)})),this.needUploadRenderFreezeTime=!this.needUploadRenderFreezeTime,r}startUploadTransportStats(){this.uploadTransportStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats()}stopUploadTransportStats(){this.uploadTransportStarted=!1}startUploadOutboundStats(){this.uploadOutboundStarted||(this.uploadOutboundStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats(),this.uploadOutboundDenoiserStatsTimer&&window.clearInterval(this.uploadOutboundDenoiserStatsTimer),this.uploadOutboundDenoiserStatsTimer=window.setInterval((()=>{if(!this.requestAllTracks||!this.requestUpload)return;const e=(this.requestAllTracks()||[]).find((e=>e instanceof ik));if(e&&e._external.getDenoiserStats){const t=e._external.getDenoiserStats();t&&this.requestUpload(Eb.DENOISER_STATS,t)}}),2e3),this.uploadExtStatsTimer&&window.clearInterval(this.uploadExtStatsTimer),this.uploadExtStatsTimer=window.setInterval((()=>{if(!this.requestAllTracks||!this.requestUpload)return;this.requestAllTracks().forEach((e=>{e.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}))}),2e3))}stopUploadOutboundStats(){this.uploadOutboundStarted&&(this.uploadOutboundStarted=!1,this.lastSendStats&&(this.lastSendStats.videoSend=[],this.lastSendStats.audioSend=[],this.lastSendStats=void 0),this.uploadOutboundDenoiserStatsTimer&&window.clearInterval(this.uploadOutboundDenoiserStatsTimer),this.uploadOutboundDenoiserStatsTimer=void 0)}startUploadInboundStats(){this.uploadInboundStarted||(this.uploadInboundStarted=!0,this.uploadWRTCStatsTimer||this.startUploadWRTCStats(),this.uploadInboundExtStatsTimer&&window.clearInterval(this.uploadInboundExtStatsTimer),this.uploadInboundExtStatsTimer=window.setInterval((()=>{if(!this.requestUpload||!this.requestRemoteMedia)return;(this.requestRemoteMedia()||[]).forEach((e=>{let[t,i]=e;if(i.has(Yb.VIDEO)&&t.videoTrack){t.videoTrack.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}if(i.has(Yb.AUDIO)&&t.audioTrack){t.audioTrack.getProcessorStats().forEach((e=>{this.requestUpload&&this.requestUpload(e.type,e.stats)}))}}))}),2e3))}stopUploadInboundStats(){this.uploadInboundStarted&&(this.uploadInboundStarted=!1,this.lastRecvStats&&(this.lastRecvStats.videoRecv=[],this.lastRecvStats.audioRecv=[],this.lastRecvStats=void 0))}startUploadExtensionUsageStats(){if(this.uploadExtensionUsageStarted)return;this.uploadExtensionUsageStarted=!0,this.uploadExtUsageStatsTimer&&window.clearInterval(this.uploadExtUsageStatsTimer);const e=new Map;this.uploadExtUsageStatsTimer=window.setInterval((async()=>{const t=Date.now(),i={connectionInterval:Dy(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3,details:[],lts:t};let n=[];const r=this.requestAllTracks&&this.requestAllTracks()||[];for(const e of r)!e.muted&&e.enabled&&(n=n.concat(await e.getProcessorUsage()));const o=this.requestRemoteMedia&&this.requestRemoteMedia()||[];for(const[e,t]of o)t.has(Yb.VIDEO)&&e.videoTrack&&(n=n.concat(await e.videoTrack.getProcessorUsage())),t.has(Yb.AUDIO)&&e.audioTrack&&(n=n.concat(await e.audioTrack.getProcessorUsage()));if(0===n.length)return;i.details=function(e,t){const i={};for(const{id:s,value:a,level:c,direction:d}of e){var n;const e=null!==(n=t.get(s))&&void 0!==n?n:0,l=2===a?e+Dy(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3:e;var r,o;t.set(s,l),i[s]?(2===a&&(i[s].value=a),c>i[s].level&&(i[s].level=c),\"remote\"===d&&(i[s].remoteUidCount+=1),i[s].totalTs=null!==(r=t.get(s))&&void 0!==r?r:0):i[s]={value:a,level:c,remoteUidCount:\"local\"===d?0:1,totalTs:null!==(o=t.get(s))&&void 0!==o?o:0}}return Object.keys(i).map((e=>{const{level:t,value:n,totalTs:r}=i[e];return{id:e,level:t,value:n,totalTs:r}}))}(n,e);const s=Date.now(),a=s>t?s:t+1;this.requestUpload&&this.requestUpload(Eb.EXTENSION_USAGE_STATS,{usageStats:i,sendTs:a})}),Dy(\"EXTENSION_USAGE_UPLOAD_INTERVAL\"))}stopUploadExtensionUsageStats(){this.uploadExtensionUsageStarted&&(this.uploadExtensionUsageStarted=!1,this.uploadExtUsageStatsTimer&&window.clearInterval(this.uploadExtUsageStatsTimer),this.uploadExtUsageStatsTimer=void 0)}}class iV{get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&!this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio||this._audio_pre_subscribed)return this._audioTrack}get videoTrack(){if(this.hasVideo||this._video_pre_subscribed)return this._videoTrack}get dataChannels(){return this._dataChannels}constructor(e,t){og(this,\"uid\",void 0),og(this,\"_uintid\",void 0),og(this,\"_trust_in_room_\",!0),og(this,\"_trust_audio_enabled_state_\",!0),og(this,\"_trust_video_enabled_state_\",!0),og(this,\"_trust_audio_mute_state_\",!0),og(this,\"_trust_video_mute_state_\",!0),og(this,\"_audio_muted_\",!1),og(this,\"_video_muted_\",!1),og(this,\"_audio_enabled_\",!0),og(this,\"_video_enabled_\",!0),og(this,\"_audio_added_\",!1),og(this,\"_video_added_\",!1),og(this,\"_is_pre_created\",!1),og(this,\"_video_pre_subscribed\",!1),og(this,\"_audio_pre_subscribed\",!1),og(this,\"_trust_video_stream_added_state_\",!0),og(this,\"_trust_audio_stream_added_state_\",!0),og(this,\"_audioTrack\",void 0),og(this,\"_videoTrack\",void 0),og(this,\"_dataChannels\",[]),og(this,\"_audioSSRC\",void 0),og(this,\"_videoSSRC\",void 0),og(this,\"_audioOrtc\",void 0),og(this,\"_videoOrtc\",void 0),og(this,\"_cname\",void 0),og(this,\"_rtxSsrcId\",void 0),og(this,\"_videoMid\",void 0),og(this,\"_audioMid\",void 0),this.uid=e,this._uintid=t}}let nV=function(e){return e.SEND_ONLY=\"SEND_ONLY\",e.RECEIVE_ONLY=\"RECEIVE_ONLY\",e}({});function rV(e,t){var i;let n;switch(t){case Jb.LocalAudioTrack:n=Mb.Audio;break;case Jb.LocalVideoTrack:n=Dn(i=e._hints).call(i,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:n=Mb.Low}return n}function oV(e){const t=MD();if(e.some((e=>e._bypassWebAudio)))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");if(!t.webAudioMediaStreamDest)throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks because your browser does not support audio mixing\")}function sV(e,t){oV(e);const i=t||new rk;return e.forEach((e=>i.addAudioTrack(e))),i}var aV,cV,dV,lV,uV,hV,pV,_V,EV,mV,fV,TV;function SV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function gV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?SV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):SV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let RV=(aV=CV(nV.SEND_ONLY),cV=CV(nV.SEND_ONLY),dV=CV(),lV=CV(nV.RECEIVE_ONLY),uV=CV(nV.RECEIVE_ONLY),hV=CV(nV.RECEIVE_ONLY),pV=CV(nV.RECEIVE_ONLY),_V=CV(nV.RECEIVE_ONLY),EV=CV(nV.RECEIVE_ONLY),mV=CV(),fV=CV(nV.RECEIVE_ONLY),TV=class extends Sv{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(Qb.StateChange,t,this._state)}constructor(e,t){super(),og(this,\"isPlanB\",!1),og(this,\"store\",void 0),og(this,\"statsUploader\",void 0),og(this,\"sendConnection\",void 0),og(this,\"recvConnection\",void 0),og(this,\"localTrackMap\",new Map),og(this,\"remoteUserMap\",new Map),og(this,\"localDataChannels\",[]),og(this,\"pendingLocalTracks\",[]),og(this,\"pendingRemoteTracks\",[]),og(this,\"statsCollector\",void 0),og(this,\"dtlsFailedCount\",0),og(this,\"sendMutex\",new hy(\"P2PChannel2-send-mutex\")),og(this,\"recvMutex\",new hy(\"P2PChannel2-recv-mutex\")),og(this,\"_state\",Xb.Disconnected),og(this,\"_restartStates\",[\"disconnected\",\"failed\"]),og(this,\"reconnectInterval\",void 0),og(this,\"uploadUnplinkStarted\",!1),og(this,\"uploadDownlinkStarted\",!1),og(this,\"uplinkStateUploadInterval\",void 0),og(this,\"downlinkStatsUploadInterval\",void 0),og(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleMuteLocalTrack\");try{if(!this.sendConnection||this.state!==Xb.Connected)return void i(new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before sendConnection established.\"));const s=this.filterTobeMutedTracks(e);if(0===s.length)return void t();const a=s.find((e=>\"videoLowTrack\"===e[0]));if(a){a[1].track._originMediaStreamTrack.stop()}await this.sendConnection.muteLocal(s.map((e=>{let[,{id:t}]=e;return t})));let c=!1;var r,o;if(\"video\"===e.trackMediaType)c=!(null===(r=this.localTrackMap.get(Jb.LocalAudioTrack))||void 0===r||!r.track._muted);else c=void 0===(null===(o=this.localTrackMap.get(Jb.LocalVideoTrack))||void 0===o?void 0:o.id);const d=this.createMuteMessage(s);await Mv(this,Qb.RequestMuteLocal,d);const l=\"video\"===e.trackMediaType?cw.MUTE_LOCAL_VIDEO:cw.MUTE_LOCAL_AUDIO;await Mv(this,Qb.RequestP2PMuteLocal,{action:l,message:d,isMuteAll:c}),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleUnmuteLocalTrack\");try{if(!this.sendConnection||this.state!==Xb.Connected)return void i(new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel2.handleUnmuteLocalTrack before sendConnection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();await this.sendConnection.unmuteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createUnmuteMessage(r),s=\"video\"===e.trackMediaType?cw.UNMUTE_LOCAL_VIDEO:cw.UNMUTE_LOCAL_AUDIO;await Mv(this,Qb.RequestP2PMuteLocal,{action:s,message:o}),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(Jb.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==Xb.Connected)return void t();const{id:r,track:o}=i;r&&(await this.sendConnection.updateSendParameters(r,o),await this.sendConnection.updateEncoderConfig(r,o),this.emit(Qb.UpdateVideoEncoder,o)),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUpdateVideoSendParameters\",(async(e,t,i)=>{const n=await this.sendMutex.lock(\"Locking from P2PChannel2.handleUpdateVideoSendParameters\");try{const i=this.localTrackMap.get(Jb.LocalVideoTrack);if(!this.sendConnection||!i||i.track!==e||this.state!==Xb.Connected)return void t();const{id:r,track:o}=i;r&&await this.sendConnection.updateSendParameters(r,o),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.sendMutex.lock(\"From P2PChannel2.handleReplaceTrack\"));try{var o;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.sendConnection||!i||void 0===i[1].id||this.state!==Xb.Connected)return void t();if(await(null===(o=this.sendConnection)||void 0===o?void 0:o.replaceTrack(e,i[1].id)),i[0]===Jb.LocalVideoTrack&&MD().supportDualStreamEncoding){const t=this.localTrackMap.get(Jb.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var s;null===(s=r)||void 0===s||s()}})),og(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),og(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),og(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),og(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new tV(e),this.bindStatsUploaderEvents(),this.reconnectInterval=window.setInterval((()=>{[this.sendConnection,this.recvConnection].forEach((e=>{e&&(\"disconnected\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||this.handleDisconnect(e.direction))}))}),Dy(\"ICE_RESTART_INTERVAL\"))}async startP2PConnection(e,t){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support startP2PConnection.\")}async connect(e){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support connect.\")}async startP2P(e,t){let i;try{if(t){this.recvConnection&&(Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset recvConnection.\")),this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection)),i=await this.recvMutex.lock(\"From P2PChannel.startP2P\"),this.recvConnection=new xx(e,this.store,fb.RECEIVE_ONLY),this.bindConnectionEvents(this.recvConnection);const n=await this.recvConnection.establish(t);return{iceParameters:n.iceParameters,dtlsParameters:n.dtlsParameters,sdp:n.sdp}}{this.state=Xb.New,this.sendConnection&&(Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2P reset sendConnection.\")),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection)),i=await this.sendMutex.lock(\"From P2PChannel.startP2P\"),this.sendConnection=new xx(e,this.store),this.store.peerConnectionStart(),this.bindConnectionEvents(this.sendConnection);const t=await this.sendConnection.establish();return{iceParameters:t.iceParameters,dtlsParameters:t.dtlsParameters,sdp:t.sdp}}}finally{i&&i()}}async p2pConnect(e){if(!this.sendConnection)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot P2PChannel2.p2pConnect before P2PChannel2.startP2PConnection .\");this.store.peerConnectionStart(),await this.sendConnection.connect(e),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=Xb.Connected}async addRemoteCandidate(e,t){if(t===fb.RECEIVE_ONLY){if(!this.sendConnection)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.addRemoteCandidate .\");await this.sendConnection.addRemoteCandidate(e)}else{if(!this.recvConnection)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot P2PChannel2.connect before P2PChannel2.addRemoteCandidate .\");await this.recvConnection.addRemoteCandidate(e)}}publish(e,t,i){var n=this;return ZU((function*(){const r=yield WU(n.sendMutex.lock(\"From P2PChannel.publish\"));try{if(!n.sendConnection||n.state!==Xb.Connected){n.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===n.pendingLocalTracks.indexOf(e)));return void(n.pendingLocalTracks=n.pendingLocalTracks.concat(t))}n.store.pubId=n.store.pubId+1,jU.markPublishStart(n.store.clientId,n.store.pubId);const o=n.filterTobePublishedTracks(e,t,i);if(0===o.length)return void(yield WU(n.tryToUnmuteAudio(e)));o.forEach((e=>{let{track:t,type:i}=e;const r=Date.now();n.store.publish(t.getTrackId(),i===Jb.LocalAudioTrack?\"audio\":\"video\",r)})),n.bindLocalTrackEvents(o);const s=yield WU(n.sendConnection.send(o.map((e=>{let{track:t}=e;return t})),n.store.codec,n.store.audioCodec)),a=(yield WU(s.next())).value,c=n.createGatewayPublishMessage(o,a);try{yield c}catch(e){throw s.throw(e),(null==e?void 0:e.code)===nv.WS_ABORT&&o.forEach((e=>{let{track:t}=e;-1===n.pendingLocalTracks.indexOf(t)&&n.pendingLocalTracks.push(t)})),n.unbindLocalTrackEvents(o),e}yield WU(s.next()),o.forEach((e=>{let{type:t}=e;n.statsCollector.addLocalStats(t)})),n.statsUploader.startUploadOutboundStats(),n.assignLocalTracks(o,a),o.forEach((e=>{let{track:t,type:i}=e;const r=Date.now();n.store.publish(t.getTrackId(),i===Jb.LocalAudioTrack?\"audio\":\"video\",void 0,r)})),n.startUploadUplinkState()}finally{r()}}))()}async unpublish(e){if(!this.sendConnection||this.state!==Xb.Connected)return void(0===e.length?this.pendingLocalTracks.length=0:this.pendingLocalTracks=this.pendingLocalTracks.filter((t=>!Dn(e).call(e,t))));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find((e=>\"videoLowTrack\"===e[0]));if(i){i[1].track.close()}const n=this.createGatewayUnpublishMessage(t);if(await this.sendConnection.stopSending(t.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&(this.statsUploader.stopUploadOutboundStats(),this.stopUploadUplinkState()),this.sendConnection&&this.state===Xb.Connected){if(i){i[1].track.close()}return n}e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}))}startUploadUplinkState(){if(this.uploadUnplinkStarted)return;this.uploadUnplinkStarted=!0,this.uplinkStateUploadInterval&&window.clearInterval(this.uplinkStateUploadInterval);const e=()=>{const e=[],t=[];Array.from(this.localTrackMap.entries()).forEach((i=>{let[n,{track:r,ssrcs:o}]=i;const s={stream_type:rV(r,n),ssrcs:o};r._muted||!r._enabled?e.push(s):t.push(s)})),e.length>0&&e.forEach((e=>{Mv(this,Qb.RequestMuteLocal,[e])})),t.length>0&&t.forEach((e=>{Mv(this,Qb.RequestUnmuteLocal,[e])}))};e(),this.uplinkStateUploadInterval=window.setInterval((()=>{e()}),3e3)}stopUploadUplinkState(){this.uploadUnplinkStarted&&(this.uploadUnplinkStarted=!1,this.uplinkStateUploadInterval&&window.clearInterval(this.uplinkStateUploadInterval))}publishLowStream(e){return ZU((function*(){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support publishLowStream.\")}))()}async republish(){this.pendingLocalTracks.length>0&&(Qy.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await kv(this,Qb.RequestRePublish,this.pendingLocalTracks),this.emit(Qb.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[])}async unpublishLowStream(){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support unpublishLowStream.\")}async subscribe(e,t,i,n){var r;if(!this.recvConnection)throw new rv(nv.INVALID_OPERATION,\"Cannot subscribe remote user when recvConnection disconnected.\");if(null!==(r=this.remoteUserMap.get(e))&&void 0!==r&&r.has(t))return;const{track:o,mid:s,transceiver:a}=await this.recvConnection.receive(t,[{ssrcId:i}],String(e.uid),n);t===Yb.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(o):(e._audioTrack=new aM(o,e.uid,e._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),a&&e._audioTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoSSRC=i,e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(o):(e._videoTrack=new sM(o,e.uid,e._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),a&&e._videoTrack._updateRtpTransceiver(a),this.bindRemoteTrackEvents(e,e._videoTrack));const c=this.remoteUserMap.get(e);c?c.set(t,s):this.remoteUserMap.set(e,new Map([[t,s]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadInboundStats(),this.startUploadDownlinkState();const d=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(Qb.MediaReconnectEnd,e.uid))}async mockSubscribe(e,t,i,n){if(!this.recvConnection)throw new rv(nv.INVALID_OPERATION,\"Cannot subscribe remote user when recvConnection disconnected.\");await this.recvConnection.mockReceive(t,[{ssrcId:i}],String(e.uid),n)}async unsubscribe(e,t,i){const n=this.pendingRemoteTracks.filter((i=>{let{user:n,kind:r}=i;return void 0!==t?n.uid===e.uid&&t===r:n.uid===e.uid}));if(n.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.recvConnection||i||n.forEach((t=>{let{kind:i}=t;var n;if(i===Yb.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===Yb.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.recvConnection)return;const r=this.filterTobeUnSubscribedTracks(e,t);0!==r.length&&(await this.recvConnection.stopReceiving(r.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&(this.statsUploader.stopUploadInboundStats(),this.stopUploadDownlinkState()),r.forEach((e=>{let[t,{kind:n}]=e;var r,o;n===Yb.VIDEO&&t._videoSSRC&&(null===(r=this.recvConnection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(n===Yb.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(n===Yb.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}})),r.forEach((e=>{let[,{kind:t}]=e;Mv(this,Qb.RequestP2PMuteRemote,t)})))}startUploadDownlinkState(){if(this.uploadDownlinkStarted)return;this.uploadDownlinkStarted=!0,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval);const e=()=>Array.from(this.remoteUserMap.entries()).forEach((e=>{let[,t]=e;[Yb.VIDEO,Yb.AUDIO].forEach((e=>{t.has(e)?Mv(this,Qb.RequestP2PUnmuteRemote,e):Mv(this,Qb.RequestP2PMuteRemote,e)}))}));e(),this.downlinkStatsUploadInterval=window.setInterval((()=>{e()}),3e3)}stopUploadDownlinkState(){this.uploadDownlinkStarted&&(this.uploadDownlinkStarted=!1,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval))}getAllDataChannels(){return this.localDataChannels}async massSubscribe(e){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support massSubscribe.\")}async massSubscribeNoLock(e){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support massSubscribeNoLock.\")}async massUnsubscribe(e){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribe.\")}async massUnsubscribeNoLock(e){throw new rv(nv.NOT_SUPPORTED,\"p2p mode does not support massUnsubscribeNoLock.\")}async muteRemote(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===Yb.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.recvConnection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.recvConnection)return;const i=this.remoteUserMap.get(e);if(!i)return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel2.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(Jb.LocalAudioTrack);if((null==t?void 0:t.track)instanceof rk){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==Jb.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===Jb.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===Jb.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(Jb.LocalAudioTrack),o=n?this.localTrackMap.get(Jb.LocalVideoLowTrack):this.localTrackMap.get(Jb.LocalVideoTrack);sA.publish(this.store.sessionId,{eventElapse:jU.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf(eP.SCREEN_TRACK)),audio:!!i,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var o;i||(i=[]);const s=i.find((e=>e instanceof tk)),a=n?null===(o=this.localTrackMap.get(Jb.LocalVideoTrack))||void 0===o?void 0:o.track:i.find((e=>e instanceof Hk));sA.publish(this.store.sessionId,{eventElapse:jU.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(eP.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===Yb.VIDEO?i._videoSSRC:i._audioSSRC;r&&sA.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===Yb.VIDEO,audio:n===Yb.AUDIO,peerid:i.uid,subscribeRequestid:n===Yb.VIDEO?i._videoSSRC:i._audioSSRC,p2pid:this.store.p2pId,eventElapse:jU.measureFromSubscribeStart(this.store.clientId,r)})}reset(){Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.reset\")),this.sendMutex=new hy(\"P2PChannel2-send-mutex\"),this.sendMutex=new hy(\"P2PChannel2-recv-mutex\"),this.sendConnection&&(this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0),this.recvConnection&&(this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.stopUploadUplinkState(),this.stopUploadDownlinkState(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(Jb.LocalAudioTrack);if((null==e?void 0:e.track)instanceof rk){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.reconnectInterval&&(window.clearInterval(this.reconnectInterval),this.reconnectInterval=void 0),this.state=Xb.Disconnected}getStats(e){var t,i;return e?null===(i=this.recvConnection)||void 0===i?void 0:i.getStats():null===(t=this.sendConnection)||void 0===t?void 0:t.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.recvConnection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(Jb.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(Jb.LocalVideoTrack);if(e)return{width:e.track.videoWidth||0,height:e.track.videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof Hk||t&&t.track instanceof tk?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(Jb.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=aE(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.sendConnection&&this.recvConnection&&(Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2.disconnectForReconnect closing P2PConnection\")),this.state=Xb.Reconnecting,Dy(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.sendConnection.close(),this.unbindConnectionEvents(this.sendConnection),this.sendConnection=void 0,this.recvConnection.close(),this.unbindConnectionEvents(this.recvConnection),this.recvConnection=void 0,0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case Jb.LocalVideoTrack:Dn(t=n._hints).call(t,eP.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case Jb.LocalAudioTrack:n instanceof rk?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case Jb.LocalVideoLowTrack:}})),this.emit(Qb.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(Qb.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),this.stopUploadUplinkState(),this.stopUploadDownlinkState(),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel2 disconnected, waiting to reconnect.\")))}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof iV?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}async restartICE(e,t){let i,n;if(e===fb.SEND_ONLY){if(!this.sendConnection)throw new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before sendConnection established.\");i=await this.sendMutex.lock(\"From P2PChannel.restartICE\"),n=this.sendConnection}else{if(!this.recvConnection)throw new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel2.handleMuteLocalTrack before recvConnection established.\");i=await this.recvMutex.lock(\"From P2PChannel.restartICE\"),n=this.recvConnection}try{if(t){const e=await n.restartICE(t);return n.isInRestartIce=!1,e}{const e=await n.restartICE();if(e){const t=await kv(this,Qb.RequestP2PRestartICE,{direction:fb.RECEIVE_ONLY,iceParameter:e});await n.restartICE(t),n.isInRestartIce=!1}}}finally{i()}}getUplinkNetworkQuality(){if(!this.sendConnection)return 0;const e=this.sendConnection.getStats(),t=this.localTrackMap.get(Jb.LocalVideoTrack),i=this.localTrackMap.get(Jb.LocalAudioTrack),n=e.videoSend.find((e=>{var i;return e.ssrc===(null==t||null===(i=t.ssrcs)||void 0===i?void 0:i[0].ssrcId)})),r=e.audioSend.find((e=>{var t;return e.ssrc===(null==i||null===(t=i.ssrcs)||void 0===t?void 0:t[0].ssrcId)}));if(!n||!r)return 1;const o=Uv(this,Qb.NeedSignalRTT),s=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,u=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,h=null==t?void 0:t.track;if(h&&h._encoderConfig&&-1===h._hints.indexOf(eP.SCREEN_TRACK)){const t=h._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return dA[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][u]}}return u}getDownlinkNetworkQuality(){if(!this.recvConnection)return 0;const e=this.recvConnection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,o=n._videoSSRC,s=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===o));if(!s&&!a)return void(t+=1);const c=Uv(this,Qb.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,u=s?s.jitterMs:void 0,h=e.recvPacketLossRate;let p=.7*h*100/50+.3*l/1500;u&&(p=.6*h*100/50+.2*l/1500+.2*u/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new Gh(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}filterTobePublishedTracks(e,t,i){const n=[],r=MD(),o=this.getAllTracks();e=Bv(e=e.filter((e=>-1===o.indexOf(e))));let s=!1,a=!1;for(const o of e){if(o instanceof Hk&&(this.localTrackMap.has(Jb.LocalVideoTrack)||s?new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:o,type:Jb.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(o,i);n.push({track:e,type:Jb.LocalVideoLowTrack})}if(o instanceof tk){const e=this.localTrackMap.get(Jb.LocalAudioTrack);if(e){if(!(e.track instanceof rk))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o),this.bindLocalAudioTrackEvents(o,!0)}else if(a){const e=n.find((e=>{let{type:t}=e;return t===Jb.LocalAudioTrack}));if(!(e.track instanceof rk))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o)}else{if(!r.webAudioMediaStreamDest||o instanceof rk||o._bypassWebAudio)n.push({track:o,type:Jb.LocalAudioTrack});else{const e=new rk;e.addAudioTrack(o),n.push({track:e,type:Jb.LocalAudioTrack})}a=!0}}}return n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=Bv(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof tk){const e=this.localTrackMap.get(Jb.LocalAudioTrack);if(!e)continue;e.track instanceof rk?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([Jb.LocalAudioTrack,e]),e.track.close())):t.push([Jb.LocalAudioTrack,e])}if(i instanceof Hk){const e=this.localTrackMap.get(Jb.LocalVideoTrack);if(!e)continue;t.push([Jb.LocalVideoTrack,e]);const i=this.localTrackMap.get(Jb.LocalVideoLowTrack);i&&t.push([Jb.LocalVideoLowTrack,i])}}return t}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case Jb.LocalVideoTrack:t.addListener($D.GET_STATS,this.handleGetLocalVideoStats),t.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener($D.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener($D.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.addListener($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case Jb.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case Jb.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof rk?e.trackList.forEach((e=>{e.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener($D.GET_STATS,this.handleGetLocalAudioStats),e.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener($D.GET_STATS,this.handleGetLocalAudioStats),e.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener($D.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case Jb.LocalVideoTrack:t.off($D.GET_STATS,this.handleGetLocalVideoStats),t.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off($D.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off($D.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.off($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case Jb.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case Jb.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof rk?e.trackList.forEach((e=>{e.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off($D.GET_STATS,this.handleGetLocalAudioStats),e.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off($D.GET_STATS,this.handleGetLocalAudioStats),e.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof sM&&t.addListener($D.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof aM&&t.addListener($D.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners($D.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(Yb.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(Yb.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e,t){return e.map(((e,i)=>{var n;let r,{track:o,type:s}=e;switch(s){case Jb.LocalAudioTrack:r=Mb.Audio;break;case Jb.LocalVideoTrack:r=Dn(n=o._hints).call(n,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:r=Mb.Low}return{kind:s===Jb.LocalAudioTrack?Yb.AUDIO:Yb.VIDEO,stream_type:r,mid:t[i].id,ssrcs:t[i].localSSRC,isMuted:o.muted||!o.enabled}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}assignLocalTracks(e,t){e.forEach(((e,i)=>{let{track:n,type:r}=e;this.localTrackMap.set(r,{track:n,id:t[i].id,ssrcs:t[i].localSSRC})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{var i;Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: \").concat(e.name,\".onConnectionStateChange(\").concat(t,\")\")),this.emit(Qb.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"connected\"===t&&(e.isInRestartIce=!1),Dn(i=this._restartStates).call(i,t)&&!e.isInRestartIce&&(\"disconnected\"===t&&await $v(800),\"disconnected\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||this.handleDisconnect(e.direction))},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),sA.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:Iv.TRACER}).onSuccess(),this.emit(Qb.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(sP.FIRST_FRAME_DECODED),sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_AUDIO_DECODE,iA.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_AUDIO_RECEIVED,iA.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_VIDEO_RECEIVED,iA.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(Qb.ConnectionTypeChange,i),Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(Bw(t)),\" -> \").concat(JSON.stringify(Bw(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(Bw(t)),\" -> \").concat(JSON.stringify(Bw(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)},e.onLocalCandidate=t=>{this.emit(Qb.LocalCandidate,{candidate:t,direction:e.direction})}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0,e.onLocalCandidate=void 0}async handleDisconnect(e){const t=e===fb.SEND_ONLY?this.sendConnection:this.recvConnection;t&&!t.isInRestartIce&&(t.isInRestartIce=!0,Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel-\").concat(t.name,\"] start use restartICE\")),e===fb.SEND_ONLY?this.restartICE(e):kv(this,Qb.RequestP2PRestartICE,{direction:fb.SEND_ONLY}))}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(Jb.LocalAudioTrack);if(e instanceof tk&&(null==i?void 0:i.track)instanceof rk)return i.track.isActive||t.push([Jb.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===Jb.LocalVideoTrack)){const e=this.localTrackMap.get(Jb.LocalVideoLowTrack);e&&t.push([Jb.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(Jb.LocalAudioTrack);if(e instanceof tk&&(null==i?void 0:i.track)instanceof rk)return i.track.isActive&&t.push([Jb.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===Jb.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(Jb.LocalVideoLowTrack);e&&t.push([Jb.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case Yb.VIDEO:return void(i._videoSSRC&&t.push({stream_type:Yb.VIDEO,ssrcId:i._videoSSRC}));case Yb.AUDIO:return void(i._audioSSRC&&t.push({stream_type:Yb.AUDIO,ssrcId:i._audioSSRC}))}})),t}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(Jb.LocalVideoTrack),i=this.localTrackMap.get(Jb.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.sendConnection&&this.recvConnection){const e=this.sendConnection.peerConnectionState,t=this.recvConnection.peerConnectionState;return\"connected\"!==e&&\"connected\"!==t}return!0}async tryToUnmuteAudio(e){for(let t=0;t<e.length;t++)if(e[t]instanceof tk){const i=this.filterTobeUnmutedTracks(e[t]);if(0===i.length)continue;const n=this.createUnmuteMessage(i);return void await Mv(this,Qb.RequestUnmuteLocal,n)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=e=>this.getStats(e),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()).filter((e=>{let[,{ssrcs:t}]=e;return!!t})),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.recvConnection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(Qb.RequestUpload,e,t),this.statsUploader.requestUploadStats=e=>this.emit(Qb.RequestUploadStats,e),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await $v(Ey(this.dtlsFailedCount,_y)),this.emit(Qb.RequestReconnect)}async reconnectP2P(){}canPublishLowStream(){return this.localTrackMap.has(Jb.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof Hk))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof Hk)).length>1)throw new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof tk)).length>1&&(e.some((e=>e instanceof tk&&e._bypassWebAudio))||!MD().webAudioMediaStreamDest))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof Hk&&this.pendingLocalTracks.some((e=>e instanceof Hk)))throw new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof tk&&this.pendingLocalTracks.some((e=>e instanceof tk))&&(!MD().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof tk&&e._bypassWebAudio))))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding,n=gV(gV({},{width:160,height:120,framerate:15,bitrate:50}),t);let r;r=i?e._mediaStreamTrack.clone():Fx(e,n);const o=ey(8,\"track-low-\"),s=new Hk(r,gV(gV({},i&&{scaleResolutionDownBy:Fw(n,e)}),{},{frameRate:n.framerate,bitrateMax:n.bitrate,bitrateMin:n.bitrate}),void 0,void 0,o);return s.on(rP.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,tP.LOW_STREAM)})),s._hints.push(eP.LOW_STREAM),e.addListener($D.NEED_CLOSE,(()=>{s.close()})),s}async globalLock(){return this.recvMutex.lock(\"From P2PChannel2.globalLock\")}reportVideoFirstFrameDecoded(e,t,i,n){var r;const o=Array.from(d_(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(o){n||this.store.subscribe(o.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,s=r.subscribe.find((e=>e.userId===o.uid&&\"video\"===e.type));sA.firstRemoteVideoDecode(this.store.sessionId,tA.FIRST_VIDEO_DECODE,iA.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:i,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:n?1:0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.recvConnection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const o=await this.recvConnection.getRemoteSSRC(r);return void 0!==o&&o!==i}isPreSubScribe(e){return!1}async publishDataChannel(e){throw new rv(nv.NOT_SUPPORTED)}async unpublishDataChannel(e){throw new rv(nv.NOT_SUPPORTED)}async subscribeDataChannel(e,t){throw new rv(nv.NOT_SUPPORTED)}async unsubscribeDataChannel(e,t){throw new rv(nv.NOT_SUPPORTED)}hasPendingRemoteDataChannel(e,t){throw new rv(nv.NOT_SUPPORTED)}setPendingRemoteDataChannel(e,t){throw new rv(nv.NOT_SUPPORTED)}async preConnect(e){throw new rv(nv.NOT_SUPPORTED)}getEstablishParams(){throw new rv(nv.NOT_SUPPORTED)}async reSubscribe(e){throw new rv(nv.NOT_SUPPORTED)}async updateVideoStreamParameter(e,t){throw new rv(nv.NOT_SUPPORTED)}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===Jb.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,tP.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}},rb(TV.prototype,\"p2pConnect\",[aV],Object.getOwnPropertyDescriptor(TV.prototype,\"p2pConnect\"),TV.prototype),rb(TV.prototype,\"unpublish\",[cV],Object.getOwnPropertyDescriptor(TV.prototype,\"unpublish\"),TV.prototype),rb(TV.prototype,\"unpublishLowStream\",[dV],Object.getOwnPropertyDescriptor(TV.prototype,\"unpublishLowStream\"),TV.prototype),rb(TV.prototype,\"subscribe\",[lV],Object.getOwnPropertyDescriptor(TV.prototype,\"subscribe\"),TV.prototype),rb(TV.prototype,\"mockSubscribe\",[uV],Object.getOwnPropertyDescriptor(TV.prototype,\"mockSubscribe\"),TV.prototype),rb(TV.prototype,\"unsubscribe\",[hV],Object.getOwnPropertyDescriptor(TV.prototype,\"unsubscribe\"),TV.prototype),rb(TV.prototype,\"muteRemote\",[pV],Object.getOwnPropertyDescriptor(TV.prototype,\"muteRemote\"),TV.prototype),rb(TV.prototype,\"unmuteRemote\",[_V],Object.getOwnPropertyDescriptor(TV.prototype,\"unmuteRemote\"),TV.prototype),rb(TV.prototype,\"hasRemoteMediaWithLock\",[EV],Object.getOwnPropertyDescriptor(TV.prototype,\"hasRemoteMediaWithLock\"),TV.prototype),rb(TV.prototype,\"disconnectForReconnect\",[mV],Object.getOwnPropertyDescriptor(TV.prototype,\"disconnectForReconnect\"),TV.prototype),rb(TV.prototype,\"remoteMediaSsrcChanged\",[fV],Object.getOwnPropertyDescriptor(TV.prototype,\"remoteMediaSsrcChanged\"),TV.prototype),TV);function CV(e){return function(t,i,n){const r=t[i];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return n.value=async function(){for(var t=arguments.length,n=new Array(t),o=0;o<t;o++)n[o]=arguments[o];switch(e){case nV.SEND_ONLY:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}case nV.RECEIVE_ONLY:{const e=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e()}}default:{const e=await this.sendMutex.lock(\"From P2PChannel2.\".concat(i)),t=await this.recvMutex.lock(\"From P2PChannel2.\".concat(i));try{return await r.apply(this,n)}finally{e(),t()}}}},n}}function IV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function vV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?IV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):IV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class yV{constructor(e){og(this,\"store\",void 0),og(this,\"onStatsException\",void 0),og(this,\"onUploadPublishDuration\",void 0),og(this,\"onStatsChanged\",void 0),og(this,\"localStats\",new Map),og(this,\"remoteStats\",new Map),og(this,\"updateStatsInterval\",void 0),og(this,\"trafficStats\",void 0),og(this,\"trafficStatsPeerList\",[]),og(this,\"uplinkStats\",void 0),og(this,\"exceptionMonitor\",void 0),og(this,\"p2pChannel\",void 0),og(this,\"scalabilityMode\",ob.L1T1),og(this,\"updateStats\",(()=>{this.p2pChannel&&(this.updateRemoteStats(this.p2pChannel),this.updateLocalStats(this.p2pChannel))})),this.store=e,this.exceptionMonitor=new FU,this.exceptionMonitor.on(\"exception\",((e,t,i)=>{this.onStatsException&&this.onStatsException(e,t,i)}))}startUpdateStats(){this.updateStatsInterval||(this.updateStatsInterval=window.setInterval(this.updateStats,1e3))}stopUpdateStats(){this.updateStatsInterval&&(window.clearInterval(this.updateStatsInterval),this.updateStatsInterval=void 0)}reset(){this.localStats=new Map,this.remoteStats=new Map,this.trafficStats=void 0,this.trafficStatsPeerList=[],this.uplinkStats=void 0}getLocalAudioTrackStats(){return this.localStats.get(Jb.LocalAudioTrack)||vV({},dP)}getLocalVideoTrackStats(){return this.localStats.get(Jb.LocalVideoTrack)||vV({},lP)}getRemoteAudioTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppad+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.audioStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{audioStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRemoteNetworkQualityStats(e){const t={};if(e){var i;const n=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.networkStats;n&&(t[e]=n)}else Array.from(this.remoteStats.entries()).forEach((e=>{let[i,{networkStats:n}]=e;n&&(t[i]=n)}));return t}getRemoteVideoTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find((t=>t.peer_uid===e));return i&&(t.publishDuration=i.B_ppvd+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var n;const r=null===(n=this.remoteStats.get(e))||void 0===n?void 0:n.videoStats;r&&(i[e]=t(e,r))}else Array.from(this.remoteStats.entries()).forEach((e=>{let[n,{videoStats:r}]=e;r&&(i[n]=t(n,r))}));return i}getRTCStats(){let e=0,t=0,i=0,n=0;const r=this.localStats.get(Jb.LocalAudioTrack);r&&(e+=r.sendBytes,t+=r.sendBitrate);const o=this.localStats.get(Jb.LocalVideoTrack);o&&(e+=o.sendBytes,t+=o.sendBitrate);const s=this.localStats.get(Jb.LocalVideoLowTrack);s&&(e+=s.sendBytes,t+=s.sendBitrate),this.remoteStats.forEach((e=>{let{audioStats:t,videoStats:r}=e;t&&(i+=t.receiveBytes,n+=t.receiveBitrate),r&&(i+=r.receiveBytes,n+=r.receiveBitrate)}));let a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:t,SendBytes:e,RecvBytes:i,RecvBitrate:n,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1e3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}addLocalStats(e){this.localStats.set(e,void 0)}removeLocalStats(e){e?this.localStats.delete(e):this.localStats.clear()}addRemoteStats(e){this.remoteStats.set(e,{})}removeRemoteStats(e){e?this.remoteStats.delete(e):this.remoteStats.clear()}addP2PChannel(e){this.p2pChannel=e}updateTrafficStats(e){e.peer_delay=e.peer_delay.filter((e=>void 0!==e.B_ppad||void 0!==e.B_ppvd));e.peer_delay.filter((e=>-1===this.trafficStatsPeerList.indexOf(e.peer_uid))).forEach((e=>{var t;const i=null===(t=this.p2pChannel)||void 0===t?void 0:t.getRemoteMedia(e.peer_uid),n=null!=i&&i.videoSSRC?jU.measureFromSubscribeStart(this.store.clientId,i.videoSSRC):0,r=null!=i&&i.audioSSRC?jU.measureFromSubscribeStart(this.store.clientId,i.audioSSRC):0;void 0!==e.B_ppad&&void 0!==e.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(e.peer_uid,e.B_ppad,e.B_ppvd,n>r?n:r),this.trafficStatsPeerList.push(e.peer_uid))})),this.trafficStats=e}updateUplinkStats(e){this.uplinkStats&&this.uplinkStats.B_fir!==e.B_fir&&Qy.debug(\"[\".concat(this.store.clientId,\"]: Period fir changes to \").concat(e.B_fir)),this.uplinkStats=e}static isRemoteVideoFreeze(e,t,i){if(!e)return!1;const n=!!i&&t.framesDecodeFreezeTime>i.framesDecodeFreezeTime,r=!i||t.framesDecodeCount>i.framesDecodeCount;return n||!r}static isRemoteAudioFreeze(e){return!!e&&e._isFreeze()}isLocalVideoFreeze(e){return!(!e.inputFrame||!e.sentFrame)&&(e.inputFrame.frameRate>5&&e.sentFrame.frameRate<3)}updateLocalStats(e){Array.from(this.localStats.entries()).forEach((t=>{let[i,n]=t;switch(i){case Jb.LocalVideoTrack:case Jb.LocalVideoLowTrack:{const t=n,o=vV({},lP),s=e.getStats(),a=e.getLocalMedia(i);if(s){const i=s.videoSend.find((e=>e.ssrc===(null==a?void 0:a.ssrcs[0].ssrcId)));if(i){const n=e.getLocalVideoSize(),r=e.getEncoderConfig(Jb.LocalVideoTrack);\"H264\"!==i.codec&&\"H265\"!==i.codec&&\"VP8\"!==i.codec&&\"VP9\"!==i.codec&&\"AV1X\"!==i.codec&&\"AV1\"!==i.codec||(o.codecType=i.codec),o.sendBytes=i.bytes,o.sendBitrate=t?8*Math.max(0,o.sendBytes-t.sendBytes):0,i.inputFrame?(o.captureFrameRate=i.inputFrame.frameRate,o.captureResolutionHeight=i.inputFrame.height,o.captureResolutionWidth=i.inputFrame.width):n&&(o.captureResolutionWidth=n.width,o.captureResolutionHeight=n.height),i.sentFrame?(o.sendFrameRate=i.sentFrame.frameRate,o.sendResolutionHeight=i.sentFrame.height,o.sendResolutionWidth=i.sentFrame.width):n&&(o.sendResolutionWidth=n.width,o.sendResolutionHeight=n.height),i.avgEncodeMs&&(o.encodeDelay=i.avgEncodeMs),r&&r.bitrateMax&&(o.targetSendBitrate=1e3*r.bitrateMax),o.sendPackets=i.packets,o.sendPacketsLost=i.packetsLost,o.sendJitterMs=i.jitterMs,o.sendRttMs=i.rttMs,o.totalDuration=t?t.totalDuration+1:1,o.totalFreezeTime=t?t.totalFreezeTime:0,this.isLocalVideoFreeze(i)&&(o.totalFreezeTime+=1),i.scalabilityMode&&this.scalabilityMode!==i.scalabilityMode&&(Qy.debug(\"[\".concat(this.store.clientId,\"]: The scalabilityMode of the video sending stream is \").concat(i.scalabilityMode)),this.scalabilityMode=i.scalabilityMode)}this.trafficStats&&(o.currentPacketLossRate=(this.trafficStats.B_pvlr4||0)/100)}var r;if(this.localStats.set(i,o),(null==t?void 0:t.sendResolutionWidth)!==o.sendResolutionWidth||(null==t?void 0:t.sendResolutionHeight)!==o.sendResolutionHeight)null===(r=this.onStatsChanged)||void 0===r||r.call(this,\"resolution\",{width:o.sendResolutionWidth,height:o.sendResolutionHeight});o&&a&&this.exceptionMonitor.setLocalVideoStats(this.store.uid,a.track,o);break}case Jb.LocalAudioTrack:{const t=n,r=vV({},dP),o=e.getStats(),s=e.getLocalMedia(i);if(o){const i=o.audioSend.find((e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId)));if(i){if(\"opus\"!==i.codec&&\"aac\"!==i.codec&&\"PCMU\"!==i.codec&&\"PCMA\"!==i.codec&&\"G722\"!==i.codec||(r.codecType=i.codec),i.inputLevel)r.sendVolumeLevel=Math.round(32767*i.inputLevel);else{const t=e.getLocalAudioVolume();t&&(r.sendVolumeLevel=Math.round(32767*t))}r.sendBytes=i.bytes,r.sendPackets=i.packets,r.sendPacketsLost=i.packetsLost,r.sendJitterMs=i.jitterMs,r.sendRttMs=i.rttMs,r.sendBitrate=t?8*Math.max(0,r.sendBytes-t.sendBytes):0}}this.trafficStats&&(r.currentPacketLossRate=(this.trafficStats.B_palr4||0)/100),this.localStats.set(Jb.LocalAudioTrack,r),r&&s&&this.exceptionMonitor.setLocalAudioStats(this.store.uid,s.track,r);break}}}))}updateRemoteStats(e){Array.from(this.remoteStats.entries()).forEach((t=>{var i,n;let[r,{videoStats:o,audioStats:s,videoPcStats:a}]=t;const c=s,d=o,l=a,u=vV({},uP),h=vV({},pP),p=vV({},hP),{audioTrack:_,videoTrack:E,audioSSRC:m,videoSSRC:f}=e.getRemoteMedia(r);let T;T=e instanceof RV?e.getStats(!0):e.getStats();const S=null===(i=T)||void 0===i?void 0:i.audioRecv.find((e=>e.ssrc===m)),g=null===(n=T)||void 0===n?void 0:n.videoRecv.find((e=>e.ssrc===f)),R=this.trafficStats&&this.trafficStats.peer_delay.find((e=>e.peer_uid===r));if(S&&(\"opus\"!==S.codec&&\"aac\"!==S.codec&&\"PCMU\"!==S.codec&&\"PCMA\"!==S.codec&&\"G722\"!==S.codec||(u.codecType=S.codec),S.outputLevel?u.receiveLevel=Math.round(32767*S.outputLevel):_&&(u.receiveLevel=Math.round(32767*_.getVolumeLevel())),u.receiveBytes=S.bytes,u.receivePackets=S.packets,u.receivePacketsLost=S.packetsLost,u.receivePacketsDiscarded=S.packetsDiscarded,u.packetLossRate=u.receivePacketsLost/(u.receivePackets+u.receivePacketsLost),u.receiveBitrate=c?8*Math.max(0,u.receiveBytes-c.receiveBytes):0,u.totalDuration=c?c.totalDuration+1:1,u.totalFreezeTime=c?c.totalFreezeTime:0,u.freezeRate=u.totalFreezeTime/u.totalDuration,u.receiveDelay=S.jitterBufferMs,u.totalDuration>10&&yV.isRemoteAudioFreeze(_)&&(u.totalFreezeTime+=1)),g){\"H264\"!==g.codec&&\"H265\"!==g.codec&&\"VP8\"!==g.codec&&\"VP9\"!==g.codec&&\"AV1X\"!==g.codec&&\"AV1\"!==g.codec||(h.codecType=g.codec),h.receiveBytes=g.bytes,h.receiveBitrate=d?8*Math.max(0,h.receiveBytes-d.receiveBytes):0,h.decodeFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,h.renderFrameRate=g.decodeFrameRate<0?0:g.decodeFrameRate,g.outputFrame&&(h.renderFrameRate=g.outputFrame.frameRate),g.receivedFrame?(h.receiveFrameRate=g.receivedFrame.frameRate,h.receiveResolutionHeight=g.receivedFrame.height,h.receiveResolutionWidth=g.receivedFrame.width):E&&(h.receiveResolutionHeight=E._videoHeight||0,h.receiveResolutionWidth=E._videoWidth||0),void 0!==g.framesRateFirefox&&(h.receiveFrameRate=Math.round(g.framesRateFirefox)),h.receivePackets=g.packets,h.receivePacketsLost=g.packetsLost,h.packetLossRate=h.receivePacketsLost/(h.receivePackets+h.receivePacketsLost),h.totalDuration=d?d.totalDuration+1:1,h.totalFreezeTime=d?d.totalFreezeTime:0,h.receiveDelay=g.jitterBufferMs||0;const t=!!f&&e.getRemoteVideoIsReady(f);E&&t&&yV.isRemoteVideoFreeze(E,g,l)&&(h.totalFreezeTime+=1),h.freezeRate=h.totalFreezeTime/h.totalDuration}R&&(u.end2EndDelay=R.B_ad,h.end2EndDelay=R.B_vd,u.transportDelay=R.B_ed,h.transportDelay=R.B_ed,u.currentPacketLossRate=R.B_ealr4/100,h.currentPacketLossRate=R.B_evlr4/100,p.uplinkNetworkQuality=R.B_punq?R.B_punq:0,p.downlinkNetworkQuality=R.B_pdnq?R.B_pdnq:0),this.remoteStats.set(r,{audioStats:u,videoStats:h,videoPcStats:g,networkStats:p}),_&&this.exceptionMonitor.setRemoteAudioStats(_,u),E&&this.exceptionMonitor.setRemoteVideoStats(E,h)}))}}class AV{constructor(){og(this,\"destChannelMediaInfos\",new Map),og(this,\"srcChannelMediaInfo\",void 0)}setSrcChannelInfo(e){Nb(e),this.srcChannelMediaInfo=e}addDestChannelInfo(e){Nb(e),this.destChannelMediaInfos.set(e.channelName,e)}removeDestChannelInfo(e){gb(e),this.destChannelMediaInfos.delete(e)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}function bV(e){if(!(e instanceof AV)){return new Sb(nv.INVALID_PARAMS,\"Config should be instance of [ChannelMediaRelayConfiguration]\").throw()}const t=e.getSrcChannelMediaInfo(),i=e.getDestChannelMediaInfo();if(!t){return new Sb(nv.INVALID_PARAMS,\"srcChannelMediaInfo should not be empty\").throw()}if(0===i.size){return new Sb(nv.INVALID_PARAMS,\"destChannelMediaInfo should not be empty\").throw()}}function wV(e){var t={},i=!1;function n(t,n){return i=!0,{done:!1,value:new GU(n=new zU((function(i){i(e[t](n))})),1)}}return t[void 0!==eg&&tg||\"@@iterator\"]=function(){return this},t.next=function(e){return i?(i=!1,e):n(\"next\",e)},\"function\"==typeof e.throw&&(t.throw=function(e){if(i)throw i=!1,e;return n(\"throw\",e)}),\"function\"==typeof e.return&&(t.return=function(e){return i?(i=!1,e):n(\"return\",e)}),t}var OV=i(JU);function NV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function DV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?NV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):NV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var PV;function LV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function kV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?LV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):LV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let MV=(PV=class e extends Kb{get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get localCodecs(){return[...new Set(this.localCapabilities&&this.localCapabilities.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(My)).call(t,e)})))]}constructor(t,i){super(t,i),og(this,\"store\",void 0),og(this,\"peerConnection\",void 0),og(this,\"remoteSDP\",void 0),og(this,\"initialOffer\",void 0),og(this,\"statsFilter\",void 0),og(this,\"useRTX\",!1),og(this,\"localCapabilities\",void 0),og(this,\"localCandidateCount\",0),og(this,\"allCandidatesReceived\",!1),og(this,\"establishPromise\",void 0),og(this,\"mutex\",new hy(\"P2PConnection-mutex\")),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=Dx(this.peerConnection,Dy(\"STATS_UPDATE_INTERVAL\"),void 0,kI()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}async establish(){try{const e=await this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=bM(e.sdp),i=AM(e.sdp,{filterRTX:!this.useRTX,filterVideoFec:Dy(\"FILTER_VIDEO_FEC\"),filterAudioFec:Dy(\"FILTER_AUDIO_FEC\"),filterAudioCodec:[\"opus\"]});return this.localCapabilities=i,this.initialOffer=e,kV(kV({},t),{},{rtpCapabilities:{send:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},recv:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},sendrecv:i},offerSDP:e.sdp})}catch(e){throw new rv(nv.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async updateRemoteConnect(){}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new class{constructor(e){og(this,\"sessionDesc\",void 0),og(this,\"localCapabilities\",void 0),og(this,\"rtpCapabilities\",void 0),og(this,\"candidates\",void 0),og(this,\"iceParameters\",void 0),og(this,\"dtlsParameters\",void 0),og(this,\"setup\",void 0),og(this,\"currentMidIndex\",void 0),og(this,\"cname\",void 0),e=Gv(e);const{iceParameters:t,dtlsParameters:i,candidates:n,rtpCapabilities:r,setup:o,localCapabilities:s,sdkCodec:a,cname:c}=e,d=CM.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE audio video\\na=msid-semantic: WMS\\na=ice-lite\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:audio\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:video\\n\");this.rtpCapabilities=r,this.candidates=n,this.iceParameters=t,this.dtlsParameters=i,this.setup=o,this.localCapabilities=s,this.cname=c;for(let e=0;e<d.mediaDescriptions.length;e++){const s=d.mediaDescriptions[e];if(s.attributes.iceUfrag=t.iceUfrag,s.attributes.icePwd=t.icePwd,s.attributes.fingerprints=i.fingerprints,s.attributes.candidates=n,s.attributes.setup=o,\"video\"===s.media.mediaType){s.media.fmts=r.videoCodecs.map((e=>e.payloadType.toString(10)));let e=r.videoCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,a)}));0===e.length&&(e=r.videoCodecs),s.attributes.payloads=e,s.attributes.extmaps=r.videoExtensions}\"audio\"===s.media.mediaType&&(s.media.fmts=r.audioCodecs.map((e=>e.payloadType.toString(10))),s.attributes.payloads=r.audioCodecs,s.attributes.extmaps=r.audioExtensions),d.mediaDescriptions[e]=this.mungMediaDesc(s)}this.sessionDesc=d,this.currentMidIndex=d.mediaDescriptions.length-1}toString(){return CM.print(this.sessionDesc)}send(e,t,i){const{ssrcs:n,ssrcGroups:r}=DM(t,this.cname),o=this.sessionDesc.mediaDescriptions.find((t=>e===Yb.VIDEO?\"video\"===t.media.mediaType:\"audio\"===t.media.mediaType)),s=n[0].attributes.label,a=n[0].attributes.mslabel;return o.attributes.ssrcs=o.attributes.ssrcs.concat(n),o.attributes.ssrcGroups=o.attributes.ssrcGroups.concat(r),{id:s,mslabel:a}}batchSend(e){return e.map((e=>{let{kind:t,ssrcMsg:i}=e;return this.send(t,i,void 0)}))}stopSending(e){this.sessionDesc.mediaDescriptions.forEach((t=>{const i=[],n=[],r=[];t.attributes.ssrcs.forEach((t=>{Dn(e).call(e,t.attributes.label||\"\")?r.push(t):i.push(t)})),t.attributes.ssrcGroups.forEach((e=>{var t;Dn(t=r.map((e=>e.ssrcId))).call(t,e.ssrcIds[0])||n.push(e)})),t.attributes.ssrcs=i,t.attributes.ssrcGroups=n}))}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}receive(e,t,i){e.forEach(((e,t)=>{const i=e._mediaStreamTrack,n=this.sessionDesc.mediaDescriptions.findIndex((e=>e.attributes.mid===i.kind)),r=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[n],e);this.sessionDesc.mediaDescriptions[n]=r}))}stopReceiving(e){}updateCandidates(e){e===qb.TCP?this.candidates.forEach((e=>{-1===this.candidates.findIndex((t=>\"tcp\"===t.transport&&t.connectionAddress===e.connectionAddress&&t.port===e.port))&&this.candidates.push(DV(DV({},e),{},{foundation:\"tcpcandidate\",priority:Number(e.priority)-1+\"\",transport:\"tcp\",port:Number(e.port)+90+\"\"}))})):this.candidates=this.candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=Gv(e),this.iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}mungRecvMediaDsec(e,t){const i=Gv(e);return PM(i,t),kM(i,t),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}updateTrackLabel(e,t,i){const n=this.sessionDesc.mediaDescriptions.find((t=>e===Yb.VIDEO?\"video\"===t.attributes.mid:\"audio\"===t.attributes.mid));if(n){const e=n.attributes.ssrcs.find((e=>e.attributes.label===t));var r;e&&(e.attributes.label=i,null===(r=e.attributes.msid)||void 0===r||r.replace(t,i))}}mungMediaDesc(e){const t=Gv(e);return LM(t),function(e){const t=e.attributes.extmaps.find((e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName));t&&e.attributes.extmaps.splice(e.attributes.extmaps.indexOf(t),1),e.attributes.payloads.forEach((e=>{const t=e.rtcpFeedbacks.findIndex((e=>\"transport-cc\"===e.type));-1!==t&&e.rtcpFeedbacks.splice(t,1)}))}(t),t}getSSRC(e){for(const t of this.sessionDesc.mediaDescriptions)for(const i of t.attributes.ssrcs)if(i.attributes.label===e)return[i]}}(kV(kV({},e),{},{rtpCapabilities:e.rtpCapabilities.send,localCapabilities:this.localCapabilities,sdkCodec:this.store.codec}));const t=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(this.initialOffer),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:t})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async updateRemoteRTPCapabilities(e,t){throw new rv(nv.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}getPreMedia(e){}send(e,t){var i=this;return ZU((function*(){const n=yield WU(i.mutex.lock());try{if(!i.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const r=e.map((e=>i.peerConnection.addTrack(e._mediaStreamTrack))),o=yield WU(i.peerConnection.createOffer()),s=CM.parse(o.sdp),a=e.map((e=>{const t=e._mediaStreamTrack,n=s.mediaDescriptions.find((e=>e.attributes.mid===t.kind));if(!n)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return function(e,t,i){const n=e.attributes.ssrcs.filter((e=>e.attributes.label===t)),r=e.attributes.ssrcGroups;if(0===n.length)throw new Error(\"Cannot extract ssrc from plan-b SDP.\");if(r&&n.length>1){const e=r.find((e=>-1!==e.ssrcIds.indexOf(n[0].ssrcId)));return e?[{ssrcId:e.ssrcIds[0],rtx:i?e.ssrcIds[1]:void 0}]:[{ssrcId:n[0].ssrcId}]}return[{ssrcId:n[0].ssrcId}]}(n,t.id,i.useRTX)}));let c;try{c=yield a}catch(e){throw r.forEach((e=>{PI()&&e.replaceTrack(null),i.peerConnection.removeTrack(e)})),e}const d=i.mungSendOfferSDP(o.sdp,e);i.remoteSDP.receive(e,t,c);const l=i.remoteSDP.toString();return yield WU(i.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield WU(i.applySendEncodings(r,e)),yield WU(i.peerConnection.setRemoteDescription({type:\"answer\",sdp:l})),e.map(((e,t)=>{const i=e._mediaStreamTrack.id;return{localSSRC:a[t],id:i}}))}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{n()}}))()}async stopSending(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{PI()&&e.replaceTrack(null),this.peerConnection.removeTrack(e)}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i),this.remoteSDP.stopReceiving(e);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{id:i,mslabel:r}=this.remoteSDP.send(e,t,n),o=new Gh(((t,n)=>{const o=setTimeout((()=>{n(new Error(\"Cannot receive track, id: \".concat(i)))}),1e4),s=n=>{const a=AI();if((\"Safari\"===a.name&&11===Number(a.version)||MI())&&n.track.id!==i&&n.streams[0].id===r){var c;const r=n.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(e,i,n.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(r)}if(n.track.id===i)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(n.track)};this.peerConnection.addEventListener(\"track\",s)})),s=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:s});const a=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(a);return{track:await o,id:i}}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const i=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(i)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){}async unmuteRemote(e){}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"sender' length doesn't match mids' length.\");t.map((e=>{if(PI()&&e.track)e.track.enabled=!1;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!1)),e.setParameters(t)}}))}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter((t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")}));if(t.length!==e.length)throw new Error(\"Senders' length doesn't match mids' length.\");t.map((async e=>{if(PI()&&e.track)e.track.enabled=!0;else{const t=e.getParameters();t.encodings.forEach((e=>e.active=!0)),await e.setParameters(t)}}));const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i);const n=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return ZU((function*(){const i=yield WU(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(MD().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===qb.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(Qy.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===qb.RELAY)return;e!==qb.RELAY&&t.remoteSDP.updateCandidates(e);const n=yield WU(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=bM(n.sdp),{remoteIceParameters:o}=yield r.iceParameters;t.remoteSDP.restartICE(o);const s=t.remoteSDP.toString();yield WU(t.peerConnection.setLocalDescription(n)),yield WU(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:s}))}catch(e){Qy.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const e=await this.peerConnection.createOffer(),i=this.mungSendOfferSDP(e.sdp,[t]);this.remoteSDP.updateRecvMedia(t._mediaStreamTrack.kind,t);const n=this.remoteSDP.toString();await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getSenders().filter((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e}));1===i.length&&await this.applySendEncodings(i,[t])}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getSenders().find((e=>{var i;return(null===(i=e.track)||void 0===i?void 0:i.id)===t}));i&&await i.replaceTrack(e._mediaStreamTrack)}createDataChannels(e,t){throw new rv(nv.NOT_SUPPORTED,\"Planb mode does not support createDataChannels.\")}stopDataChannels(e){throw new rv(nv.NOT_SUPPORTED,\"Planb mode does not support stopDataChannels.\")}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,Qy.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,Qy.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),Dy(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[],sdpSemantics:\"plan-b\"};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(bv(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),Dy(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")})))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}async updateRtpSenderEncodings(e,t){var i;if(!t){t=this.peerConnection.getSenders().find((t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e._mediaStreamTrack.id}))}if(!t)return Qy.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(!MD().supportSetRtpSenderParameters)return Qy.warn(\"Browser not support set rtp-sender parameters\");const n={},r={};if(e instanceof Hk)switch(e._optimizationMode){case\"motion\":n.degradationPreference=\"maintain-framerate\";break;case\"detail\":n.degradationPreference=\"maintain-resolution\";break;default:n.degradationPreference=\"balanced\"}if(Dy(\"DSCP_TYPE\")&&QI()){var o;const e=Dy(\"DSCP_TYPE\");Dn(o=[\"very-low\",\"low\",\"medium\",\"high\"]).call(o,e)&&(r.networkPriority=e)}const s=t.getParameters(),a=null===(i=s.encodings)||void 0===i?void 0:i[0];a&&Object.assign(a,r),Object.assign(s,n),Qy.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(s.encodings))),await t.setParameters(s)}async applySendEncodings(e,t){try{if(!MD().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];n&&r&&await this.updateRtpSenderEncodings(r,n)}}catch(e){Qy.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t){const i=CM.parse(e);return t.forEach(((e,t)=>{const n=e._mediaStreamTrack,r=i.mediaDescriptions.find((e=>e.attributes.mid===n.kind));r&&PM(r,e)})),CM.print(i)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const t=this.remoteSDP.batchSend(e).map(((t,i)=>{let{id:n,mslabel:r}=t;const{kind:o}=e[i];return new Gh(((e,t)=>{const i=setTimeout((()=>{t(new Error(\"Cannot receive track, id: \".concat(n)))}),1e4),s=t=>{const a=AI();if(\"Safari\"===a.name&&11===Number(a.version)&&t.track.id!==n&&t.streams[0].id===r){var c;const r=t.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(o,n,t.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:r,id:n})}if(t.track.id===n)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:t.track,id:n})};this.peerConnection.addEventListener(\"track\",s)}))})),i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:i});const n=await this.peerConnection.createAnswer();return await this.peerConnection.setLocalDescription(n),await Gh.all(t)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}setConfiguration(t){if(MD().supportPCSetConfiguration){const i=e.resolvePCConfiguration(t);this.peerConnection.setConfiguration(i)}}},rb(PV.prototype,\"connect\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"connect\"),PV.prototype),rb(PV.prototype,\"stopSending\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"stopSending\"),PV.prototype),rb(PV.prototype,\"receive\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"receive\"),PV.prototype),rb(PV.prototype,\"stopReceiving\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"stopReceiving\"),PV.prototype),rb(PV.prototype,\"muteRemote\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"muteRemote\"),PV.prototype),rb(PV.prototype,\"unmuteRemote\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"unmuteRemote\"),PV.prototype),rb(PV.prototype,\"muteLocal\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"muteLocal\"),PV.prototype),rb(PV.prototype,\"unmuteLocal\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"unmuteLocal\"),PV.prototype),rb(PV.prototype,\"close\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"close\"),PV.prototype),rb(PV.prototype,\"updateEncoderConfig\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"updateEncoderConfig\"),PV.prototype),rb(PV.prototype,\"updateSendParameters\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"updateSendParameters\"),PV.prototype),rb(PV.prototype,\"replaceTrack\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"replaceTrack\"),PV.prototype),rb(PV.prototype,\"getRemoteSSRC\",[UV],Object.getOwnPropertyDescriptor(PV.prototype,\"getRemoteSSRC\"),PV.prototype),PV);function UV(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"Locking from P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}function xV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function VV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?xV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):xV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const FV=\"9\",BV=4e4;class jV{get localCapabilities(){return Gv(this._localCapabilities)}get rtpCapabilities(){return Gv(this._rtpCapabilities)}get candidates(){return Gv(this._candidates)}get iceParameters(){return Gv(this._iceParameters)}get dtlsParameters(){return Gv(this._dtlsParameters)}constructor(e){og(this,\"sessionDesc\",void 0),og(this,\"_localCapabilities\",void 0),og(this,\"_rtpCapabilities\",void 0),og(this,\"_candidates\",void 0),og(this,\"_iceParameters\",void 0),og(this,\"_dtlsParameters\",void 0),og(this,\"setup\",void 0),og(this,\"currentMidIndex\",void 0),og(this,\"cname\",void 0),og(this,\"firefoxSsrcMidMap\",new Map),e=Gv(e);const{iceParameters:t,dtlsParameters:i,candidates:n,rtpCapabilities:r,setup:o,localCapabilities:s,cname:a}=e;this._rtpCapabilities=r,this._candidates=n,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=s,this.setup=o,this.cname=a,this.sessionDesc=this.updateRemoteRTPCapabilities(r),this.currentMidIndex=this.sessionDesc.mediaDescriptions.length-1}preloadRemoteMedia(e){const t=this.candidates,i=this.dtlsParameters,n=this.iceParameters,r=this.rtpCapabilities.send;let o=this.sessionDesc.mediaDescriptions.length-1;for(let s=1;s<e;s++){const e=2*s+2e4,a=2*s+BV,{ssrcs:c,ssrcGroups:d}=DM([{ssrcId:e}],this.cname),{ssrcs:l,ssrcGroups:u}=DM([{ssrcId:a,rtx:Dy(\"USE_SUB_RTX\")?a+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:FV,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.videoCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:l,ssrcGroups:u,rtcpFeedbackWildcards:[],payloads:r.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(++o)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:FV,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:r.audioCodecs.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:n.iceUfrag,icePwd:n.icePwd,unrecognized:[],candidates:t,extmaps:r.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:c,ssrcGroups:d,rtcpFeedbackWildcards:[],payloads:r.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(++o)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return CM.print(this.sessionDesc)}send(e,t,i,n){const{ssrcs:r,ssrcGroups:o}=DM(t,this.cname,Dy(\"SYNC_GROUP\")?i:void 0),s=this.findPreloadMediaDesc(r);if(s){if(kI()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,s.attributes.mid),n&&(n.twcc||n.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(s);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(s,n),{mid:s.attributes.mid,needExchangeSDP:!0}}return{mid:s.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,r);let i;return-1===t||1===t&&(PI()||function(){const e=AI();return!(e.name!==CI.CHROME||!e.osVersion)&&Number(e.version)<=90}())||0===t&&Dy(\"USE_SUB_RTX\")||WI()?(i=this.createOrRecycleSendMedia(e,r,o,\"sendonly\",n),this.updateBundleMids()):(i=Gv(this.sessionDesc.mediaDescriptions[t]),i.attributes.direction=\"sendonly\",i.attributes.ssrcs=r,i.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(i,n)),kI()&&this.firefoxSsrcMidMap.set(r[0].ssrcId,i.attributes.mid),{mid:i.attributes.mid,needExchangeSDP:!0}}}sendDataChannel(){const{mediaDesc:e,needExchangeSDP:t}=this.createOrRecycleDataChannel();return this.updateBundleMids(),{mid:e.attributes.mid,needExchangeSDP:t}}batchSend(e){const t=e.map((e=>{let{kind:t,ssrcMsg:i,mslabel:n}=e;return this.send(t,i,n)})),i=[];let n=!1;return t.forEach((e=>{let{mid:t,needExchangeSDP:r}=e;r&&(n=!0),i.push(t)})),{mids:i,needExchangeSDP:n}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach((e=>{\"0\"===e.attributes.mid||kI()||WI()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")})),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"inactive\"}))}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>Dn(e).call(e,t.attributes.mid||\"\")));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach((e=>{e.attributes.direction=\"recvonly\"}))}receive(e,t,i,n){e.forEach(((e,r)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,n[r])})),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter((t=>-1!==e.indexOf(t.attributes.mid)));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach((e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"})),this.updateBundleMids()}updateRemoteRTPCapabilities(e){const t=this.sessionDesc||CM.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=ice-lite\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\");this._rtpCapabilities=e;const i=this.rtpCapabilities.send,n=this.localCapabilities.send;for(const e of t.mediaDescriptions){if(e.attributes.iceUfrag=this._iceParameters.iceUfrag,e.attributes.icePwd=this._iceParameters.icePwd,e.attributes.fingerprints=this._dtlsParameters.fingerprints,e.attributes.candidates=this._candidates,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType)if(0===i.videoCodecs.length){const t=n.videoCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,\"vp8\")}))||[n.videoCodecs[0]];e.media.fmts=t.map((e=>e.payloadType.toString(10))),e.attributes.payloads=t,e.attributes.extmaps=[]}else if(e.media.fmts=i.videoCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.videoCodecs,e.attributes.extmaps=i.videoExtensions,Dy(\"PRELOAD_MEDIA_COUNT\")>0){const{ssrcs:t,ssrcGroups:i}=DM([{ssrcId:BV,rtx:Dy(\"USE_SUB_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType)if(0===i.audioCodecs.length){const t=n.audioCodecs.filter((e=>{var t,i;return null===(t=e.rtpMap)||void 0===t?void 0:Dn(i=t.encodingName.toLowerCase()).call(i,\"opus\")}))||[n.audioCodecs[0]];e.media.fmts=t.map((e=>e.payloadType.toString(10))),e.attributes.payloads=t,e.attributes.extmaps=[]}else if(e.media.fmts=i.audioCodecs.map((e=>e.payloadType.toString(10))),e.attributes.payloads=i.audioCodecs,e.attributes.extmaps=i.audioExtensions,GM(e),Dy(\"PRELOAD_MEDIA_COUNT\")>0){const{ssrcs:t,ssrcGroups:i}=DM([{ssrcId:2e4}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}return this.sessionDesc=t,this.currentMidIndex=t.mediaDescriptions.length-1,this.sessionDesc}updateCandidates(e){const t=this._candidates.filter((e=>\"udp\"===e.transport));if(e===qb.TCP){if(0===t.length)return;if(Dy(\"TCP_CANDIDATE_ONLY\")){const e=this._candidates.filter((e=>\"tcp\"===e.transport));t.forEach((t=>{-1===e.findIndex((e=>e.connectionAddress===t.connectionAddress))&&e.push(VV(VV({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=e}else{const e=[];t.forEach((t=>{e.push(VV(VV({},t),{},{foundation:\"tcpcandidate\",priority:Number(t.priority)-1+\"\",transport:\"tcp\",port:Number(t.port)+90+\"\"}))})),this._candidates=[...t,...e]}}else if(e===qb.RELAY){if(0!==t.length)return;{const e=this._candidates.filter((e=>\"tcp\"===e.transport));e.forEach((e=>{t.push(VV(VV({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=[...t,...e]}}else if(0===t.length){this._candidates.filter((e=>\"tcp\"===e.transport)).forEach((e=>{t.push(VV(VV({},e),{},{foundation:\"udpcandidate\",priority:Number(e.priority)+1+\"\",transport:\"udp\",port:Number(e.port)-90+\"\"}))})),this._candidates=t}else this._candidates=this._candidates.filter((e=>\"tcp\"!==e.transport));for(const e of this.sessionDesc.mediaDescriptions)e.attributes.candidates=this.candidates}restartICE(e){e=Gv(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach((t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd}))}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex((i=>{const n=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(kI()){if(n){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return n}))}createOrRecycleDataChannel(){for(const e of this.sessionDesc.mediaDescriptions)if(\"application\"===e.media.mediaType)return{mediaDesc:e,needExchangeSDP:!1};this.currentMidIndex+=1;const e=\"\".concat(this.currentMidIndex),t={media:{mediaType:\"application\",port:FV,protos:[\"UDP\",\"DTLS\",\"SCTP\"],fmts:[\"webrtc-datachannel\"]},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:[],fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[],rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,mid:\"\".concat(e),sctpPort:\"5000\"}};return this.sessionDesc.mediaDescriptions.push(t),{mediaDesc:t,needExchangeSDP:!0}}createOrRecycleRecvMedia(e,t,i,n,r,o){const s=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=WM(s,a,this.localCapabilities.send,s===Yb.VIDEO?n:r),d=s===Yb.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let u={media:{mediaType:s,port:FV,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:c.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:d,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:c,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};u=this.mungRecvMediaDsec(u,e,o);const h=this.findFirstClosedMedia(s);if(h){const e=this.sessionDesc.mediaDescriptions.indexOf(h);this.sessionDesc.mediaDescriptions[e]=u}else this.sessionDesc.mediaDescriptions.push(u);return u}updateRemoteCodec(e,t,i){const n=[...new Set(this._rtpCapabilities.recv.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(My)).call(t,e)})))],r=new Set(t);if(n.every((e=>r.has(e))))return Qy.debug(\"codecs has not changed, no need to updateRemoteCodec, codecs: \".concat(t)),!1;const o=this._rtpCapabilities.recv.videoCodecs.filter((e=>t.some((t=>{var i;return Dn(i=e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\").call(i,t)}))));if(0===o.length)return Qy.debug(\"updateRemoteCodec failed, because cannot find matched codec, remoteCapabilities codecs: \".concat(n,\" codecs: \").concat(t)),!1;const s=[...new Set(o.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")))];let a;if(Qy.debug(\"updateRemoteCodec, from \".concat(n,\" to \").concat(s)),0===e.length)a=this.sessionDesc.mediaDescriptions.filter((e=>\"video\"===e.media.mediaType&&\"recvonly\"===e.attributes.direction));else if(a=this.sessionDesc.mediaDescriptions.filter((t=>t.attributes.mid&&Dn(e).call(e,t.attributes.mid)&&\"recvonly\"===t.attributes.direction)),a.length!==e.length)return Qy.debug(\"updateRemoteCodec failed, because cannot find mids, mids: \".concat(e,\", codecs: \").concat(t)),!1;if(Dy(\"USE_PUB_RTX\")||Dy(\"USE_SUB_RTX\")){const e=HM(o,this.rtpCapabilities.recv.videoCodecs);o.push(...e)}this._rtpCapabilities.recv.videoCodecs=o;const c=this.localCapabilities.send,d=this.rtpCapabilities.recv,l=WM(Yb.VIDEO,d,c,i);return a.forEach((e=>{const t=l.map((e=>e.payloadType.toString(10)));Qy.debug(\"updateRemoteCodec mid: \".concat(e.attributes.mid,\", from \").concat(e.attributes.payloads,\" to \").concat(l)),e.attributes.payloads=l,e.media.fmts=t})),!0}createOrRecycleSendMedia(e,t,i,n,r){const o=this.rtpCapabilities.send,s=e===Yb.VIDEO?o.videoCodecs:o.audioCodecs,a=e===Yb.VIDEO?o.videoExtensions:o.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:FV,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:s.map((e=>e.payloadType.toString(10)))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:s,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:n,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,r);const l=this.findFirstClosedMedia(e);if(l){const e=this.sessionDesc.mediaDescriptions.indexOf(l);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter((e=>\"0\"!==e.media.port)).map((e=>e.attributes.mid))}mungRecvMediaDsec(e,t,i){const n=Gv(e);return LM(n),PM(n,t),kM(n,t),MM(n),UM(n,i,this.localCapabilities.send),n}mungSendMediaDesc(e,t){const i=Gv(e);return UM(i,t,this.localCapabilities.recv),GM(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex((t=>t.attributes.mid===e));if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find((t=>kI()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port))}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find((t=>{var i;return(null===(i=t.attributes)||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId}))}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find((t=>t.attributes.mid===e)))||void 0===t?void 0:t.attributes.ssrcs}}function GV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function WV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?GV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):GV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let HV=function(e){return e.BANDWIDTH=\"bandwidth\",e.CPU=\"cpu\",e.NONE=\"none\",e.OTHER=\"other\",e}({});var KV=function(e){return e[e.DOWN=0]=\"DOWN\",e[e.UP=1]=\"UP\",e}(KV||{});const YV=new Map;function qV(e,t,i,n){let{scale:r}=e;if(0===r&&n===KV.UP||r>=t.length-1&&n===KV.DOWN)return e;let o=WV(WV({},e),{},{scale:n===KV.DOWN?++r:--r});switch(i){case\"maintain-framerate\":o=WV(WV({},o),t[r].motion);break;case\"maintain-resolution\":o=WV(WV({},o),t[r].detail);break;case\"balanced\":o=WV(WV({},o),t[r].balanced)}return o}function zV(e,t){if(t){const i={overUse:0,underUse:0,adaptationList:JV(t)};YV.set(e,i)}else YV.delete(e)}function JV(e){const t=WV({},e),{bitrateMax:i,frameRate:n,scaleResolutionDownBy:r,bitrateMin:o}=t,{MIN_FRAME_RATE:s,MAX_THRESHOLD_FRAMERATE:a,MAX_SCALE:c,BITRATE_MIN_THRESHOLD:d,BITRATE_MAX_THRESHOLD:l,BWE_SCALE_UP_THRESHOLD:u,BWE_SCALE_DOWN_THRESHOLD:h,PERF_SCALE_DOWN_THRESHOLD:p,PERF_SCALE_UP_THRESHOLD:_,BALANCE_BITRATE_FACTOR:E,BALANCE_FRAMERATE_FACTOR:m,BALANCE_RESOLUTION_FACTOR:f,MOTION_RESOLUTION_FACTOR:T,MOTION_BITRATE_FACTOR:S,DETAIL_FRAMERATE_FACTOR:g,DETAIL_BITRATE_FACTOR:R}=by,C=Math.min(t.frameRate,a),I=[{scale:0,threshold:{bwe_down:Math.round(Math.pow(h,1)*i),bwe_up:i,fps_down:Math.round(Math.pow(p,1)*C),fps_up:n},balanced:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o},motion:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o},detail:{scaleResolutionDownBy:1,frameRate:n,bitrateMax:i,bitrateMin:o}}];for(let e=1;e<=c;e++){const t={bwe_up:Math.round(Math.pow(u,e)*i),bwe_down:Math.round(Math.pow(h,e+1)*i),fps_up:Math.round(Math.pow(_,e)*C),fps_down:Math.round(Math.pow(p,e+1)*C)},a={scaleResolutionDownBy:r/Math.pow(f,e),frameRate:Math.max(Math.round(Math.pow(m,e)*n),s),bitrateMax:Math.max(Math.round(Math.pow(E,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(E,e)*o),d)},c={scaleResolutionDownBy:r/Math.pow(T,e),frameRate:n,bitrateMax:Math.max(Math.round(Math.pow(S,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(S,e)*o),d)},v={scaleResolutionDownBy:1,frameRate:Math.max(Math.round(Math.pow(g,e)*n),s),bitrateMax:Math.max(Math.round(Math.pow(R,e)*i),l),bitrateMin:Math.max(Math.round(Math.pow(R,e)*o),d)};I.push({scale:e,threshold:t,balanced:a,motion:c,detail:v})}return I}function XV(e,t,i,n,r,o){const s=YV.get(e)||{overUse:0,underUse:0,adaptationList:JV(r)},{adaptationList:a}=s;YV.set(e,s);const{OVERUSE_TIMES_THRESHOLD:c,UNDERUSE_TIMES_THRESHOLD:d}=by,{scale:l}=n;let u,h;return\"number\"==typeof t&&t>0&&function(e,t,i,n){if(t>=i.length)return!1;let{threshold:{fps_down:r}}=i[t];return Dy(\"FORCE_AG_HIGH_FRAMERATE\")&&\"maintain-framerate\"===n&&(r=i[0].threshold.fps_down),e<r}(t,l,a,o)&&(s.overUse++,h=HV.CPU,s.overUse>c)||\"number\"==typeof i&&i>0&&function(e,t,i){if(t>=i.length)return!1;const{threshold:{bwe_down:n}}=i[t];return e<n}(i,l,a)&&(s.overUse++,h=HV.BANDWIDTH,s.overUse>c)?(s.overUse=0,s.underUse=0,u=qV(n,a,o,KV.DOWN),[u,h]):(\"number\"==typeof t&&t>0&&\"number\"==typeof i&&i>0&&function(e,t,i,n){if(0===t)return;let{threshold:{fps_up:r}}=i[t];return Dy(\"FORCE_AG_HIGH_FRAMERATE\")&&\"maintain-framerate\"===n&&(r=i[1].threshold.fps_up),e>r}(t,l,a,o)&&function(e,t,i){if(0===t)return;const{threshold:{bwe_up:n}}=i[t];return e>n}(i,l,a)&&(s.underUse++,s.underUse>d&&(s.overUse=0,s.underUse=0,u=qV(n,a,o,KV.UP),0===u.scale&&(h=HV.NONE))),[u,h])}function QV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function ZV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?QV(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):QV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function $V(e){var t;return!!Dy(\"ENABLE_AG_ADAPTATION\")&&(!!(e instanceof Kk||Dn(t=e._hints).call(t,eP.CUSTOM_TRACK))&&(!!Dy(\"FORCE_SUPPORT_AG_ADAPTATION\")||!!(function(e){const t=AI();if(t.os!==RI.IOS||!t.osVersion)return!1;const i=t.osVersion.split(\".\");return Number(i[0])>=e}(14)&&BI(17,4,!0)||FI(14)&&jI(17,4,!0))))}const eF=new Map;function tF(e,t){const i=eF.get(e);if(i){const{timer:t}=i;window.clearTimeout(t),eF.delete(e)}t.qualityLimitationReason=HV.NONE,zV(e)}var iF;function nF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function rF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?nF(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):nF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let oF=(iF=class e extends Kb{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get dtlsTransportState(){var e,t;return null!==(e=null===(t=this.peerConnection.getReceivers()[0])||void 0===t||null===(t=t.transport)||void 0===t?void 0:t.state)&&void 0!==e?e:null}get localCodecs(){return[...new Set(this.localCapabilities&&this.localCapabilities.send.videoCodecs.map((e=>e.rtpMap&&e.rtpMap.encodingName.toLowerCase()||\"\")).filter((e=>{var t;return Dn(t=Object.keys(My)).call(t,e)})))]}constructor(t,i){super(t,i),og(this,\"store\",void 0),og(this,\"peerConnection\",void 0),og(this,\"id\",ey(5,\"connection-\")),og(this,\"remoteSDP\",void 0),og(this,\"initialOffer\",void 0),og(this,\"transportEventReceiver\",void 0),og(this,\"statsFilter\",void 0),og(this,\"extension\",{useXR:Dy(\"USE_XR\")}),og(this,\"localCapabilities\",void 0),og(this,\"remoteCodecs\",void 0),og(this,\"localCandidateCount\",0),og(this,\"allCandidatesReceived\",!1),og(this,\"isPreallocation\",!1),og(this,\"preSSRCMap\",new Map),og(this,\"dataStreamChannelMap\",new Map),og(this,\"establishPromise\",void 0),og(this,\"recoveredDataChannelIds\",[]),og(this,\"currentDataChannelId\",1),og(this,\"mutex\",new hy(\"P2PConnection-mutex\")),og(this,\"qualityLimitationReason\",HV.NONE),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=Dx(this.peerConnection,Dy(\"STATS_UPDATE_INTERVAL\"),void 0,kI()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1,this.establishPromise=this.establish()}getPreMedia(e){const t=this.preSSRCMap.get(e);if(void 0!==t){const e=this.peerConnection.getTransceivers().find((e=>e.mid===t));if(e)return{transceiver:e,track:e.receiver.track,id:t}}}async updateRemoteRTPCapabilities(e,t){if(this.remoteCodecs=t,!this.remoteSDP)return void Qy.debug(\"[P2PConnection] cannot updateRemoteRTPCapabilities before remote SDP created, local codecs: \".concat(this.localCodecs,\", codecs: \").concat(t));if(this.remoteSDP.updateRemoteCodec(e,t,this.store.codec)){const e=await this.peerConnection.createOffer(),t=this.logSDPExchange(e.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(e);const i=this.remoteSDP.toString();null==t||t(i),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:i})}else Qy.debug(\"[P2PConnection] updateRemoteRTPCapabilities no need to exchange SDP.\")}async establish(){try{this.peerConnection.addTransceiver(\"video\",{direction:\"recvonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"recvonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=bM(e.sdp),i=await VM({filterRTX:!Dy(\"USE_PUB_RTX\")&&!Dy(\"USE_SUB_RTX\"),filterVideoFec:Dy(\"FILTER_VIDEO_FEC\"),filterAudioFec:Dy(\"FILTER_AUDIO_FEC\"),filterVideoCodec:Dy(\"FILTER_VIDEO_CODEC\")},this.extension);return this.localCapabilities=jM(i),this.initialOffer=e,rF(rF({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new rv(nv.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new jV(rF(rF({},e),{},{localCapabilities:this.localCapabilities})),e.preallocation&&(this.isPreallocation=!0),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0&&this.remoteSDP.updateRemoteCodec([],this.remoteCodecs,this.store.codec);const t=this.remoteSDP.toString(),i=YM(this.initialOffer.sdp,this.extension),n=this.logSDPExchange(i||\"\",\"offer\",\"local\",\"connect\");this.store.descriptionStart(),await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),null==n||n(t),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:t});const r=this.peerConnection.getTransceivers()[0];if(null!=r&&r.receiver&&this.tryBindTransportEvents(r.receiver),Dy(\"PRELOAD_MEDIA_COUNT\")>0){this.remoteSDP.preloadRemoteMedia(Dy(\"PRELOAD_MEDIA_COUNT\"));const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t)}const{preSSRCs:o}=e;if(Array.isArray(o)&&o.length>0){const{mids:e}=this.remoteSDP.batchSend(o.map((e=>({kind:e.kind,ssrcMsg:[{ssrcId:e.ssrcId,rtx:e.rtx}],mslabel:e.mslabel}))));e.forEach(((e,t)=>{this.preSSRCMap.set(o[t].ssrcId,e)})),await KM(this.peerConnection,this.remoteSDP,this.extension),Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] pre-batchReceive exchange SDP.\"))}}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}async updateRemoteConnect(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateRemoteConnect before remote SDP created\");const{rtpCapabilities:t}=e;this.remoteSDP.updateRemoteRTPCapabilities(t),Array.isArray(this.remoteCodecs)&&this.remoteCodecs.length>0&&this.remoteSDP.updateRemoteCodec([],this.remoteCodecs,this.store.codec);const{preSSRCs:i}=e;if(Array.isArray(i)&&i.length>0){const{mids:e}=this.remoteSDP.batchSend(i.map((e=>Object.assign({},{kind:e.kind,ssrcMsg:[{ssrcId:e.ssrcId,rtx:e.rtx}],mslabel:e.mslabel}))));e.forEach(((e,t)=>{this.preSSRCMap.set(i[t].ssrcId,e)}))}await KM(this.peerConnection,this.remoteSDP,this.extension),Qy.debug(\"[P2PConnection] updateRemoteRTPCapabilities by exchanging SDP.\")}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.updateRemoteConnect failed; \".concat(e.toString()))}}send(e,t,i){var n=this;return ZU((function*(){const r=yield WU(n.mutex.lock(\"From P2PConnection.send\"));try{if(!n.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const o=[];e.forEach((e=>{const t=n.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t),e._updateRtpTransceiver(t)})),kI()&&!0===Dy(\"SIMULCAST\")&&(yield WU(n.applySimulcastForFirefox(o,e)));const s=yield WU(n.peerConnection.createOffer()),a=n.remoteSDP.predictReceivingMids(e.length),c=n.mungSendOfferSDP(s.sdp,e,a),d=CM.parse(c),l=a.map((e=>{const t=d.mediaDescriptions.find((t=>t.attributes.mid===e));if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return wM(t,Dy(\"USE_PUB_RTX\"))}));let u;try{u=yield l}catch(r){u=[],n.remoteSDP.receive(e,t,i,u);const o=n.remoteSDP.toString();throw yield WU(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield WU(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})),yield WU(n.stopSending(a,!0)),r}n.remoteSDP.receive(e,t,i,u);const h=n.remoteSDP.toString(),p=n.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield WU(n.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield WU(n.applySimulcastEncodings(o,e)),yield WU(n.applySendEncodings(o,e)),null==p||p(h),yield WU(n.peerConnection.setRemoteDescription({type:\"answer\",sdp:h})),o.map(((e,t)=>{const i=a[t];return{localSSRC:l[t],id:i,transceiver:e}}))}catch(e){throw e instanceof rv?e:new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async createDataChannels(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.createDataChannels before remote SDP created\");let i=this.dataStreamChannelMap.get(e);if(i&&\"open\"===i.readyState)Qy.debug(\"[P2PConnection] Channels are already available and can be reused directly.\");else{const t=this.currentDataChannelId<1023?this.currentDataChannelId++:this.recoveredDataChannelIds.shift();if(\"number\"!=typeof t)throw new Error(\"create DataChannel error, because cannot get dc id\");i=this.peerConnection.createDataChannel(\"datastream-channel\",{id:t,negotiated:!0,ordered:!1,maxRetransmits:Dy(\"DATASTREAM_MAX_RETRANSMITS\")}),i.binaryType=\"arraybuffer\",this.dataStreamChannelMap.set(e,i)}t.forEach((e=>{e._updateOriginDataChannel(i)}));const{needExchangeSDP:n}=this.remoteSDP.sendDataChannel();if(n){const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t),Qy.debug(\"[P2PConnection] createDataChannels by exchanging SDP.\")}else Qy.debug(\"[P2PConnection] createDataChannels no need to exchange SDP.\");return}catch(e){throw e instanceof rv?e:new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.createDataChannels failed; \".concat(e.toString()))}}async stopDataChannels(e){try{const t=this.dataStreamChannelMap.get(e);return t&&(t.id&&this.recoveredDataChannelIds.push(t.id),t.close()),void this.dataStreamChannelMap.delete(e)}catch(e){throw e instanceof rv?e:new rv(nv.DATACHANNEL_FAILED,\"P2PConnection.stopDataChannels failed; \".concat(e.toString()))}}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter((t=>-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map((e=>{var t;tF(this.id+e.mid,this),e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)}));const n=await this.peerConnection.createOffer(),r=this.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(n),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==r||r(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,n){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:r,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,n);o&&(await KM(this.peerConnection,this.remoteSDP,this.extension),Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] receive \").concat(e,\" by exchanging SDP.\")));const s=this.peerConnection.getTransceivers().find((e=>e.mid===r));if(!s)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,id:r,transceiver:s}}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);return i&&(await KM(this.peerConnection,this.remoteSDP,this.extension),Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PConnection] batchReceive by exchanging SDP.\"))),t.map((e=>{const t=this.peerConnection.getTransceivers().find((t=>t.mid===e));if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e,transceiver:t}}))}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");e.forEach((e=>{Array.from(this.preSSRCMap.entries()).some((t=>{let[i,n]=t;if(n===e)return this.preSSRCMap.delete(i),!0}))})),this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const n=await this.peerConnection.createAnswer();null==i||i(n.sdp||\"\"),await this.peerConnection.setLocalDescription(n)}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((e=>{e.direction=\"inactive\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter((t=>t.mid&&-1!==e.indexOf(t.mid)));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map((async(e,t)=>{e.direction=\"sendonly\"}));const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const r=this.remoteSDP.toString();null==n||n(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(e){var t=this;return ZU((function*(){const i=yield WU(t.mutex.lock(\"From P2PConnection.restartICE\"));try{if(!t.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");if(MD().supportPCSetConfiguration){const i=t.peerConnection.getConfiguration(),n=e===qb.RELAY?\"relay\":\"all\";i.iceTransportPolicy!==n&&(Qy.debug(\"[\".concat(t.store.clientId,\"] restartICE change iceTransportPolicy from [\").concat(i.iceTransportPolicy,\"] to [\").concat(n,\"]\")),i.iceTransportPolicy=n,t.peerConnection.setConfiguration(i))}else if(e===qb.RELAY)return;t.remoteSDP.updateCandidates(e);const n=yield WU(t.peerConnection.createOffer({iceRestart:!0}));if(!n.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=bM(n.sdp),{remoteIceParameters:o}=yield r.iceParameters;t.remoteSDP.restartICE(o);const s=t.remoteSDP.toString(),a=t.logSDPExchange(n.sdp||\"\",\"offer\",\"local\",\"restartICE\");t.store.descriptionStart(),yield WU(t.peerConnection.setLocalDescription(n)),null==a||a(s),yield WU(t.peerConnection.setRemoteDescription({type:\"answer\",sdp:s}))}catch(e){Qy.warning(\"[\".concat(t.store.clientId,\"] restart ICE failed, abort operation\"),e)}finally{i()}}))()}close(){var e;this.peerConnection.getTransceivers().forEach((e=>{tF(this.id+e.mid,this)})),this.preSSRCMap.clear(),this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy(),this.dataStreamChannelMap.clear(),this.recoveredDataChannelIds=[],this.currentDataChannelId=1}getStats(){return rF(rF({},this.statsFilter.getStats()),{},{qualityLimitationReason:this.qualityLimitationReason})}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),n=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const r=this.remoteSDP.toString(),o=this.logSDPExchange(n,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:n}),null==o||o(r),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new rv(nv.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter((t=>t.mid===e));1===i.length&&(this.isVP8Simulcast(t)?kI()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find((e=>e.mid===t));i&&await i.sender.replaceTrack(e._mediaStreamTrack)}async getSelectedCandidatePair(){const e=this.peerConnection.getReceivers();if(e.length>0&&e[0].transport&&e[0].transport.iceTransport&&e[0].transport.iceTransport.getSelectedCandidatePair&&e[0].transport.iceTransport.getSelectedCandidatePair()){const t=e[0].transport.iceTransport,{local:i,remote:n}=t.getSelectedCandidatePair();return{local:rF(rF({},Ex),{},{candidateType:i.type,protocol:i.protocol,address:i.address,port:i.port}),remote:rF(rF({},Ex),{},{candidateType:n.type,protocol:n.protocol,address:n.address,port:n.port})}}return this.statsFilter.getSelectedCandidatePair()}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,Qy.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout((()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,Qy.debug(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))}),Dy(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(bv(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),Dy(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),Dy(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach((e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")})))),Dy(\"ENABLE_ENCODED_TRANSFORM\")&&MD().supportWebRTCEncodedTransform&&(i.encodedInsertableStreams=!0),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach((e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(Pw(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!Dy(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))})),t}tryBindTransportEvents(e){const t=e.transport;if(t){this.transportEventReceiver=e,t.onstatechange=()=>{var e;null!=t&&t.state&&(null===(e=this.onDTLSTransportStateChange)||void 0===e||e.call(this,t.state))},t.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,\"error\"in e?e.error:e)};const i=t.iceTransport;i&&(i.onstatechange=()=>{const e=null==t?void 0:t.iceTransport.state;var i;e&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,e))},i.getSelectedCandidatePair&&(i.onselectedcandidatepairchange=()=>{if(i.getSelectedCandidatePair()){const{local:e,remote:t}=i.getSelectedCandidatePair();Qy.info(\"[\".concat(this.store.clientId,\"] [pc-\").concat(this.store.p2pId,\"] selectedcandidatepairchange: local \").concat(JSON.stringify({candidateType:e.type,protocol:e.protocol}),\", remote \").concat(JSON.stringify({candidateType:t.type,protocol:t.protocol,address:t.address,port:t.port}),\" )\"))}}))}}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async updateRtpSenderEncodings(e,t){var i,n;if(!t){const i=this.peerConnection.getSenders();t=i.find((t=>t.track===e._mediaStreamTrack))}if(!t)return Qy.warn(\"[\".concat(e.getTrackId(),\"] no rtpSender found}\"));if(this.isVP8Simulcast(e))return Qy.warn(\"[updateRtpSenderEncodings] Track is VP8 simulcast, please apply simulcast encodings\");if(!MD().supportSetRtpSenderParameters)return Qy.warn(\"[updateRtpSenderEncodings] Browser not support set rtp-sender parameters\");const r={},o={};switch(e._optimizationMode){case\"motion\":r.degradationPreference=\"maintain-framerate\";break;case\"detail\":r.degradationPreference=\"maintain-resolution\";break;case\"balanced\":r.degradationPreference=\"balanced\"}const s=function(e,t){return e.getTransceivers().find((e=>e.sender.track===t||e.receiver.track===t))}(this.peerConnection,e._mediaStreamTrack),a=uL(e);if($V(e)&&s&&t&&a&&this.getLocalVideoStats&&Dn(i=[\"vp8\",\"vp9\"]).call(i,this.store.codec)){var c;const i=r.degradationPreference||(Dn(c=e._hints).call(c,eP.CUSTOM_TRACK)?Dy(\"CUSTOM_ADAPTATION_DEFAULT_MODE\"):\"maintain-framerate\");!function(e,t,i,n,r,o){if(tF(e,i),r(t),\"balanced\"!==n&&\"maintain-framerate\"!==n&&\"maintain-resolution\"!==n)return;let s=-1;zV(e,t);const a=window.setInterval((()=>{const a=eF.get(e);if(!Dy(\"ENABLE_AG_ADAPTATION\")||!a)return tF(e,i),void r(t);const c=o();if(c.sendPackets>0&&c.OutgoingAvailableBandwidth>0){if(-1===s)return void(s=Date.now());if(Date.now()-s<1e3)return;const o=c.sendFrameRate,d=c.OutgoingAvailableBandwidth,[l,u]=XV(e,o,d,a.adaptationConfig,t,n);u&&(i.qualityLimitationReason=u),l&&a.adaptationConfig.scale!==l.scale&&(Qy.debug(\"[\".concat(e,\"] applyAdaptation: \").concat(i.qualityLimitationReason,\"\\n           sendFps \").concat(o,\", bwe \").concat(d,\", switch from \").concat(a.adaptationConfig.scale,\" to \").concat(l.scale,\" \")),a.adaptationConfig=ZV(ZV({},a.adaptationConfig),l),r(l))}}),Dy(\"CHECK_LOCAL_STATS_INTERVAL\")),c=ZV({},t);eF.set(e,{timer:a,adaptationConfig:c,originConfig:t,adaptationFunc:r}),Qy.debug(\"[\".concat(e,\"] start adaptation, originConfig: \").concat(JSON.stringify(t),\", degradationPreference: \").concat(n))}(this.id+s.mid,a,this,i,(e=>{t&&this.updateAdaptation(t,e)}),this.getLocalVideoStats.bind(this))}if(e._encoderConfig){var d;const{bitrateMax:t,frameRate:i,scaleResolutionDownBy:n}=e._encoderConfig;t&&(o.maxBitrate=1e3*t),(Dn(d=e._hints).call(d,eP.LOW_STREAM)||e.isUseScaleResolutionDownBy)&&(i&&(o.maxFramerate=kw(i)),n&&n>=1&&(o.scaleResolutionDownBy=n))}const{maxFramerate:l}=Dy(\"ENCODER_CONFIG_LIMIT\");if(l&&\"number\"==typeof l&&(o.maxFramerate=o.maxFramerate?Math.min(o.maxFramerate,l):l),Dy(\"DSCP_TYPE\")&&QI()){var u;const e=Dy(\"DSCP_TYPE\");Dn(u=[\"very-low\",\"low\",\"medium\",\"high\"]).call(u,e)&&(o.networkPriority=e)}const h=t.getParameters(),p=null===(n=h.encodings)||void 0===n?void 0:n[0];kI()&&!p&&(r.encodings=[o]),p&&Object.assign(p,o),Object.assign(h,r),Qy.debug(\"[\".concat(e.getTrackId(),\"] updateRtpSenderEncodings: \").concat(JSON.stringify(h.encodings))),await t.setParameters(h),await async function(e,t,i){try{var n;if(!MD().supportSetRtpSenderParameters)return;if(!function(e){return\"vp9\"===e}(e)||!Dy(\"ENABLE_SVC\"))return;const r={},o={},s=t.getParameters(),a=null===(n=s.encodings)||void 0===n?void 0:n[0];o.scalabilityMode=IM(i),a&&Object.assign(a,o),Object.assign(s,r),await t.setParameters(s),Qy.debug(\"[updateAdaptation] updateRtpSenderEncodings scalabilityMode success: \".concat(JSON.stringify(s.encodings)))}catch(e){Qy.debug(\"[updateAdaptation] updateRtpSenderEncodings scalabilityMode failed\",e)}}(this.store.codec,t,Dy(\"SVC_MODE\"))}async updateAdaptation(e,t){var i,n;if(!e)return Qy.debug(\"[updateAdaptation] no rtpSender found\");if(!MD().supportSetRtpSenderParameters)return Qy.debug(\"[updateAdaptation] Browser not support set rtp-sender parameters\");const r={},{bitrateMax:o,frameRate:s,scaleResolutionDownBy:a}=t;o&&(r.maxBitrate=1e3*o),s&&(r.maxFramerate=kw(s)),a&&a>=1&&Dn(i=[\"vp8\",\"vp9\"]).call(i,this.store.codec)&&(r.scaleResolutionDownBy=a);const c=e.getParameters(),d=null===(n=c.encodings)||void 0===n?void 0:n[0];d&&Object.assign(d,r),Object.assign(c,{});try{await e.setParameters(c),Qy.debug(\"[updateAdaptation] updateRtpSenderEncodings: \".concat(JSON.stringify(c.encodings)))}catch(t){!(\"transport\"in e)||e.transport&&\"connected\"===e.transport.state?\"connected\"!==this.peerConnectionState?Qy.debug(\"[updateAdaptation] peerConnection not connected}\"):Qy.debug(\"[updateAdaptation] updateRtpSenderEncodings failed\",t):Qy.debug(\"[updateAdaptation] rtpSender transport not connected}\")}}async applySendEncodings(e,t){try{if(!MD().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){const n=e[i],r=t[i];r instanceof Hk&&!this.isVP8Simulcast(r)&&await this.updateRtpSenderEncodings(r,n.sender)}}catch(e){Qy.debug(\"[\".concat(this.store.clientId,\"] Apply RTPSendEncodings failed.\"))}}mungSendOfferSDP(e,t,i){const n=CM.parse(e);return t.forEach(((e,t)=>{const r=i[t],o=n.mediaDescriptions.find((e=>e.attributes.mid===r));o&&(PM(o,e),xM(o,e,this.store.codec))})),CM.print(n)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var n;null===(n=this.onFirstVideoDecoded)||void 0===n||n.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let a=0;a<e.length;a++){var i,n,r,o,s;const c=e[a],d=t[a];if(d instanceof Hk&&!Dn(i=d._hints).call(i,eP.LOW_STREAM)&&null!==(n=d._encoderConfig)&&void 0!==n&&n.bitrateMax&&(null===(r=d._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(o=d._scalabilityMode)&&void 0!==o&&o.numSpatialLayers&&(null===(s=d._scalabilityMode)||void 0===s?void 0:s.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(d._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=c.sender.getParameters();await c.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!kI()&&e.length===t.length)for(let i=0;i<e.length;i++){const n=t[i];if(n instanceof Hk&&this.isVP8Simulcast(n)){const t=e[i],r={},o={high:1e3*(n._encoderConfig.bitrateMax-50),medium:5e4};r.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,r))}}}isVP8Simulcast(e){var t,i,n,r,o;return!!(e instanceof Hk&&Dy(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!Dn(t=e._hints).call(t,eP.LOW_STREAM)&&null!==(i=e._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(n=e._encoderConfig)||void 0===n?void 0:n.bitrateMax)>200&&null!==(r=e._scalabilityMode)&&void 0!==r&&r.numSpatialLayers&&(null===(o=e._scalabilityMode)||void 0===o?void 0:o.numSpatialLayers)>1)}logSDPExchange(e,t,i,n){if(Dy(\"SDP_LOGGING\"))return Qy.upload(\"[\".concat(this.store.clientId,\"] exchanging \").concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(n,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",n)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return t&&0!==t.length?t[0].ssrcId:void 0}setConfiguration(t){if(MD().supportPCSetConfiguration){const i=e.resolvePCConfiguration(t);this.peerConnection.setConfiguration(i)}}},rb(iF.prototype,\"updateRemoteRTPCapabilities\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"updateRemoteRTPCapabilities\"),iF.prototype),rb(iF.prototype,\"connect\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"connect\"),iF.prototype),rb(iF.prototype,\"updateRemoteConnect\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"updateRemoteConnect\"),iF.prototype),rb(iF.prototype,\"createDataChannels\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"createDataChannels\"),iF.prototype),rb(iF.prototype,\"receive\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"receive\"),iF.prototype),rb(iF.prototype,\"batchReceive\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"batchReceive\"),iF.prototype),rb(iF.prototype,\"stopReceiving\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"stopReceiving\"),iF.prototype),rb(iF.prototype,\"muteRemote\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"muteRemote\"),iF.prototype),rb(iF.prototype,\"unmuteRemote\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"unmuteRemote\"),iF.prototype),rb(iF.prototype,\"muteLocal\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"muteLocal\"),iF.prototype),rb(iF.prototype,\"unmuteLocal\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"unmuteLocal\"),iF.prototype),rb(iF.prototype,\"close\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"close\"),iF.prototype),rb(iF.prototype,\"updateEncoderConfig\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"updateEncoderConfig\"),iF.prototype),rb(iF.prototype,\"updateSendParameters\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"updateSendParameters\"),iF.prototype),rb(iF.prototype,\"replaceTrack\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"replaceTrack\"),iF.prototype),rb(iF.prototype,\"updateAdaptation\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"updateAdaptation\"),iF.prototype),rb(iF.prototype,\"getRemoteSSRC\",[sF],Object.getOwnPropertyDescriptor(iF.prototype,\"getRemoteSSRC\"),iF.prototype),iF);function sF(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}var aF;function cF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function dF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?cF(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):cF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function lF(e){var t,i,n,r=2;for(\"undefined\"!=typeof Symbol&&(i=OV,n=Symbol.iterator);r--;){if(i&&null!=(t=e[i]))return t.call(e);if(n&&null!=(t=e[n]))return new uF(t.call(e));i=\"@@asyncIterator\",n=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function uF(e){function t(e){if(Object(e)!==e)return Gh.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return Gh.resolve(e.value).then((function(e){return{value:e,done:t}}))}return uF=function(e){this.s=e,this.n=e.next},uF.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?Gh.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?Gh.reject(e):t(i.apply(this.s,arguments))}},new uF(e)}let hF=(aF=class extends Sv{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(Qb.StateChange,t,this._state)}constructor(e,t){super(),og(this,\"isPlanB\",void 0),og(this,\"store\",void 0),og(this,\"statsUploader\",void 0),og(this,\"connection\",void 0),og(this,\"localTrackMap\",new Map),og(this,\"remoteUserMap\",new Map),og(this,\"localDataChannels\",[]),og(this,\"remoteDataChannelMap\",new Map),og(this,\"pendingLocalTracks\",[]),og(this,\"pendingRemoteTracks\",[]),og(this,\"pendingLocalDataChannels\",[]),og(this,\"pendingRemoteDataChannels\",[]),og(this,\"statsCollector\",void 0),og(this,\"shouldForwardP2PCreation\",void 0),og(this,\"iceFailedCount\",0),og(this,\"dtlsFailedCount\",0),og(this,\"mutex\",new hy(\"P2PChannel-mutex\")),og(this,\"_state\",Xb.Disconnected),og(this,\"_pcStatsUploadType\",Dy(\"NEW_ICE_RESTART\")?zb.FIRST_CONNECTION:zb.OLD_FIRST_CONNECTION),og(this,\"_isInRestartIce\",!1),og(this,\"_isStartRestartIce\",!1),og(this,\"_restartStates\",[\"disconnected\",\"failed\"]),og(this,\"_restartTimer\",void 0),og(this,\"_isFirstConnected\",!0),og(this,\"handleMuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleMuteLocalTrack\");try{if(!this.connection||this.state!==Xb.Connected)return void i(new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel.handleMuteLocalTrack before connection established.\"));const r=this.filterTobeMutedTracks(e);if(0===r.length)return void t();const o=r.find((e=>\"videoLowTrack\"===e[0]));if(o){o[1].track._originMediaStreamTrack.stop()}await this.connection.muteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const s=this.createMuteMessage(r);await Mv(this,Qb.RequestMuteLocal,s),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUnmuteLocalTrack\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleUnmuteLocalTrack\");try{if(!this.connection||this.state!==Xb.Connected)return void i(new rv(nv.INVALID_OPERATION,\"Cannot call P2PChannel.handleUnmuteLocalTrack before connection established.\"));const r=this.filterTobeUnmutedTracks(e);if(0===r.length)return void t();const o=r.find((e=>\"videoLowTrack\"===e[0]));if(o){const t=o[1];if(t.track._originMediaStreamTrack.stop(),!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding){const i=e._mediaStreamTrack.clone();t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}else{const i=Fx(e,xv(this,Qb.RequestLowStreamParameter));t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}await this.connection.unmuteLocal(r.map((e=>{let[,{id:t}]=e;return t})));const s=this.createUnmuteMessage(r);await Mv(this,Qb.RequestUnmuteLocal,s),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUpdateVideoEncoder\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(Jb.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==Xb.Connected)return void t();const{id:r,track:o}=i;await this.connection.updateSendParameters(r,o),await this.connection.updateEncoderConfig(r,o),this.emit(Qb.UpdateVideoEncoder,o),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleUpdateVideoSendParameters\",(async(e,t,i)=>{const n=await this.mutex.lock(\"Locking from P2PChannel.handleUpdateVideoSendParameters\");try{const i=this.localTrackMap.get(Jb.LocalVideoTrack);if(!this.connection||!i||i.track!==e||this.state!==Xb.Connected)return void t();const{id:r,track:o}=i;await this.connection.updateSendParameters(r,o),t()}catch(e){i(e)}finally{n()}})),og(this,\"handleReplaceMixingTrack\",(async(e,t,i,n)=>{if(!this.connection||this.state!==Xb.Connected)return void t();const r=sV([e]);let o;Qy.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will replace audioTrack [\").concat(r.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(o=await this.mutex.lock(\"From P2PChannel.handleReplaceMixingTrack\"));try{await this.replaceTrack(e,r),t()}catch(e){i(e)}finally{var s;null===(s=o)||void 0===s||s()}})),og(this,\"handleReplaceTrack\",(async(e,t,i,n)=>{let r;Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel handleReplaceTrack for [track-id-\").concat(e.getTrackId(),\"]\")),\"boolean\"==typeof n&&n||(r=await this.mutex.lock(\"From P2PChannel.handleReplaceTrack\"));try{var o;const i=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!this.connection||!i||this.state!==Xb.Connected)return void t();if(await(null===(o=this.connection)||void 0===o?void 0:o.replaceTrack(e,i[1].id)),this.isPlanB){const t=i[1];t.id=e._mediaStreamTrack.id,this.localTrackMap.set(i[0],t)}if(i[0]===Jb.LocalVideoTrack&&!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding){const t=this.localTrackMap.get(Jb.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}t()}catch(e){i(e)}finally{var s;null===(s=r)||void 0===s||s()}})),og(this,\"handleGetRTCStats\",(e=>{e(this.statsCollector.getRTCStats())})),og(this,\"handleGetLocalVideoStats\",(e=>{e(this.statsCollector.getLocalVideoTrackStats())})),og(this,\"handleGetLocalAudioStats\",(e=>{e(this.statsCollector.getLocalAudioTrackStats())})),og(this,\"handleGetRemoteVideoStats\",(e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid])),og(this,\"handleGetRemoteAudioStats\",(e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid])),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new tV(this.store),this.bindStatsUploaderEvents(),this.isPlanB=!MD().supportUnifiedPlan||Dy(\"CHROME_FORCE_PLAN_B\")&&QI(),this.shouldForwardP2PCreation=Dy(\"FORWARD_P2P_CREATION\")&&MD().supportPCSetConfiguration&&XI(),this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new MV({},this.store):new oF({},this.store),this.bindConnectionEvents(this.connection))}async startP2PConnection(e){var t;this.state=Xb.New;const i=this.shouldForwardP2PCreation&&\"closed\"===(null===(t=this.connection)||void 0===t?void 0:t.peerConnectionState);if(this.shouldForwardP2PCreation&&!i||(i&&this.connection&&(Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.startP2PConnection ForwardP2P closed.\")),this.connection.close(),this.unbindConnectionEvents(this.connection)),this.connection=this.isPlanB?new MV(e,this.store):new oF(e,this.store),this.bindConnectionEvents(this.connection)),!this.connection)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot P2PChannel.startConnection before P2PConnection initialization .\");return this._pcStatsUploadType=Dy(\"NEW_ICE_RESTART\")?zb.FIRST_CONNECTION:zb.OLD_FIRST_CONNECTION,this._isFirstConnected=!0,this._isInRestartIce=!1,this._isStartRestartIce=!1,this.connection.setConfiguration(e),this.connection.establishPromise}async connect(e){if(!this.connection)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");Dy(\"ENABLE_PREALLOC_PC\")&&this.state===Xb.Connected?await this.connection.updateRemoteConnect(e):(this.store.peerConnectionStart(),await this.connection.connect(e),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=Xb.Connected)}updateRemoteRTPCapabilities(e){const t=Array.from(this.localTrackMap.entries()).filter((e=>{var t;let[i]=e;return Dn(t=[Jb.LocalVideoLowTrack,Jb.LocalVideoTrack]).call(t,i)})),i=t.map((e=>{let[,{id:t}]=e;return t})),n=t.map((e=>{let[t]=e;return t}));if(this.connection instanceof oF){if(sA.updateRemoteRTPCapabilities(this.store.sessionId,{trackTypes:JSON.stringify(n),localCodecs:JSON.stringify(this.connection.localCodecs),remoteCodecs:JSON.stringify(e)}),!Dn(e).call(e,this.store.codec)){const t=[\"vp9\",\"vp8\",\"h264\"].find((t=>Dn(e).call(e,t)));t&&(this.store.codec=t,Qy.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\" updateRemoteRTPCapabilities] default codec is not available, hence the fallback to \").concat(t,\".\")))}this.connection.updateRemoteRTPCapabilities(i,e)}}async getEstablishParams(){var e;if(this.connection instanceof oF&&\"closed\"!==this.connection.peerConnectionState&&Dn(e=[Xb.New,Xb.Connected]).call(e,this.state))return this.connection.establishPromise}async publishDataChannel(e){if(!this.connection||this.state!==Xb.Connected){if(this.state===Xb.Disconnected)throw new rv(nv.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");return e.forEach((e=>{var t;Dn(t=this.pendingLocalDataChannels).call(t,e)||this.pendingLocalDataChannels.push(e)})),[]}const t=this.filterTobePublishedDataChannels(e);return 0===t.length?[]:(t.forEach((e=>{const t=Date.now();this.store.publish(e.id.toString(),\"datachannel\",t)})),await this.connection.createDataChannels(this.store.uid,t),t.forEach((e=>{this.localDataChannels.push(e);const t=Date.now();this.store.publish(e.id+\"\",\"datachannel\",void 0,t)})),e.map((e=>({streamId:e.id,ordered:e.ordered,maxRetransmits:e.maxRetransmits,metadata:e.metadata,channelId:e._originDataChannelId}))))}publish(e,t,i){var n=this;return ZU((function*(){const r=yield WU(n.mutex.lock(\"From P2PChannel.publish\"));try{if(!n.connection||n.state!==Xb.Connected){if(n.state===Xb.Disconnected)throw new rv(nv.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");n.throwIfTrackTypeNotMatch(e);const t=e.filter((e=>-1===n.pendingLocalTracks.indexOf(e)));return void(n.pendingLocalTracks=n.pendingLocalTracks.concat(t))}n.store.pubId=n.store.pubId+1,jU.markPublishStart(n.store.clientId,n.store.pubId);const o=n.filterTobePublishedTracks(e,t,i);if(0===o.length)return void(yield WU(n.tryToUnmuteAudio(e)));yield*wV(lF(n.doPublish(n.connection,o)))}finally{r()}}))()}doPublish(e,t){var i=this;return ZU((function*(){t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===Jb.LocalAudioTrack?\"audio\":\"video\",r)})),i.bindLocalTrackEvents(t);const n=t.map((e=>{let{track:t}=e;return t})),r=yield WU(e.send(t.map((e=>{let{track:t}=e;return t})),i.store.codec,i.store.audioCodec)),o=(yield WU(r.next())).value,s=i.createGatewayPublishMessage(t,o);let a;try{a=yield s}catch(e){throw r.throw(e),(null==e?void 0:e.code)===nv.WS_ABORT&&t.forEach((e=>{let{track:t}=e;-1===i.pendingLocalTracks.indexOf(t)&&i.pendingLocalTracks.push(t)})),i.unbindLocalTrackEvents(t),e}const c=i.mapPubResToRemoteConfig(s,a),d=(yield WU(r.next(c))).value,l=Dy(\"ENABLE_VIDEO_SEI\");n.forEach((async e=>{const t=e.getRTCRtpTransceiver();t&&l&&(e.trackMediaType===Yb.VIDEO?await fM(t.sender,e):e.trackMediaType===Yb.AUDIO&&await async function(e){if(!MD().supportWebRTCEncodedTransform)return void Qy.warning(\"browser not support audio encoded transform\");if(pM.has(e))return;if(!e.track)return;const t={track:e.track};if(DI()){if(!e.createEncodedStreams)return void Qy.warning(\"browser not support createEncodedStreams() API\");let n=null;try{n=e.createEncodedStreams()}catch(e){return void Qy.error(\"create audio-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(n,r){t.controller||(t.controller=r),e.track&&e.track.id!==t.track.id&&(Qy.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i)),r.enqueue(n)}});n.readable.pipeThrough(r).pipeTo(n.writable)}else if(PI()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void Qy.warning(\"browser not support RTCRtpScriptTransform\");const n=hM(),r=new MessageChannel;await new Gh((e=>n.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(n,{name:\"tx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>n.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=n=>{var r;n.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==t.track.id&&(Qy.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i))},t.worker=n}function i(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",i)}const t=pM.get(e);if(t){pM.delete(e);try{var n,r;null===(n=t.controller)||void 0===n||n.terminate(),null===(r=t.worker)||void 0===r||r.terminate()}catch(e){Qy.warning(e&&e.message)}}}pM.set(e,t),e.track.addEventListener(\"ended\",i)}(t.sender))})),t.forEach((e=>{let{type:t}=e;i.statsCollector.addLocalStats(t)})),i.assignLocalTracks(t,d),i.statsUploader.startUploadOutboundStats(),t.forEach((e=>{let{track:t,type:n}=e;const r=Date.now();i.store.publish(t.getTrackId(),n===Jb.LocalAudioTrack?\"audio\":\"video\",void 0,r)}))}))()}async updateVideoStreamParameter(e,t){const i=this.localTrackMap.get(t);if(!i)return;if(!(i.track instanceof Hk))return Qy.warn(\"[updateVideoStreamParameter]: track is not an instance of LocalVideoTrack\");if(!(this.connection instanceof oF||this.connection instanceof MV))return Qy.warn(\"[updateVideoStreamParameter]: connection is not P2PConnection or P2PConnectionPlanB\");const{track:n}=i,r=function(e,t){const i={};return e.height&&e.width&&(i.scaleResolutionDownBy=Fw(e,t)),i.maxFramerate=e.framerate?kw(e.framerate):void 0,i.maxBitrate=e.bitrate?1e3*e.bitrate:void 0,i}(e,n);if(n._encoderConfig||(n._encoderConfig={}),t!==Jb.LocalVideoLowTrack||!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding)null!=r.scaleResolutionDownBy&&(n._encoderConfig.scaleResolutionDownBy=r.scaleResolutionDownBy);else{const t=n._originMediaStreamTrack;if(!t.canvas)return Qy.warn(\"[\".concat(n.getTrackId(),\"] no canvas on track\"));!function(e,t){const i=e.canvas;t.width&&(i.width=kw(t.width)),t.height&&(i.height=kw(t.height)),t.framerate&&(i.stopCapture&&i.stopCapture(),i.stopCapture=kP((()=>{!i.startCapture&&i.stopCapture&&i.stopCapture(),i.startCapture&&i.startCapture()}),kw(t.framerate)))}(t,e)}null!=r.maxBitrate&&(n._encoderConfig.bitrateMax=r.maxBitrate/1e3),null!=r.maxFramerate&&(n._encoderConfig.frameRate&&\"object\"==typeof n._encoderConfig.frameRate?n._encoderConfig.frameRate.max=r.maxFramerate:n._encoderConfig.frameRate={max:r.maxFramerate}),Qy.debug(\"[\".concat(n.getTrackId(),\"] LowStreamEncoderConfig: , \").concat(JSON.stringify(n._encoderConfig))),await this.connection.updateRtpSenderEncodings(n)}publishLowStream(e){var t=this;return ZU((function*(){if(!t.connection||t.state!==Xb.Connected)return;const i=yield WU(t.mutex.lock(\"Locking from P2PChannel.publishLowStream\"));try{const r=t.localTrackMap.get(Jb.LocalVideoTrack);if(!r)throw new rv(nv.UNEXPECTED_ERROR,\"Could not find high stream\");if(t.localTrackMap.has(Jb.LocalVideoLowTrack))throw new rv(nv.UNEXPECTED_ERROR,\"[\".concat(t.store.clientId,\"] Can't publish low stream when stream already publish\"));const o=[{track:t.getLowVideoTrack(r.track,e),type:Jb.LocalVideoLowTrack}];if(yield*wV(lF(t.doPublish(t.connection,o))),r.track.muted||!r.track.enabled){var n;const e=null===(n=t.localTrackMap.get(Jb.LocalVideoLowTrack))||void 0===n?void 0:n.id;void 0!==e&&(yield WU(t.connection.muteLocal([e])))}}finally{i()}}))()}async republish(){this.pendingLocalTracks.length>0&&(Qy.debug(\"[\".concat(this.store.clientId,\"] Emit P2PChannelEvents.RequestRePublish to republish tracks.\")),await kv(this,Qb.RequestRePublish,this.pendingLocalTracks),this.emit(Qb.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[]),this.pendingLocalDataChannels.length>0&&(Qy.debug(\"Emit P2PChannelEvents.RequestRePublishDataChannel to republish datachannels.\"),await kv(this,Qb.RequestRePublishDataChannel,this.pendingLocalDataChannels),this.pendingLocalDataChannels=[])}async reSubscribe(e){for(let e=this.pendingRemoteTracks.length-1;e>=0;e--){const{user:t,kind:i}=this.pendingRemoteTracks[e];(i!==Yb.AUDIO||t._audio_added_&&t._audioSSRC)&&(i!==Yb.VIDEO||t._video_added_&&t._videoSSRC)||this.pendingRemoteTracks.splice(e,1)}if(e)await kv(this,Qb.RequestReSubscribe,this.pendingRemoteTracks);else for(const{user:e,kind:t}of this.pendingRemoteTracks)await this.subscribe(e,t,t===Yb.VIDEO?e._videoSSRC:e._audioSSRC);this.pendingRemoteTracks.forEach((e=>{let{user:t}=e;this.emit(Qb.MediaReconnectEnd,t.uid)})),this.pendingRemoteTracks=[]}async unpublish(e){if(!this.connection||this.state!==Xb.Connected)return void e.forEach((e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)}));const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find((e=>\"videoLowTrack\"===e[0]));if(i){i[1].track.close()}return this.doUnpublish(this.connection,t)}async unpublishDataChannel(e){if(!this.connection||this.state!==Xb.Connected)return void e.forEach((e=>{const t=this.pendingLocalDataChannels.indexOf(e);-1!==t&&this.pendingLocalDataChannels.splice(t,1)}));const t=this.filterTobeUnpublishedDataChannels(e);return 0!==t.length?(t.forEach((e=>{const t=this.localDataChannels.indexOf(e);-1!==t&&this.localDataChannels.splice(t,1)})),0===this.localDataChannels.length&&await this.connection.stopDataChannels(this.store.uid),t.map((e=>e.id))):void 0}async unpublishLowStream(){if(!this.connection||this.state!==Xb.Connected)return;const e=this.localTrackMap.get(Jb.LocalVideoLowTrack);if(!e)return;e.track.close();const t=[[Jb.LocalVideoLowTrack,e]];return this.doUnpublish(this.connection,t)}async doUnpublish(e,t){const i=this.createGatewayUnpublishMessage(t);return await e.stopSending(t.map((e=>{let[,{id:t}]=e;return t}))),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map((e=>{let[t,{track:i}]=e;return{type:t,track:i}}))),t.forEach((e=>{let[t]=e;this.statsCollector.removeLocalStats(t)})),0===this.localTrackMap.size&&this.statsUploader.stopUploadOutboundStats(),i}async subscribeDataChannel(e,t){if(!this.connection||this.state!==Xb.Connected)throw new rv(nv.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");const i=t.filter((t=>{var i;return!(null!==(i=this.remoteDataChannelMap.get(e))&&void 0!==i&&i.get(t.id))}));if(0!==i.length)return await this.connection.createDataChannels(e.uid,i),i.forEach((t=>{var i;this.remoteDataChannelMap.has(e)?null===(i=this.remoteDataChannelMap.get(e))||void 0===i||i.set(t.id,t):this.remoteDataChannelMap.set(e,new Map([[t.id,t]]));const n=this.pendingRemoteDataChannels.findIndex((i=>{let{user:n,id:r}=i;return n.uid===e.uid&&r===t.id}));-1!==n&&this.pendingRemoteDataChannels.splice(n,1)})),i.map((e=>e.id))}async subscribe(e,t,i,n,r){var o;if(!this.connection||this.state!==Xb.Connected)throw new rv(nv.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");if(null!==(o=this.remoteUserMap.get(e))&&void 0!==o&&o.has(t))return;let s,a,c;const d=this.connection.getPreMedia(i);if(d)Qy.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] preSSRCMap has ssrcId: \").concat(i,\", no need to send sub to gateway.\")),c=d.transceiver,s=d.track,a=d.id;else if(r){const i=r.find((e=>{let{stream_type:i}=e;return i===t}));if(!i)throw new rv(nv.UNEXPECTED_ERROR,\"Cannot subscribe to remote \".concat(t,\" for user: \").concat(e.uid,\" because subscribe answer from gateway does not contain stream_type: \").concat(t,\".\"));const n=await this.connection.receive(t,i.ssrcs,String(e._uintid),i.attributes);this.connection instanceof oF&&(c=n.transceiver),s=n.track,a=n.id}else{const r=await this.connection.receive(t,[{ssrcId:i,rtx:n}],String(e._uintid),void 0);this.connection instanceof oF&&(c=r.transceiver),s=r.track,a=r.id}t===Yb.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(s):(e._audioTrack=new aM(s,e.uid,e._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),c&&e._audioTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(s):(e._videoTrack=new sM(s,e.uid,e._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),c&&e._videoTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(e,e._videoTrack)),Dy(\"ENABLE_VIDEO_SEI\")&&c&&(t==Yb.VIDEO?await async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!MD().supportWebRTCEncodedTransform)return void Qy.warning(\"browser not support video encoded transform\");if(!e.track)return;if(TM.has(e)){const i=TM.get(e);return void(i&&(i.onSei=t.onSei))}const i={track:e.track,onSei:t.onSei};if(DI()){if(!e.createEncodedStreams)return void Qy.warning(\"browser not support createEncodedStreams() API\");let t=null;try{t=e.createEncodedStreams()}catch(e){return void Qy.error(\"create video-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(t,r){i.controller||(i.controller=r),e.track&&e.track.id!==i.track.id&&(Qy.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n));const o=function(e){const t=new DataView(e.data);let i=0;for(;i+4<e.data.byteLength;){if(0===t.getUint8(i+0)&&0===t.getUint8(i+1)&&0===t.getUint8(i+2)&&1===t.getUint8(i+3)&&6===t.getUint8(i+4)){let n=i+6,r=0,o=0;for(;255===(o=t.getUint8(n++));)r+=255;r+=o;const s=EM(e.data,n,r);return new Uint8Array(s)}i++}return null}(t);o&&i.onSei&&i.onSei(o),r.enqueue(t)}});t.readable.pipeThrough(r).pipeTo(t.writable)}else if(PI()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void Qy.warning(\"browser not support RTCRtpScriptTransform\");const t=hM(),r=new MessageChannel;await new Gh((e=>t.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(t,{name:\"rx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>t.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=t=>{var r;t.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==i.track.id?(Qy.debug(\"video track changed: \".concat(i.track.id,\" => \").concat(e.track.id)),i.track.removeEventListener(\"ended\",n),i.track=e.track,i.track.addEventListener(\"ended\",n)):t.data.sei&&i.onSei&&i.onSei(t.data.sei)},i.worker=t}function n(){if(e.track){if(this.id!==e.track.id)return;e.track.removeEventListener(\"ended\",n)}!function(e){const t=TM.get(e);if(t){TM.delete(e);try{var i,n;null===(i=t.controller)||void 0===i||i.terminate(),null===(n=t.worker)||void 0===n||n.terminate()}catch(e){Qy.warning(e&&e.message)}}}(e)}TM.set(e,i),e.track.addEventListener(\"ended\",n)}(c.receiver,{onSei:t=>{var i;null===(i=e._videoTrack)||void 0===i||i._onSei(t)}}):t==Yb.AUDIO&&await async function(e){if(!MD().supportWebRTCEncodedTransform)return void Qy.warning(\"browser not support audio encoded transform\");if(_M.has(e))return;const t={track:e.track};if(DI()){if(!e.createEncodedStreams)return void Qy.warning(\"browser not support createEncodedStreams() API\");let n=null;try{n=e.createEncodedStreams()}catch(e){return void Qy.error(\"create audio-encoded-streams error\",e&&e.message)}const r=new TransformStream({transform(n,r){t.controller||(t.controller=r),e.track&&e.track.id!==t.track.id&&(Qy.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i)),r.enqueue(n)}});n.readable.pipeThrough(r).pipeTo(n.writable)}else if(PI()){if(\"undefined\"==typeof RTCRtpScriptTransform)return void Qy.warning(\"browser not support RTCRtpScriptTransform\");const n=hM(),r=new MessageChannel;await new Gh((e=>n.onmessage=t=>{\"registered\"===t.data&&e(void 0)}));const o=new RTCRtpScriptTransform(n,{name:\"rx\",port:r.port2},[r.port2]);e.transform=o,await new Gh((e=>n.onmessage=t=>{\"started\"===t.data&&e(void 0)})),r.port1.onmessage=n=>{var r;n.data.transformed&&e.track&&(null===(r=e.track)||void 0===r?void 0:r.id)!==t.track.id&&(Qy.debug(\"audio track changed: \".concat(t.track.id,\" => \").concat(e.track.id)),t.track.removeEventListener(\"ended\",i),t.track=e.track,t.track.addEventListener(\"ended\",i))},t.worker=n}function i(){e.track.removeEventListener(\"ended\",i),function(e){const t=_M.get(e);if(t){_M.delete(e);try{var i,n;null===(i=t.controller)||void 0===i||i.terminate(),null===(n=t.worker)||void 0===n||n.terminate()}catch(e){Qy.warning(e&&e.message)}}}(e)}_M.set(e,t),e.track.addEventListener(\"ended\",i)}(c.receiver));const l=this.remoteUserMap.get(e);l?l.set(t,a):this.remoteUserMap.set(e,new Map([[t,a]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadInboundStats();const u=this.pendingRemoteTracks.findIndex((i=>{let{user:n,kind:r}=i;return n.uid===e.uid&&t===r}));-1!==u&&(this.pendingRemoteTracks.splice(u,1),this.emit(Qb.MediaReconnectEnd,e.uid))}async massSubscribe(e){return this.massSubscribeNoLock(e)}async massSubscribeNoLock(e){if(!this.connection||this.state!==Xb.Connected)throw new rv(nv.INVALID_OPERATION,\"Cannot subscribeAll remote users when peerConnection disconnected.\");e=e.filter((e=>{var t;let{user:i,mediaType:n}=e;return!(null!==(t=this.remoteUserMap.get(i))&&void 0!==t&&t.has(n))}));const t=[],i=new Map;e.forEach((e=>{if(!this.connection)return;const n=this.connection.getPreMedia(e.ssrcId);n?i.set(e.ssrcId,n):t.push(e)}));const n=await this.connection.batchReceive(t.map((e=>{let{user:t,mediaType:i,ssrcId:n,rtxSsrcId:r}=e;return{kind:i,ssrcMsg:[{ssrcId:n,rtx:r}],mslabel:String(t._uintid)}})));t.forEach(((e,t)=>{i.set(e.ssrcId,n[t])})),e.forEach((e=>{let{user:t,mediaType:n,ssrcId:r}=e;const o=i.get(r);if(!o)return void Qy.debug(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] cannot find \").concat(t.uid,\" subscribe data,\").concat(n,\", \").concat(r));const{track:s,id:a,transceiver:c}=o;n===Yb.AUDIO?(t._audioTrack?t._audioTrack._updateOriginMediaStreamTrack(s):(t._audioTrack=new aM(s,t.uid,t._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote audio track: \").concat(t._audioTrack.getTrackId()))),c&&t._audioTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(t,t._audioTrack)):(t._videoTrack?t._videoTrack._updateOriginMediaStreamTrack(s):(t._videoTrack=new sM(s,t.uid,t._uintid,this.store),Qy.info(\"[\".concat(this.store.clientId,\"] [\").concat(this.store.p2pId,\"] create remote video track: \").concat(t._videoTrack.getTrackId()))),c&&t._videoTrack._updateRtpTransceiver(c),this.bindRemoteTrackEvents(t,t._videoTrack));const d=this.remoteUserMap.get(t);d?d.set(n,a):this.remoteUserMap.set(t,new Map([[n,a]])),this.statsCollector.addRemoteStats(t.uid),this.statsUploader.startUploadInboundStats();const l=this.pendingRemoteTracks.findIndex((e=>{let{user:i,kind:r}=e;return i.uid===t.uid&&n===r}));-1!==l&&(this.pendingRemoteTracks.splice(l,1),this.emit(Qb.MediaReconnectEnd,t.uid))}))}async unsubscribe(e,t,i){const n=this.pendingRemoteTracks.filter((i=>{let{user:n,kind:r}=i;return void 0!==t?n.uid===e.uid&&t===r:n.uid===e.uid}));if(n.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),this.connection&&this.state===Xb.Connected||i||n.forEach((t=>{let{kind:i}=t;var n;if(i===Yb.AUDIO)null===(n=e._audioTrack)||void 0===n||n._destroy(),e._audioTrack=void 0;else if(i===Yb.VIDEO){var r;null===(r=e._videoTrack)||void 0===r||r._destroy(),e._videoTrack=void 0}})),!this.connection||this.state!==Xb.Connected)return;const r=this.filterTobeUnSubscribedTracks(e,t);if(0===r.length)return;await this.connection.stopReceiving(r.map((e=>{let[,{id:t}]=e;return t})));const o=this.createUnsubscribeMessage(r);return this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&this.statsUploader.stopUploadInboundStats(),r.forEach((e=>{let[t,{kind:n}]=e;var r,o;n===Yb.VIDEO&&t._videoSSRC&&(null===(r=this.connection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(n===Yb.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(n===Yb.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}})),o}async unsubscribeDataChannel(e,t){if(t.forEach((e=>{const t=this.pendingRemoteDataChannels.findIndex((t=>t.id===e.id));-1!==t&&this.pendingRemoteDataChannels.splice(t,1)})),!this.connection)return;const i=this.filterTobeUnSubscribedDataChannels(e,t);if(0===i.length)return;t.forEach((e=>{e._close()}));const n=this.remoteDataChannelMap.get(e);return i.forEach((e=>{n&&n.delete(e.id)})),n&&0===n.size&&(this.remoteDataChannelMap.delete(e),await this.connection.stopDataChannels(e.uid)),i.map((e=>e.id))}async massUnsubscribe(e){return this.massUnsubscribeNoLock(e)}async massUnsubscribeNoLock(e){let t=[];for(const{user:i,mediaType:n}of e){const e=this.pendingRemoteTracks.filter((e=>{let{user:t,kind:r}=e;return void 0!==n?t.uid===i.uid&&n===r:t.uid===i.uid}));e.forEach((e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)})),t=t.concat(e)}if(!this.connection||this.state!==Xb.Connected)return void t.forEach((e=>{let{user:t,kind:i}=e;var n;if(i===Yb.AUDIO)null===(n=t._audioTrack)||void 0===n||n._destroy(),t._audioTrack=void 0;else if(i===Yb.VIDEO){var r;null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0}}));const i=Jn(e).call(e,((e,t)=>{let{user:i,mediaType:n}=t;const r=this.filterTobeUnSubscribedTracks(i,n);return e.concat(r)}),[]);if(0===i.length)return;await this.connection.stopReceiving(i.map((e=>{let[,{id:t}]=e;return t})));const n=this.createUnsubscribeAllMessage(i);return this.withdrawRemoteTracks(i),0===this.remoteUserMap.size&&this.statsUploader.stopUploadInboundStats(),i.forEach((e=>{let[t,{kind:i}]=e;var n,r;i===Yb.VIDEO&&t._videoSSRC&&(null===(n=this.connection)||void 0===n||n.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===Yb.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),null===(r=t._videoTrack)||void 0===r||r._destroy(),t._videoTrack=void 0;else if(i===Yb.AUDIO){var o;this.unbindRemoteTrackEvents(t._audioTrack),null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}})),n}isPreSubScribe(e){if(!this.connection||this.state!==Xb.Connected)return!1;return!!this.connection.getPreMedia(e)}async muteRemote(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\".\"));if(!i.get(t))return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.muteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"));const n=t===Yb.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==n&&this.connection.setStatsRemoteVideoIsReady(n,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.connection)return;const i=this.remoteUserMap.get(e);if(!i)return void Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\".\"));i.get(t)||Qy.warning(\"[\".concat(this.store.clientId,\"] P2PChannel.unmuteRemote has no remote user \").concat(e.uid,\" media type \").concat(t,\".\"))}getAllTracks(e){const t=this.localTrackMap.get(Jb.LocalAudioTrack);if((null==t?void 0:t.track)instanceof rk){const i=t.track;return Array.from(this.localTrackMap.entries()).filter((e=>{let[t]=e;return t!==Jb.LocalAudioTrack})).filter((t=>{let[i]=t;return!(e&&i===Jb.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t})).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter((t=>{let[i]=t;return!(e&&i===Jb.LocalVideoLowTrack)})).map((e=>{let[,{track:t}]=e;return t}))}getAllDataChannels(){return this.localDataChannels}reportPublishEvent(e,t,i,n,r){if(e){const i=this.localTrackMap.get(Jb.LocalAudioTrack),o=n?this.localTrackMap.get(Jb.LocalVideoLowTrack):this.localTrackMap.get(Jb.LocalVideoTrack);sA.publish(this.store.sessionId,{eventElapse:jU.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf(eP.SCREEN_TRACK)),audio:!!i,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}else{var o;i||(i=[]);const s=i.find((e=>e instanceof tk)),a=n?null===(o=this.localTrackMap.get(Jb.LocalVideoTrack))||void 0===o?void 0:o.track:i.find((e=>e instanceof Hk));sA.publish(this.store.sessionId,{eventElapse:jU.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(eP.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:r})}}reportSubscribeEvent(e,t,i,n){const r=n===Yb.VIDEO?i._videoSSRC:i._audioSSRC;r&&sA.subscribe(this.store.sessionId,{succ:e,ec:t,video:n===Yb.VIDEO,audio:n===Yb.AUDIO,peerid:i.uid,subscribeRequestid:r,p2pid:this.store.p2pId,eventElapse:jU.measureFromSubscribeStart(this.store.clientId,r),preSsrc:this.isPreSubScribe(r)})}reset(){Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.reset\")),this.mutex=new hy(\"P2PChannel-mutex\"),this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new MV({},this.store):new oF({},this.store),this.bindConnectionEvents(this.connection)),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.unbindRtpTransceiver();const e=this.localTrackMap.get(Jb.LocalAudioTrack);if((null==e?void 0:e.track)instanceof rk){if(e.track.trackList.length>0){const t=e.track;e.track.trackList.forEach((e=>{t.removeAudioTrack(e)}))}e.track.close()}this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.iceFailedCount=0,this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.localDataChannels=[],this.remoteDataChannelMap.clear(),this.pendingLocalDataChannels=[],this.pendingRemoteDataChannels=[],this.state=Xb.Disconnected}getStats(){var e;return null===(e=this.connection)||void 0===e?void 0:e.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.connection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(Jb.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(Jb.LocalVideoTrack);if(e)return{width:e.track.videoWidth||0,height:e.track.videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof Hk||t&&t.track instanceof tk?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t.uid===e));return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map((e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}}));const t=this.localTrackMap.get(Jb.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=aE(e).call(e,((e,t)=>e.level-t.level)),e}async disconnectForReconnect(){this.connection&&(Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel.disconnectForReconnect closing P2PConnection\")),this.state=Xb.Reconnecting,Dy(\"KEEP_LAST_FRAME\")&&0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t]=e;var i;t._videoTrack&&t._videoTrack._player&&(null===(i=t._videoTrack._player.getVideoElement())||void 0===i||i.pause(),t._videoTrack._player.isKeepLastFrame=!0,t._videoTrack._originMediaStreamTrack.stop())})),this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0,this.shouldForwardP2PCreation&&(this.connection=this.isPlanB?new MV({},this.store):new oF({},this.store),this.bindConnectionEvents(this.connection)),0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach((e=>{var t;let[i,{track:n}]=e;switch(i){case Jb.LocalVideoTrack:Dn(t=n._hints).call(t,eP.LOW_STREAM)?n.close():this.pendingLocalTracks.push(n);break;case Jb.LocalAudioTrack:n instanceof rk?this.pendingLocalTracks=this.pendingLocalTracks.concat(n.trackList):this.pendingLocalTracks.push(n);case Jb.LocalVideoLowTrack:}})),this.emit(Qb.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteMedia(t,e)})),this.emit(Qb.MediaReconnectStart,t.uid)})),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),0!==this.localDataChannels.length&&(this.localDataChannels.forEach((e=>{this.pendingLocalDataChannels.push(e)})),this.localDataChannels.length=0),0!==this.remoteDataChannelMap.size&&(Array.from(this.remoteDataChannelMap.entries()).forEach((e=>{let[t,i]=e;Array.from(d_(i).call(i)).forEach((e=>{this.setPendingRemoteDataChannel(t,e)}))})),this.remoteDataChannelMap.clear()),this.statsUploader.stopUploadOutboundStats(),this.statsUploader.stopUploadInboundStats(),this.statsUploader.stopUploadTransportStats(),Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel disconnected, waiting to reconnect.\")))}hasPendingRemoteDataChannel(e,t){for(const i of this.pendingRemoteDataChannels){const{user:n,id:r}=i;if((e instanceof iV?e.uid:e)===n.uid&&r===t)return!0}return!1}setPendingRemoteDataChannel(e,t){this.hasPendingRemoteDataChannel(e,t)||this.pendingRemoteDataChannels.push({user:e,id:t})}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:n,kind:r}=i;if((e instanceof iV?e.uid:e)===n.uid&&t===r)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}restartICE(e){var t=this;return ZU((function*(){if(!t.connection||t.state!==Xb.Connected)return;const i=yield WU(t.mutex.lock(\"From P2PChannel.restartICE\"));let n;try{n=yield WU(t.connection.restartICE(e));const r=yield WU(n.next());if(r.done)return;const o=r.value,s=yield o;switch(t.reportPCDisconnectedOrFailed(e),e){case qb.TCP:t._pcStatsUploadType=zb.TCP_RESTART;break;case qb.RELAY:t._pcStatsUploadType=zb.RELAY_RESTART;break;default:t._pcStatsUploadType=zb.OLD_RESTART}t._isInRestartIce=!0,n.next(s)}catch(e){var r;null===(r=n)||void 0===r||r.throw(e)}finally{i()}}))()}getUplinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats(),t=this.localTrackMap.get(Jb.LocalVideoTrack),i=this.localTrackMap.get(Jb.LocalAudioTrack),n=e.videoSend.find((e=>e.ssrc===(null==t?void 0:t.ssrcs[0].ssrcId))),r=e.audioSend.find((e=>e.ssrc===(null==i?void 0:i.ssrcs[0].ssrcId)));if(!n||!r)return 1;const o=Uv(this,Qb.NeedSignalRTT),s=n?n.rttMs:void 0,a=r?r.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,l=100*e.sendPacketLossRate*.7/50+.3*d/1500,u=l<.17?1:l<.36?2:l<.59?3:l<.1?4:5,h=null==t?void 0:t.track;if(h&&h._encoderConfig&&-1===h._hints.indexOf(eP.SCREEN_TRACK)){const t=h._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return dA[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][u]}}return u}getDownlinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach((i=>{let[n]=i;const r=n._audioSSRC,o=n._videoSSRC,s=e.audioRecv.find((e=>e.ssrc===r)),a=e.videoRecv.find((e=>e.ssrc===o));if(!s&&!a)return void(t+=1);const c=Uv(this,Qb.NeedSignalRTT),d=e.rtt,l=(d&&c?(d+c)/2:d||c)||0,u=s?s.jitterMs:void 0,h=e.recvPacketLossRate;let p=.7*h*100/50+.3*l/1500;u&&(p=.6*h*100/50+.2*l/1500+.2*u/400);t+=p<.1?1:p<.17?2:p<.36?3:p<.59?4:5})),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new Gh(((t,i)=>{this.handleMuteLocalTrack(e,t,i)}))}async replaceTrack(e,t){var i;if(Qy.debug(\"[\".concat(this.store.clientId,\"] P2PChannel replaceTrack from [\").concat(e.getTrackId(),\"] to [\").concat(t.getTrackId(),\"]\")),!this.connection||this.state!==Xb.Connected)return;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(!n)return;const r=n[0];if(e!==t&&(this.unbindLocalTrackEvents([{track:e,type:r}]),this.bindLocalTrackEvents([{track:t,type:r}]),n[1].track=t),await(null===(i=this.connection)||void 0===i?void 0:i.replaceTrack(t,n[1].id)),this.isPlanB){const e=n[1];e.id=t._mediaStreamTrack.id,this.localTrackMap.set(r,e)}if(r===Jb.LocalVideoTrack&&!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding){const t=this.localTrackMap.get(Jb.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new Gh(((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)}))}}}filterTobePublishedTracks(e,t,i){const n=[],r=this.getAllTracks();e=Bv(e=e.filter((e=>-1===r.indexOf(e))));let o,s=!1;const a=this.localTrackMap.get(Jb.LocalAudioTrack);for(const r of e){if(r instanceof Hk&&(this.localTrackMap.has(Jb.LocalVideoTrack)||s?new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(n.push({track:r,type:Jb.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(r,i);n.push({track:e,type:Jb.LocalVideoLowTrack})}if(r instanceof tk)if(a){const e=a.track;if(e instanceof rk)oV([r]),e.addAudioTrack(r),this.bindLocalAudioTrackEvents(r,!0);else{const t=sV([e,r]);Qy.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will replace audioTrack [\").concat(t.getTrackId(),\"]\")),this.replaceTrack(e,t)}}else if(o instanceof rk)oV([r]),o.addAudioTrack(r);else if(o||!r._useAudioElement&&MD().webAudioMediaStreamDest&&!r._bypassWebAudio){o=sV(o?[r,o]:[r])}else o=r}return o&&(Qy.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection will send audioTrack [\").concat(o.getTrackId(),\"]\")),n.push({track:o,type:Jb.LocalAudioTrack})),n}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=Bv(e=e.filter((e=>-1!==i.indexOf(e))));for(const i of e){if(i instanceof tk){const e=this.localTrackMap.get(Jb.LocalAudioTrack);if(!e)continue;e.track instanceof rk?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([Jb.LocalAudioTrack,e]),e.track.close())):t.push([Jb.LocalAudioTrack,e])}if(i instanceof Hk){const e=this.localTrackMap.get(Jb.LocalVideoTrack);if(!e)continue;t.push([Jb.LocalVideoTrack,e]);const i=this.localTrackMap.get(Jb.LocalVideoLowTrack);i&&t.push([Jb.LocalVideoLowTrack,i])}}return t}filterTobePublishedDataChannels(e){return e=(e=Bv(e)).filter((e=>-1===this.localDataChannels.findIndex((t=>t.id===e.id))))}filterTobeUnpublishedDataChannels(e){return e=(e=(e=Bv(e)).filter((e=>-1!==this.localDataChannels.indexOf(e)))).filter((e=>e._originDataChannel))}bindLocalTrackEvents(e){e.forEach((e=>{let{track:t,type:i}=e;switch(i){case Jb.LocalVideoTrack:t.addListener($D.GET_STATS,this.handleGetLocalVideoStats),t.addListener($D.GET_RTC_STATS,this.handleGetRTCStats),t.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener($D.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener($D.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.addListener($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case Jb.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);case Jb.LocalVideoLowTrack:}}))}bindLocalAudioTrackEvents(e,t){e instanceof rk?e.trackList.forEach((e=>{e.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener($D.GET_STATS,this.handleGetLocalAudioStats),e.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.addListener($D.GET_STATS,this.handleGetLocalAudioStats),e.addListener($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||(e.addListener($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.addListener($D.NEED_REPLACE_MIXING_TRACK,this.handleReplaceMixingTrack)))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map((e=>{let[t,{track:i}]=e;return{track:i,type:t}}))),e.forEach((e=>{let{track:t,type:i}=e;switch(i){case Jb.LocalVideoTrack:t.off($D.GET_STATS,this.handleGetLocalVideoStats),t.off($D.GET_RTC_STATS,this.handleGetRTCStats),t.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off($D.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off($D.NEED_UPDATE_VIDEO_SEND_PARAMETERS,this.handleUpdateVideoSendParameters),t.off($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case Jb.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);case Jb.LocalVideoLowTrack:}}))}unbindLocalAudioTrackEvents(e){e instanceof rk?e.trackList.forEach((e=>{e.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off($D.GET_STATS,this.handleGetLocalAudioStats),e.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)})):(e.off($D.GET_STATS,this.handleGetLocalAudioStats),e.off($D.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off($D.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off($D.NEED_REPLACE_MIXING_TRACK,this.handleReplaceMixingTrack),e.off($D.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off($D.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof sM&&t.addListener($D.GET_STATS,(t=>{t(this.handleGetRemoteVideoStats(e))})),t instanceof aM&&t.addListener($D.GET_STATS,(t=>{t(this.handleGetRemoteAudioStats(e))}))}unbindRemoteTrackEvents(e){e&&e.removeAllListeners($D.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach((e=>{let[t,i]=e;i.has(Yb.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(Yb.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)}))}createGatewayPublishMessage(e,t){return e.map(((e,i)=>{var n;let r,o,{track:s,type:a}=e;switch(a){case Jb.LocalAudioTrack:r=Mb.Audio,o={dtx:s instanceof ik&&s._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case Jb.LocalVideoTrack:r=Dn(n=s._hints).call(n,eP.SCREEN_TRACK)?Mb.Screen:Mb.High,o=dF(dF({},Mw(s)),{},{codec:this.store.codec,svc_mode:IM()});break;case Jb.LocalVideoLowTrack:r=Mb.Low,o=dF(dF({},Mw(s)),{},{codec:this.store.codec,svc_mode:IM()})}return{stream_type:r,attributes:o,ssrcs:t[i]}}))}createGatewayUnpublishMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}assignLocalTracks(e,t){e.forEach(((e,i)=>{let{track:n,type:r}=e;this.localTrackMap.set(r,{track:n,id:t[i].id,ssrcs:t[i].localSSRC})}))}withdrawLocalTracks(e){e.forEach((e=>{let[t]=e;this.localTrackMap.delete(t)}))}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{if(Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onConnectionStateChange(\").concat(t,\")\")),this.emit(Qb.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"connected\"===t&&(this._restartTimer&&(clearTimeout(this._restartTimer),this._restartTimer=void 0),(this._isFirstConnected||this._isInRestartIce)&&this.reportPCStats(Date.now(),!0,this._pcStatsUploadType),this._isInRestartIce=!1,this._isFirstConnected=!1,this._isStartRestartIce=!1),Dy(\"NEW_ICE_RESTART\")){var i;if(Dn(i=this._restartStates).call(i,t)){if(this._isStartRestartIce)return;this._isStartRestartIce=!0;const t=t=>{if(\"disconnected\"===e.iceConnectionState||\"checking\"===e.iceConnectionState||\"failed\"===e.iceConnectionState){Qy.debug(\"[\".concat(this.store.clientId,\"] [P2PChannel] start use restartICE, type is \").concat(t));\"CONNECTED\"===Uv(this,Qb.QueryClientConnectionState)&&this.emit(Qb.RequestRestartICE,t)}},i=()=>{\"disconnected\"!==e.iceConnectionState&&\"checking\"!==e.iceConnectionState&&\"failed\"!==e.iceConnectionState||(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),Qy.debug(\"[\".concat(this.store.clientId,\"] P2PConnection disconnected timeout, force reconnect\")),setTimeout((()=>this.emit(Qb.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())},n=Dy(\"ICE_RESTART_INTERVAL\");return void(this._restartTimer=window.setTimeout((()=>{if(Dy(\"JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE\")&&MD().supportPCSetConfiguration)t(qb.RELAY),this._restartTimer=window.setTimeout(i,n);else if(kI())t(qb.UDP),this._restartTimer=window.setTimeout(i,4e3);else{if(t(qb.TCP),MD().supportPCSetConfiguration)return void(this._restartTimer=window.setTimeout((()=>{t(qb.RELAY),this._restartTimer=window.setTimeout(i,n)}),n));this._restartTimer=window.setTimeout(i,n)}}),800))}}else{if(\"disconnected\"===t&&\"disconnected\"===e.iceConnectionState)return setTimeout((()=>{if(\"disconnected\"===e.iceConnectionState&&Dy(\"ICE_RESTART\")){\"CONNECTED\"===Uv(this,Qb.QueryClientConnectionState)&&this.emit(Qb.RequestRestartICE)}}),800),void setTimeout((()=>{\"disconnected\"===e.peerConnectionState&&(Qy.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection disconnected timeout 4000ms, force reconnect\")),this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isInRestartIce=!1,setTimeout((()=>this.emit(Qb.P2PLost)),0),this.iceFailedCount+=1,this.requestReconnect())}),4e3);\"failed\"===t&&(Qy.debug(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection state failed, force reconnect\")),this.reportPCDisconnectedOrFailed(),setTimeout((()=>this.emit(Qb.P2PLost)),0),this.iceFailedCount+=1,await this.requestReconnect())}},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),sA.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:Iv.TRACER}).onSuccess(),this.emit(Qb.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportStateChange=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\"))},e.onDTLSTransportError=e=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\"))},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));var n;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(n=i.audioTrack)||void 0===n||n.emit(sP.FIRST_FRAME_DECODED),sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_AUDIO_DECODE,iA.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._audioSSRC===e));i&&sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_AUDIO_RECEIVED,iA.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(d_(t=this.remoteUserMap).call(t)).find((t=>t._videoSSRC===e));i&&sA.firstRemoteFrame(this.store.sessionId,tA.FIRST_VIDEO_RECEIVED,iA.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,n=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===n||this.emit(Qb.ConnectionTypeChange,i),Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(Bw(t)),\" -> \").concat(JSON.stringify(Bw(e)),\")\"))},e.onSelectedRemoteCandidateChanged=(e,t)=>{Qy.info(\"[\".concat(this.store.clientId,\"] [p2pId: \").concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(Bw(t)),\" -> \").concat(JSON.stringify(Bw(e)),\")\"))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)},e.getLocalVideoStats=()=>{const e=this.statsCollector.getLocalVideoTrackStats(),t=this.statsCollector.getRTCStats();return dF(dF({},e),t)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0,e.getLocalVideoStats=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(Jb.LocalAudioTrack);if(e instanceof tk&&(null==i?void 0:i.track)instanceof rk)return i.track.isActive||t.push([Jb.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n&&(t.push(n),n[0]===Jb.LocalVideoTrack)){const e=this.localTrackMap.get(Jb.LocalVideoLowTrack);e&&t.push([Jb.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(Jb.LocalAudioTrack);if(e instanceof tk&&(null==i?void 0:i.track)instanceof rk)return i.track.isActive&&t.push([Jb.LocalAudioTrack,i]),t;const n=Array.from(this.localTrackMap.entries()).find((t=>{let[,{track:i}]=t;return e===i}));if(n)if(n[0]===Jb.LocalVideoTrack){t.push(n);const e=this.localTrackMap.get(Jb.LocalVideoLowTrack);e&&t.push([Jb.LocalVideoLowTrack,e])}else t.push(n);return t}createMuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}createUnmuteMessage(e){return e.map((e=>{var t;let i,[n,{track:r,ssrcs:o,id:s}]=e;switch(n){case Jb.LocalAudioTrack:i=Mb.Audio;break;case Jb.LocalVideoTrack:i=Dn(t=r._hints).call(t,eP.SCREEN_TRACK)?Mb.Screen:Mb.High;break;case Jb.LocalVideoLowTrack:i=Mb.Low}return{stream_type:i,ssrcs:o,mid:s}}))}filterTobeUnSubscribedTracks(e,t){const i=[],n=this.remoteUserMap.get(e);if(!n)return i;if(t){const r=n.get(t);if(!r)return i;i.push([e,{kind:t,id:r}])}else Array.from(n.entries()).forEach((t=>{let[n,r]=t;i.push([e,{kind:n,id:r}])}));return i}filterTobeUnSubscribedDataChannels(e,t){const i=[];return t.forEach((t=>{var n;null!==(n=this.remoteDataChannelMap.get(e))&&void 0!==n&&n.has(t.id)&&i.push(t)})),i}createUnsubscribeMessage(e){const t=[];return e.forEach((e=>{let[i,{kind:n,id:r}]=e;switch(n){case Yb.VIDEO:return void(i._videoSSRC&&t.push({stream_type:Yb.VIDEO,ssrcId:i._videoSSRC}));case Yb.AUDIO:return void(i._audioSSRC&&t.push({stream_type:Yb.AUDIO,ssrcId:i._audioSSRC}))}})),t}createUnsubscribeAllMessage(e){const t=new Map;return e.forEach((e=>{let[i,{kind:n}]=e;if(t.has(i)){let e=t.get(i);n===Yb.VIDEO?e|=Vb.Video:e|=Vb.Audio,t.set(i,e)}else n===Yb.VIDEO?t.set(i,Vb.Video):t.set(i,Vb.Audio)})),{users:Array.from(t.entries()).map((e=>{let[t,i]=e;return{stream_id:t.uid,stream_type:i}}))}}withdrawRemoteTracks(e){e.forEach((e=>{let[t,{kind:i}]=e;const n=this.remoteUserMap.get(t);n&&(n.delete(i),0===Array.from(n.entries()).length&&this.remoteUserMap.delete(t))}))}async updateBitrateLimit(e){const t=this.localTrackMap.get(Jb.LocalVideoTrack),i=this.localTrackMap.get(Jb.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.connection){return\"connected\"!==this.connection.peerConnectionState}return!0}mapPubResToRemoteConfig(e,t){return e.map(((e,i)=>{var n;let{stream_type:r}=e;return null===(n=t.find((e=>{let{stream_type:t}=e;return r===t})))||void 0===n?void 0:n.attributes}))}async tryToUnmuteAudio(e){for(let i=0;i<e.length;i++)if(e[i]instanceof tk){var t;const n=this.filterTobeUnmutedTracks(e[i]);if(0===n.length)continue;await(null===(t=this.connection)||void 0===t?void 0:t.unmuteLocal(n.map((e=>{let[,{id:t}]=e;return t}))));const r=this.createUnmuteMessage(n);return void await Mv(this,Qb.RequestUnmuteLocal,r)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=()=>this.getStats(),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.connection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(Qb.RequestUpload,e,t),this.statsUploader.requestUploadStats=e=>this.emit(Qb.RequestUploadStats,e),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await $v(Ey(this.dtlsFailedCount,_y)),this.emit(Qb.RequestReconnect)}async reconnectP2P(){const e=Array.from(this.localTrackMap.entries()),t=this.createGatewayUnpublishMessage(e);Array.from(this.remoteUserMap.entries()),t.length>0&&await kv(this,Qb.RequestUnpublishForReconnectPC,t),this.disconnectForReconnect(),this.emit(Qb.RequestReconnectPC)}canPublishLowStream(){return this.localTrackMap.has(Jb.LocalVideoTrack)||this.pendingLocalTracks.some((e=>e instanceof Hk))}throwIfTrackTypeNotMatch(e){if(e.filter((e=>e instanceof Hk)).length>1)throw new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter((e=>e instanceof tk)).length>1&&(e.some((e=>e instanceof tk&&e._bypassWebAudio))||!MD().webAudioMediaStreamDest))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof Hk&&this.pendingLocalTracks.some((e=>e instanceof Hk)))throw new rv(nv.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof tk&&this.pendingLocalTracks.some((e=>e instanceof tk))&&(!MD().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some((e=>e instanceof tk&&e._bypassWebAudio))))throw new rv(nv.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=!Dy(\"DISABLE_DUAL_STREAM_USE_ENCODING\")&&MD().supportDualStreamEncoding,n=dF(dF({},{width:160,height:120,framerate:15,bitrate:50}),t);let r;r=i?e._mediaStreamTrack.clone():Fx(e,n);const o=ey(8,\"track-low-\"),s=new Hk(r,dF(dF({},i&&{scaleResolutionDownBy:Fw(n,e)}),{},{frameRate:n.framerate,bitrateMax:n.bitrate,bitrateMin:n.bitrate}),void 0,void 0,o);return s.on(rP.TRANSCEIVER_UPDATED,(t=>{e._updateRtpTransceiver(t,tP.LOW_STREAM)})),s._hints.push(eP.LOW_STREAM),e.on(\"sei-to-send\",(e=>{s.emit(\"sei-to-send\",e)})),e.addListener($D.NEED_CLOSE,(()=>{s.close()})),s}async globalLock(){return this.mutex.lock(\"From P2PChannel.globalLock\")}async reportPCStats(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this.connection&&this.connection instanceof oF){var r,o,s,a;const c=this.store.keyMetrics.descriptionStart||0,{iceConnectionState:d,dtlsTransportState:l,peerConnectionState:u}=this.connection,{local:h,remote:p}=await this.connection.getSelectedCandidatePair();sA.pcStats(this.store.sessionId,{startTime:c,eventElapse:e-c||0,iceconnectionsate:d,dtlsstate:l,connectionstate:u,intSucc:t?1:2,error:n,selectedLocalCandidateProtocol:null!==(r=null==h?void 0:h.protocol)&&void 0!==r?r:\"\",selectedLocalCandidateType:null!==(o=h.candidateType)&&void 0!==o?o:\"\",selectedLocalCandidateAddress:\"\".concat(h.address,\":\").concat(h.port),selectedRemoteCandidateProtocol:null!==(s=p.protocol)&&void 0!==s?s:\"\",selectedRemoteCandidateType:null!==(a=p.candidateType)&&void 0!==a?a:\"\",selectedRemoteCandidateAddress:\"\".concat(p.address,\":\").concat(p.port),restartCnt:i,preallocation:this.connection.isPreallocation})}}reportVideoFirstFrameDecoded(e,t,i,n){var r;const o=Array.from(d_(r=this.remoteUserMap).call(r)).find((t=>t._videoSSRC===e));if(o){n||this.store.subscribe(o.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const r=this.store.keyMetrics,s=r.subscribe.find((e=>e.userId===o.uid&&\"video\"===e.type));sA.firstRemoteVideoDecode(this.store.sessionId,tA.FIRST_VIDEO_DECODE,iA.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:i,subscribeElapse:jU.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:r.requestAPEnd||0,apStart:r.requestAPStart||0,joinGwEnd:r.joinGatewayEnd||0,joinGwStart:r.joinGatewayStart||0,pcEnd:r.peerConnectionEnd||0,pcStart:r.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:n?1:0,firstFrame:(null==s?void 0:s.firstFrame)||0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.connection)return!1;const n=this.remoteUserMap.get(e);if(!n)return!1;const r=n.get(t);if(!r)return!1;const o=await this.connection.getRemoteSSRC(r);return void 0!==o&&o!==i}unbindRtpTransceiver(){0!==this.localTrackMap.size&&Array.from(this.localTrackMap.entries()).forEach((e=>{let[t,{track:i}]=e;t===Jb.LocalVideoLowTrack?i._updateRtpTransceiver(void 0,tP.LOW_STREAM):i._updateRtpTransceiver(void 0)}))}reportPCDisconnectedOrFailed(e){this.connection&&this.connection instanceof oF&&(\"disconnected\"!==this.connection.iceConnectionState&&\"checking\"!==this.connection.iceConnectionState&&\"failed\"!==this.connection.iceConnectionState||(this._isFirstConnected?(this.reportPCStats(Date.now(),!1,this._pcStatsUploadType),this._isFirstConnected=!1):this._pcStatsUploadType===zb.TCP_RESTART&&e===qb.RELAY?this.reportPCStats(Date.now(),!1,this._pcStatsUploadType):this.reportPCStats(Date.now(),!1,zb.DISCONNECTED_OR_FAILED)))}},rb(aF.prototype,\"startP2PConnection\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"startP2PConnection\"),aF.prototype),rb(aF.prototype,\"connect\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"connect\"),aF.prototype),rb(aF.prototype,\"updateRemoteRTPCapabilities\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"updateRemoteRTPCapabilities\"),aF.prototype),rb(aF.prototype,\"publishDataChannel\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"publishDataChannel\"),aF.prototype),rb(aF.prototype,\"unpublish\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unpublish\"),aF.prototype),rb(aF.prototype,\"unpublishDataChannel\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unpublishDataChannel\"),aF.prototype),rb(aF.prototype,\"unpublishLowStream\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unpublishLowStream\"),aF.prototype),rb(aF.prototype,\"subscribeDataChannel\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"subscribeDataChannel\"),aF.prototype),rb(aF.prototype,\"subscribe\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"subscribe\"),aF.prototype),rb(aF.prototype,\"massSubscribe\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"massSubscribe\"),aF.prototype),rb(aF.prototype,\"unsubscribe\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unsubscribe\"),aF.prototype),rb(aF.prototype,\"unsubscribeDataChannel\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unsubscribeDataChannel\"),aF.prototype),rb(aF.prototype,\"massUnsubscribe\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"massUnsubscribe\"),aF.prototype),rb(aF.prototype,\"muteRemote\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"muteRemote\"),aF.prototype),rb(aF.prototype,\"unmuteRemote\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"unmuteRemote\"),aF.prototype),rb(aF.prototype,\"hasRemoteMediaWithLock\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"hasRemoteMediaWithLock\"),aF.prototype),rb(aF.prototype,\"disconnectForReconnect\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"disconnectForReconnect\"),aF.prototype),rb(aF.prototype,\"updateBitrateLimit\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"updateBitrateLimit\"),aF.prototype),rb(aF.prototype,\"remoteMediaSsrcChanged\",[pF],Object.getOwnPropertyDescriptor(aF.prototype,\"remoteMediaSsrcChanged\"),aF.prototype),aF);function pF(e,t,i){const n=e[t];if(\"function\"!=typeof n)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PChannel.\".concat(t));try{for(var r=arguments.length,o=new Array(r),s=0;s<r;s++)o[s]=arguments[s];return await n.apply(this,o)}finally{i()}},i}const _F={};function EF(e){(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&Qy.debug(\"install service \".concat(e.name)),_F[e.name]=e}function mF(e){const t=_F[e];if(!t)throw new rv(nv.INVALID_OPERATION,\"\".concat(e,\" not found, please use AgoraRTC.use(\").concat(e,\"Service) to load it first\"));return t}function fF(e,t){return mF(\"DataStream\").create(e,t)}function TF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function SF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?TF(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):TF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const gF=Date.now(),RF=20,CF=new Map,IF=new Map;async function vF(e){const t=CF.get(e),i=Array.isArray(t)&&t[t.length-1],n=IF.get(e);if(!i)return void(n.isSyncing=!1);const r={uid:i.uid,payload:i.payload};0===n.firstRecvTs&&(n.firstRecvTs=i.recvTs,n.firstSendTs=i.sendTs);const o=i.sendTs-n.firstSendTs,s=o-(Date.now()-n.firstRecvTs);s>0&&(n.firstRecvTs=Date.now()-o);let a=i.mediaDelay+s;a<=0?(t.pop(),yF(i.context,r),a=0):a=Math.min(a,RF),setTimeout((()=>t.length&&vF(e)),a)}function yF(e,t){e.safeEmit(Nv.STREAM_MESSAGE,t.uid,t.payload),e.onStreamMessage&&e.onStreamMessage(t)}function AF(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;if(!e.syncWithAudio)return yF(i,{uid:e.uid,payload:e.payload});const n=\"\".concat(i.id,\"-\").concat(e.uid),r=CF.get(n)||[],o=r.findIndex((t=>e.sendTs>=t.sendTs)),s=SF(SF({},e),{},{context:i,mediaDelay:t,recvTs:Date.now()});-1===o?r.push(s):r.splice(o,0,s),CF.set(n,r);let a=!1;var c;IF.has(n)?a=!(null===(c=IF.get(n))||void 0===c||!c.isSyncing):IF.set(n,{isSyncing:a,firstRecvTs:0,firstSendTs:0});a||vF(n)}const bF=AI().name;function wF(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function OF(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?wF(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):wF(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const NF=\"websdk_ng_cache_parameter\",DF=Dy(\"MAX_PRELOAD_ASYNC_LENGTH\"),PF=1e4,LF=new Map,kF=[];let MF=null,UF=0,xF=0;const VF=new Map,FF=function(e,t){const i=[];let n=0;const r=async()=>{const e=i.shift();e&&await e(),i.length>0&&n<t?r():n--};return async function(){for(var o=arguments.length,s=new Array(o),a=0;a<o;a++)s[a]=arguments[a];return new Gh((async(o,a)=>{i.push((async()=>{try{const t=await e(...s);o(t)}catch(e){a(e)}})),n<t&&(n++,r())}))}}(jF,DF),BF=EI.CancelToken.source();async function jF(e,t,i,n,r,o){try{if(!Dy(\"ENABLE_PRELOAD\"))return;if(!MD().supportWebCrypto)return void Kv((()=>{Qy.warn(\"Your browser does not support preloading, this feature  be run in a secure environment\")}),\"preload_webcrypto_not_supported\");if(!i&&null!==i)throw new rv(nv.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&dv(i,\"token\",1,2047),dv(e,\"appid\",1,2047),gb(t),n&&Rb(n);const s=ty();Qy.debug(\"preload channel \".concat(t,\", uid is \").concat(n));const a={appId:e,cname:t,token:i||e,uid:\"string\"!=typeof n?n:null,sid:s,proxyServer:r};let c,d;\"string\"==typeof n?(a.stringUid=n,[d,c]=await Gh.all([NU(n,{sid:s,appId:e},BF.token),PU(OF(OF({},a),{},{token:i||e,uid:0}),BF.token)]),a.uid=d.uid,c.gatewayInfo.uid=a.uid,c.gatewayInfo.res.uid=a.uid):(o&&(a.stringUid=o),c=await PU(a,BF.token));const l={sid:s,appId:e,cname:t,token:i||e,uid:a.stringUid||n,intUid:a.uid||c.gatewayInfo.uid,stringUid:a.stringUid,ts:Date.now(),sua:d,ap:c};await async function(e){let t;try{e.uid&&WF({appId:e.appId,cname:e.cname,token:e.token,uid:e.uid,stringUid:e.stringUid});const i=JF(e),n=await async function(e,t){try{const i=await window.crypto.subtle.importKey(\"raw\",zv(t),\"AES-GCM\",!1,[\"encrypt\"]),n=await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:new Uint8Array(1)},i,Yv(window.btoa(JSON.stringify(e))));return qv(new Uint8Array(n))}catch(e){return}}(e,e.token||e.appId);if(!n)return;t=qF(NF);const r=t?JSON.parse(t):[];r.push({[i]:n}),r.length>Dy(\"AP_CACHE_NUM\")&&r.shift(),zF(NF,JSON.stringify(r))}catch(e){Qy.warn(\"Error caching server parameters:\",e.message),zF(NF,\"\")}}(l),UF++}catch(e){throw xF++,function(e){MF||(MF=window.setTimeout((()=>{let t=\"\";VF.forEach(((e,i)=>{t+=\"\".concat(i,\": \").concat(e,\" ;\")})),sA.reportApiInvoke(null,{name:Cv.PRELOAD,options:{success:UF,failed:xF,err:t}}).onError(e),UF=0,xF=0,VF.clear(),MF=null}),PF));const t=VF.get(e.code)||0;VF.set(e.code,t+1)}(e),e}}async function GF(e){try{const t=WF(e);if(!t||\"disabled\"!==e.cloudProxyServer)return;const i=await async function(e,t){try{const i=await window.crypto.subtle.importKey(\"raw\",zv(t),\"AES-GCM\",!1,[\"decrypt\"]),n=await window.crypto.subtle.decrypt({name:\"AES-GCM\",iv:new Uint8Array(1)},i,Yv(e));return JSON.parse(window.atob(qv(new Uint8Array(n))))}catch(e){return}}(t,e.token||e.appId);if(!i)return;if(!function(e,t){const i=e.cname===t.cname&&e.appId===t.appId&&e.token===t.token;if(!i)return!1;return t.stringUid?e.stringUid===t.stringUid:\"number\"==typeof t.uid?e.uid===t.uid:e.uid==t.uid}(i,e))return;if(i&&Date.now()-i.ts<Dy(\"AP_CACHE_LIFETIME\"))return i}catch(e){Qy.warn(\"Error get preloadInfo\",e.message)}}function WF(e){let t;try{if(t=qF(NF),!t)return;const i=JSON.parse(t),n=JF(e),r=function(e,t){for(let i=e.length-1;i>=0;i--)if(t(e[i]))return i;return-1}(i,(e=>n in e));if(-1===r)return;const o=i.splice(r,1)[0];return zF(NF,JSON.stringify(i)),o[n]}catch(e){Qy.warn(\"Error delete preload info: \".concat(t),e.message),zF(NF,\"\")}}function HF(e){if(e){let t=LF.get(e);t&&(window.clearTimeout(t),t=null,LF.delete(e)),Dn(kF).call(kF,e)||\"disabled\"!==e.cloudProxyServer||kF.push(e)}if(LF.size<Dy(\"AP_CACHE_NUM\")&&kF.length>0){const e=kF.shift();LF.set(e,window.setTimeout((async()=>{const{appId:t,cname:i,token:n,stringUid:r,uid:o,proxyServer:s}=e;try{await FF(t,i,n,o,s,r),LF.has(e)&&HF(e)}catch(t){Qy.warn(\"update preload failed\",t.message),KF(e)}}),Dy(\"AP_UPDATE_INTERVAL\")))}}function KF(e){const t=kF.indexOf(e);-1!==t&&kF.splice(t,1);let i=LF.get(e);i&&(window.clearTimeout(i),i=null,LF.delete(e),HF())}function YF(e,t){const i=e.sua,n=e.ap;t&&i&&sA.reqUserAccount(e.sid,{lts:i.requestTime,elapse:i.elapse,success:!0,serverAddr:i.url,stringUid:t,uid:e.intUid,errorCode:null,extend:i.req}),sA.reportResourceTiming(e.ap.url,e.sid),sA.joinWebProxyAP(e.sid,{lts:n.requestTime,elapse:n.elapse,sucess:1,apServerAddr:n.url,turnServerAddrList:n.proxyInfo.addresses.map((e=>e.ip)).join(\",\"),eventType:\"disabled\",unilbsServerIds:[Ow.CHOOSE_SERVER,Ow.CLOUD_PROXY_FALLBACK].toString()}),sA.joinChooseServer(e.sid,{lts:n.requestTime,elapse:n.elapse,succ:!0,csAddr:n.url,opid:n.opid,serverList:n.gatewayInfo.gatewayAddrs.map((e=>e.address)),ec:null,cid:n.gatewayInfo.cid.toString(),uid:n.gatewayInfo.uid.toString(),csIp:n.gatewayInfo.csIp,unilbsServerIds:[Ow.CHOOSE_SERVER].toString(),isHttp3:n.isHttp3})}function qF(e){return window.atob(window.localStorage.getItem(e)||\"\")}function zF(e,t){window.localStorage.setItem(e,window.btoa(t))}function JF(e){let t=\"\".concat(e.appId,\"_\").concat(e.cname);return\"string\"==typeof e.uid&&(t+=\"_s_\".concat(e.uid)),\"number\"==typeof e.uid&&(t+=\"_\".concat(e.uid)),e.token&&(t+=\"_\".concat(e.token)),dy(t)}function XF(e){let t=function(){const e=eB.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}();return function(e,t){let i=e.appId;void 0!==i&&(uB(t,10),aB(t,i));let n=e.cid;void 0!==n&&(uB(t,16),uB(t,n));let r=e.cname;void 0!==r&&(uB(t,26),aB(t,r));let o=e.deviceId;void 0!==o&&(uB(t,34),aB(t,o));let s=e.elapse;void 0!==s&&(uB(t,40),pB(t,s));let a=e.fileSize;void 0!==a&&(uB(t,48),pB(t,$F(a)));let c=e.height;void 0!==c&&(uB(t,56),pB(t,$F(c)));let d=e.jpg;void 0!==d&&(uB(t,66),uB(t,d.length),oB(t,d));let l=e.networkType;void 0!==l&&(uB(t,72),pB(t,$F(l)));let u=e.osType;void 0!==u&&(uB(t,80),pB(t,$F(u)));let h=e.requestId;void 0!==h&&(uB(t,90),aB(t,h));let p=e.sdkVersion;void 0!==p&&(uB(t,98),aB(t,p));let _=e.sequence;void 0!==_&&(uB(t,104),pB(t,$F(_)));let E=e.sid;void 0!==E&&(uB(t,114),aB(t,E));let m=e.timestamp;void 0!==m&&(uB(t,120),pB(t,m));let f=e.uid;void 0!==f&&(uB(t,128),uB(t,f));let T=e.vid;void 0!==T&&(uB(t,136),uB(t,T));let S=e.width;void 0!==S&&(uB(t,144),pB(t,$F(S)));let g=e.service;void 0!==g&&(uB(t,152),uB(t,g));let R=e.callbackData;void 0!==R&&(uB(t,162),uB(t,R.length),oB(t,R));let C=e.ticket;void 0!==C&&(uB(t,170),aB(t,C));let I=e.vendorConfigs;void 0!==I&&(uB(t,178),aB(t,I))}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function QF(e){return function(e){let t={};e:for(;!iB(e);){let i=lB(e);switch(i>>>3){case 0:break e;case 1:t.code=lB(e);break;case 2:t.msg=sB(e,lB(e));break;case 3:t.requestId=sB(e,lB(e));break;case 4:t.timestamp=hB(e,!1);break;default:ZF(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function ZF(e,t){switch(t){case 0:for(;128&cB(e););break;case 2:tB(e,lB(e));break;case 5:tB(e,4);break;case 1:tB(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}function $F(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let eB=[];function tB(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function iB(e){return e.offset>=e.limit}function nB(e,t){let i=e.bytes,n=e.offset,r=e.limit,o=n+t;if(o>i.length){let t=new Uint8Array(2*o);t.set(i),e.bytes=t}return e.offset=o,o>r&&(e.limit=o),n}function rB(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function oB(e,t){let i=nB(e,t.length);e.bytes.set(t,i)}function sB(e,t){let i=rB(e,t),n=String.fromCharCode,r=e.bytes,o=\"ï¿½\",s=\"\";for(let e=0;e<t;e++){let a,c,d,l,u=r[e+i];0==(128&u)?s+=n(u):192==(224&u)?e+1>=t?s+=o:(a=r[e+i+1],128!=(192&a)?s+=o:(l=(31&u)<<6|63&a,l<128?s+=o:(s+=n(l),e++))):224==(240&u)?e+2>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?s+=o:(l=(15&u)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?s+=o:(s+=n(l),e+=2))):240==(248&u)?e+3>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(l=(7&u)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?s+=o:(l-=65536,s+=n(55296+(l>>10),56320+(1023&l)),e+=3))):s+=o}return s}function aB(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}uB(e,n);let r=nB(e,n),o=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?o[r++]=n:(n<2048?o[r++]=n>>6&31|192:(n<65536?o[r++]=n>>12&15|224:(o[r++]=n>>18&7|240,o[r++]=n>>12&63|128),o[r++]=n>>6&63|128),o[r++]=63&n|128)}}function cB(e){return e.bytes[rB(e,1)]}function dB(e,t){let i=nB(e,1);e.bytes[i]=t}function lB(e){let t,i=0,n=0;do{t=cB(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function uB(e,t){for(t>>>=0;t>=128;)dB(e,127&t|128),t>>>=7;dB(e,t)}function hB(e,t){let i,n=0,r=0,o=0;return i=cB(e),n=127&i,128&i&&(i=cB(e),n|=(127&i)<<7,128&i&&(i=cB(e),n|=(127&i)<<14,128&i&&(i=cB(e),n|=(127&i)<<21,128&i&&(i=cB(e),r=127&i,128&i&&(i=cB(e),r|=(127&i)<<7,128&i&&(i=cB(e),r|=(127&i)<<14,128&i&&(i=cB(e),r|=(127&i)<<21,128&i&&(i=cB(e),o=127&i,128&i&&(i=cB(e),o|=(127&i)<<7))))))))),{low:n|r<<28,high:r>>>4|o<<24,unsigned:t}}function pB(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,o=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,s=nB(e,o),a=e.bytes;switch(o){case 10:a[s+9]=r>>>7&1;case 9:a[s+8]=9!==o?128|r:127&r;case 8:a[s+7]=8!==o?n>>>21|128:n>>>21&127;case 7:a[s+6]=7!==o?n>>>14|128:n>>>14&127;case 6:a[s+5]=6!==o?n>>>7|128:n>>>7&127;case 5:a[s+4]=5!==o?128|n:127&n;case 4:a[s+3]=4!==o?i>>>21|128:i>>>21&127;case 3:a[s+2]=3!==o?i>>>14|128:i>>>14&127;case 2:a[s+1]=2!==o?i>>>7|128:i>>>7&127;case 1:a[s]=1!==o?128|i:127&i}}const _B={},EB={},mB=4294967296,fB=mB*mB,TB=fB/2,SB=vB(0,!0),gB=vB(0),RB=yB(0,-2147483648,!1),CB=yB(-1,2147483647,!1),IB=yB(-1,-1,!0);function vB(e,t){let i,n,r;return t?(r=0<=(e>>>=0)&&e<256)&&(n=EB[e],n)?n:(i=yB(e,0,!0),r&&(EB[e]=i),i):(r=-128<=(e|=0)&&e<128)&&(n=_B[e],n)?n:(i=yB(e,e<0?-1:0,!1),r&&(_B[e]=i),i)}function yB(e,t,i){return{low:0|e,high:0|t,unsigned:!!i}}function AB(e,t){if(isNaN(e))return t?SB:gB;if(t){if(e<0)return SB;if(e>=fB)return IB}else{if(e<=-TB)return RB;if(e+1>=TB)return CB}return e<0?t?SB:gB:yB(e%mB|0,e/mB|0,t)}function bB(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}class wB extends Sv{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(rw.CONNECTION_STATE_CHANGE,e,t)}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this._qualityTimer&&(window.clearTimeout(this._qualityTimer),this._qualityTimer=null),this._quality>=1||(this._qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this._qualityRatio}),6e4))}constructor(e){var t;super(),og(this,\"name\",\"AgoraRTCImageModeration\"),og(this,\"_connectionState\",nw.CONNECTING),og(this,\"_sequence\",0),og(this,\"_moderationStartTime\",void 0),og(this,\"_workerConnection\",void 0),og(this,\"_workerMessageLengthLimit\",void 0),og(this,\"_qualityRatio\",void 0),og(this,\"_connectInfo\",void 0),og(this,\"_cancelTokenSource\",EI.CancelToken.source()),og(this,\"_retryConfig\",void 0),og(this,\"_moderationInterval\",void 0),og(this,\"_moderationTimer\",null),og(this,\"_moderationMode\",1),og(this,\"_quality\",1),og(this,\"_qualityTimer\",null),og(this,\"_ticket\",void 0),og(this,\"_moderationIntervalMinimum\",void 0),og(this,\"_uploadFailedNum\",0),og(this,\"_uploadNum\",0),og(this,\"_uploadTimer\",null),og(this,\"_extraInfo\",void 0),og(this,\"_vendor\",\"\"),og(this,\"_encoder\",new TextEncoder),og(this,\"_moderationId\",void 0),og(this,\"inspectImage\",(()=>{if(this.connectionState!==nw.CONNECTED)throw new Sb(nv.OPERATION_ABORTED,\"image moderation service connection status is \".concat(this.connectionState));this._moderationTimer&&(window.clearInterval(this._moderationTimer),this._moderationTimer=null),this._moderationTimer=window.setInterval((()=>{this.connectionState===nw.CONNECTED?this.requestToInspectImage():Qy.debug(\"[\".concat(this._moderationId,\"] Moderation State is not connected , \"),this.connectionState)}),this._moderationInterval<this._moderationIntervalMinimum?this._moderationIntervalMinimum:this._moderationInterval),this.requestToInspectImage()})),this._moderationId=ey(5,\"image-moderation-\"),this._workerMessageLengthLimit=Dy(\"IMAGE_MODERATION_WORKER_MESSAGE_LENGTH_LIMIT\"),this._moderationIntervalMinimum=Dy(\"IMAGE_MODERATION_INTERVAL_MINIMUM\"),this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,e.extraInfo&&(this._extraInfo=this._encoder.encode(e.extraInfo)),e.vendor&&(this._vendor=e.vendor),this._qualityRatio=Dy(\"IMAGE_MODERATION_QUALITY_RATIO\"),this._moderationStartTime=Number(Date.now()),this._workerConnection=new bw(\"worker-\"+this._moderationId,_y),this.on(rw.STATE_CHANGE,((e,t)=>{Qy.debug(\"[\".concat(this._moderationId,\"] Moderation operation :\").concat(ow[e],\" \").concat(t||\"\"))})),this.handleWorkerEvents()}async init(e,t){this.emit(rw.STATE_CHANGE,ow.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new Gh(((n,r)=>{this.on(rw.CONNECTION_STATE_CHANGE,((e,t)=>{e===nw.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorker(e)})).catch((e=>{r(e)}))}))}updateConfig(e){var t;this._moderationInterval=null!==(t=e.interval)&&void 0!==t?t:1e3,e.extraInfo&&(this._extraInfo=this._encoder.encode(e.extraInfo)),e.vendor&&(this._vendor=e.vendor),Qy.debug(\"[\".concat(this._moderationId,\"] updateConfig: \").concat(JSON.stringify(e))),this.connectionState===nw.CONNECTED&&this.inspectImage()}async requestAP(e,t,i){const n=Dy(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;IU++;const l=\"moderation_plugin\",u={service_name:l,json_body:JSON.stringify({appId:r,areaCode:o,cname:s,command:\"allocateEdge\",requestId:IU,seq:IU,sid:a,appToken:c,ts:Date.now(),uid:d+\"\"})};let h,p,_=e[0];return my((async()=>{h=Date.now();const e=await tU(_,{data:u,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-h,0!==e.code){const t=new Sb(nv.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code\"+e.code,{retry:!0,responseTime:p});throw Qy.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"moderation plugin ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw Qy.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"moderation plugin ap empty server\",{code:t.code,responseTime:p});throw Qy.error(e.toString()),e}if(!t.servers.some((e=>!!e.wss))){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"moderation plugin ap empty port\",{code:t.code,responseTime:p});throw Qy.error(e.toString()),e}const n=Dy(\"IMAGE_MODERATION_WORKER_HOST\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(i,\"/moderation\")})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,ticket:t.appTicket,responseTime:p}}),((t,i)=>(sA.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(sA.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==nv.OPERATION_ABORTED&&t.code!==nv.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(rw.STATE_CHANGE,ow.AP_CONNECTED);const{addressList:o,ticket:s}=r;return this._ticket=s,o}async connectWorker(e){this.emit(rw.STATE_CHANGE,ow.CONNECT_WORKER),await this._workerConnection.init(e,1e4)}handleWorkerEvents(){this._workerConnection.on(Tb.CONNECTED,(async()=>{this.emit(rw.STATE_CHANGE,ow.WORKER_CONNECTED,this._workerConnection.url),this.connectionState=nw.CONNECTED})),this._workerConnection.on(Tb.CLOSED,(()=>{this.connectionState=nw.CLOSED})),this._workerConnection.on(Tb.FAILED,(()=>{this.connectionState=nw.CLOSED})),this._workerConnection.on(Tb.RECONNECTING,(()=>{this.connectionState=this.connectionState===nw.CONNECTED?nw.RECONNECTING:nw.CONNECTING})),this._workerConnection.on(Tb.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const t=QF(new Uint8Array(e.data));Dy(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&Qy.debug(\"[\".concat(this._moderationId,\"] Response message for worker of image moderation \"),JSON.stringify(t)),this._uploadNum++,void 0===t.code||0===t.code||(this._uploadFailedNum++,Qy.error(\"[\".concat(this._moderationId,\"] Error response from worke, code is \").concat(t.code,\", msg is \").concat(t.msg)),this._uploadTimer||(this._uploadTimer=window.setTimeout((()=>{sA.reportApiInvoke(this._connectInfo.sid||null,{name:Cv.IMAGE_MODERATION_UPLOAD,options:[this._uploadFailedNum,this._uploadNum,t.code],tag:Iv.TRACER}).onError(new Sb(nv.IMAGE_MODERATION_UPLOAD_FAILED,t.msg)),this._uploadTimer=null}),Dy(\"IMAGE_MODERATION_UPLOAD_REPORT_INTERVAL\"))))}else Qy.error(\"[\".concat(this._moderationId,\"] Unexpected message type from worker\"))})),this._workerConnection.on(Tb.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this._workerConnection.on(Tb.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){const e=Uv(this,rw.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void(Dy(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&Qy.debug(\"Only the track being played can be inspected\"));this._sequence++;const i=await this.generateRequestData(e,t);this._workerConnection.sendMessage(i,!0,!0)}else Dy(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")&&Qy.debug(\"Only the track being published can be inspected\")}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await hL(d,i,n),u=this._sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+ey(12,\"\"),h={appId:i,cid:r,cname:n,deviceId:\"\",elapse:wB.intToLong(Number(c-this._moderationStartTime)),fileSize:d.buffer.byteLength,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:u,sdkVersion:\"4.22.0\",sequence:this._sequence,sid:s,timestamp:AB(c),uid:a,vid:o,service:this._moderationMode,ticket:this._ticket,callbackData:this._extraInfo,vendorConfigs:this._vendor};void 0===this._extraInfo&&delete h.callbackData;const p=XF(h);if(p.byteLength<this._workerMessageLengthLimit){if(Dy(\"SHOW_IMAGE_MODERATION_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?bB(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):bB(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},h);delete e.jpg,Qy.debug(\"[\".concat(this._moderationId,\"] Request message for worker of image moderation service: \"),JSON.stringify(e))}return p}{const t=this.quality*this._qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=EI.CancelToken.source(),this._workerConnection&&this._workerConnection.close(),this._moderationTimer&&window.clearInterval(this._moderationTimer),this._moderationTimer=null,this._uploadTimer&&window.clearTimeout(this._uploadTimer),this._uploadTimer=null,this.connectionState=nw.CLOSED,this.emit(rw.STATE_CHANGE,ow.CLOSED)}}function OB(e){if(av(e.interval,\"interval\",1e3,1/0),e&&e.extraInfo&&e.extraInfo.length>1024)throw new Sb(nv.INVALID_PARAMS,\"config.extraInfo length cannot exceed 1024 bytes\");if(e&&e.vendor&&e.vendor.length>1024)throw new Sb(nv.INVALID_PARAMS,\"config.vendor length cannot exceed 1024 bytes\")}const NB={name:\"ImageModeration\",create:function(e){let{config:t}=e;return OB(t),new wB(t)}};var DB,PB,LB,kB,MB,UB,xB,VB,FB,BB,jB,GB,WB,HB,KB,YB,qB,zB,JB,XB,QB,ZB,$B,ej,tj,ij,nj,rj,oj,sj,aj,cj,dj,lj,uj,hj,pj,_j,Ej,mj,fj;function Tj(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function Sj(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Tj(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Tj(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}hy.setLogger(Qy);let gj=(DB=oA(),PB=oA({argsMap:(e,t)=>{if(!Array.isArray(t)){if(!(t instanceof bP))return[t];t=[t]}return t.map((e=>e?Object(e).toString():\"null\"))}}),LB=oA({argsMap:(e,t)=>(t||(t=[]),Array.isArray(t)||t.trackMediaType!==aP.DATA?(Array.isArray(t)||(t=[t]),t.map((e=>e.getTrackId()))):[t.getChannelId()])}),kB=oA({argsMap:(e,t,i,n)=>[\"object\"==typeof t?t.uid:t,i,n]}),MB=oA({argsMap:(e,t,i)=>[t,i]}),UB=oA({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return[null==t?void 0:t.uid,i]}))}),xB=oA({argsMap:(e,t,i,n)=>[\"object\"==typeof t?t.uid:t,i,n]}),VB=oA({argsMap:(e,t)=>t.map((e=>{let{user:t,mediaType:i}=e;return{uid:null==t?void 0:t.uid,mediaType:i}}))}),FB=oA(),BB=oA(),jB=oA(),GB=oA(),WB=oA(),HB=oA(),KB=oA(),YB=oA(),qB=oA(),zB=oA(),JB=oA(),XB=oA(),QB=oA(),ZB=oA(),$B=oA({argsMap:(e,t)=>[t]}),ej=oA(),tj=oA(),ij=oA(),nj=oA(),rj=oA(),oj=oA(),sj=oA(),aj=oA(),cj=oA({argsMap:(e,t)=>(Array.isArray(t)||(t=[t]),[JSON.stringify(t)])}),dj=oA(),lj=oA(),uj=oA(),hj=oA(),pj=oA(),_j=oA(),Ej=oA({reportResult:!0}),mj=oA(),fj=class extends Sv{get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._p2pChannel.getAllTracks(!0)}get uid(){return this._uid}get channelName(){return this._channelName}get localDataChannels(){return this._p2pChannel.getAllDataChannels()}get mode(){return this._config.mode}get role(){var e;return(null===(e=this._config)||void 0===e?void 0:e.role)||\"audience\"}get codec(){return this._config.codec}get audioCodec(){return this._config.audioCodec||\"opus\"}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}get __className__(){return\"Client\"}constructor(e){let t;if(super(),og(this,\"store\",void 0),og(this,\"_uid\",void 0),og(this,\"_channelName\",void 0),og(this,\"_uintUid\",void 0),og(this,\"_users\",[]),og(this,\"_config\",void 0),og(this,\"_clientId\",void 0),og(this,\"_appId\",void 0),og(this,\"_sessionId\",null),og(this,\"_key\",void 0),og(this,\"_rtmConfig\",{}),og(this,\"_joinInfo\",void 0),og(this,\"_gateway\",void 0),og(this,\"_statsCollector\",void 0),og(this,\"_configDistribute\",void 0),og(this,\"_leaveMutex\",new hy(\"client-leave\")),og(this,\"_publishMutex\",new hy(\"client-publish\")),og(this,\"_renewTokenMutex\",new hy(\"client-renewtoken\")),og(this,\"_subscribeMutex\",new hy(\"client-subscribe\")),og(this,\"_encryptionMode\",\"none\"),og(this,\"_encryptionSecret\",null),og(this,\"_encryptionSalt\",null),og(this,\"_encryptDataStream\",!1),og(this,\"_encryptDataStreamKey\",null),og(this,\"_encryptDataStreamIv\",null),og(this,\"_proxyServer\",void 0),og(this,\"_turnServer\",{servers:[],mode:\"auto\"}),og(this,\"_cloudProxyServerMode\",\"disabled\"),og(this,\"_isDualStreamEnabled\",!1),og(this,\"_defaultStreamFallbackType\",void 0),og(this,\"_lowStreamParameter\",void 0),og(this,\"_streamFallbackTypeCacheMap\",new Map),og(this,\"_remoteStreamTypeCacheMap\",new Map),og(this,\"_axiosCancelSource\",EI.CancelToken.source()),og(this,\"_audioVolumeIndicationInterval\",void 0),og(this,\"_networkQualityInterval\",void 0),og(this,\"_userOfflineTimeout\",void 0),og(this,\"_streamRemovedTimeout\",void 0),og(this,\"_liveTranscodeStreamingClient\",void 0),og(this,\"_liveRawStreamingClient\",void 0),og(this,\"_channelMediaRelayClient\",void 0),og(this,\"_networkQualitySensitivity\",\"normal\"),og(this,\"_p2pChannel\",void 0),og(this,\"_useLocalAccessPoint\",!1),og(this,\"_setLocalAPVersion\",void 0),og(this,\"_joinAndNotLeaveYet\",!1),og(this,\"_numberOfJoinCount\",0),og(this,\"_remoteDefaultVideoStreamType\",void 0),og(this,\"_inspect\",void 0),og(this,\"_moderation\",void 0),og(this,\"_license\",void 0),og(this,\"_pendingPublishedUsers\",[]),og(this,\"ntpAlignErrorCount\",0),og(this,\"remoteInboundOffset\",0),og(this,\"_handleLocalTrackEnable\",((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),og(this,\"_handleLocalTrackDisable\",((e,t,i)=>{this.unpublish(e).then(t).catch(i)})),og(this,\"_handleUserOnline\",(e=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(e.uid,this.channelName))return void Qy.debug(\"[\".concat(e.uid,\"] will be ignored in local\"));this.isStringUID&&\"string\"!=typeof e.uid&&Qy.error(\"[\".concat(this._clientId,\"] StringUID is Mixed with UintUID\"));const t=this._users.find((t=>t.uid===e.uid));if(t)t._trust_in_room_=!0,t._is_pre_created&&(t._is_pre_created=!1,this.safeEmit(Nv.USER_JOINED,t));else{const t=new iV(e.uid,e.uint_id||e.uid);this._users.push(t),Qy.debug(\"[\".concat(this._clientId,\"] user online\"),e.uid),this.safeEmit(Nv.USER_JOINED,t)}})),og(this,\"_handleUserOffline\",(e=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(e.uid,this.channelName))return;const t=this._users.find((t=>t.uid===e.uid));t&&(this._handleRemoveStream(e),this._handleRemoveDataChannels(e),t._audio_pre_subscribed||t._video_pre_subscribed?t._is_pre_created=!0:Fv(this._users,t),this._remoteStreamTypeCacheMap.delete(t.uid),this._streamFallbackTypeCacheMap.delete(t.uid),Qy.debug(\"[\".concat(this._clientId,\"] user offline\"),e.uid,\"reason:\",e.reason),this.safeEmit(Nv.USER_LEAVED,t,e.reason))})),og(this,\"_handleAddAudioOrVideoStream\",((e,t,i,n,r,o,s)=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(t,this.channelName))return;const a=this._users.find((e=>e.uid===t));if(!a)return void Qy.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));Qy.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(a.uid,e,void 0,void 0,void 0,Date.now());const c=\"audio\"===e?a.hasAudio:a.hasVideo;a._uintid||(a._uintid=r||t),\"audio\"===e?a._trust_audio_stream_added_state_=!0:a._trust_video_stream_added_state_=!0,\"audio\"===e?(a._audio_added_=!0,void 0!==i&&(a._audioSSRC=i),void 0!==n&&(a._cname=n),o&&(a._audioOrtc=o)):(a._video_added_=!0,void 0!==i&&(a._videoSSRC=i),void 0!==n&&(a._cname=n),void 0!==s&&(a._rtxSsrcId=s),o&&(a._videoOrtc=o)),(\"audio\"===e?a.hasAudio:a.hasVideo)&&!c&&(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(a.uid,\" published \").concat(e)),this.safeEmit(Nv.USER_PUBLISHED,a,e)),\"video\"===e?sA.onGatewayStream(this._sessionId,tA.ON_ADD_VIDEO_STREAM,iA.ON_ADD_VIDEO_STREAM,{peer:r||t,ssrc:a._videoSSRC}):sA.onGatewayStream(this._sessionId,tA.ON_ADD_AUDIO_STREAM,iA.ON_ADD_AUDIO_STREAM,{peer:r||t,ssrc:a._audioSSRC}),this._p2pChannel.remoteMediaSsrcChanged(a,e,i).then((t=>{if(t&&(Qy.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after rejoin because SSRC id changed.\")),this._p2pChannel instanceof hF))return this._p2pChannel.unsubscribe(a,e,!0).then((()=>this._subscribe(a,e,!0).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())}))))})),this._p2pChannel.hasPendingRemoteMedia(a,e)&&(Qy.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after reconnect.\")),this._subscribe(a,e,!0).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),og(this,\"_handleRemoveStream\",(e=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(e.uid,this.channelName))return;const t=this._users.find((t=>t.uid===e.uid));if(!t)return void Qy.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_stream)\"));Qy.debug(\"[\".concat(this._clientId,\"] stream removed with uid \").concat(e.uid));let i=()=>{};t.hasAudio&&t.hasVideo?i=()=>{Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),this.safeEmit(Nv.USER_UNPUBLISHED,t,\"audio\"),Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),this.safeEmit(Nv.USER_UNPUBLISHED,t,\"video\")}:t.hasVideo?i=()=>{Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),this.safeEmit(Nv.USER_UNPUBLISHED,t,\"video\")}:t.hasAudio&&(i=()=>{Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),this.safeEmit(Nv.USER_UNPUBLISHED,t,\"audio\")}),t._video_pre_subscribed||t._audio_pre_subscribed||(t._trust_audio_stream_added_state_=!0,t._trust_video_stream_added_state_=!0,t._audio_added_=!1,t._video_added_=!1,this._p2pChannel instanceof hF&&this._p2pChannel.unsubscribe(t).then((e=>{if(e)return this._gateway.unsubscribe(e,t.uid)})),t._audioSSRC=void 0,t._videoSSRC=void 0,t._audioOrtc=void 0,t._videoOrtc=void 0,t._rtxSsrcId=void 0),sA.onGatewayStream(this._sessionId,tA.ON_REMOVE_STREAM,iA.ON_REMOVE_STREAM,{peer:e.uint_id||e.uid}),i()})),og(this,\"_handleSetStreamLocalEnable\",((e,t,i)=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(t,this.channelName))return;const n=this._users.find((e=>e.uid===t));if(!n)return void Qy.error(\"[\".concat(this._clientId,\"] can not find target user!(disable_local)\"));Qy.debug(\"[\".concat(this._clientId,\"] local \").concat(e,\" \").concat(i?\"enabled\":\"disabled\",\" with uid \").concat(t));const r=\"audio\"===e?n.hasAudio:n.hasVideo;if(\"audio\"===e){n._trust_audio_enabled_state_=!0;const e=n._audio_enabled_;if(n._audio_enabled_=i,n._audio_enabled_===e)return;{const e=n._audio_enabled_?\"enable-local-audio\":\"disable-local-audio\";Qy.debug(\"[\".concat(this._clientId,\"] user-info-updated, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(Nv.USER_INFO_UPDATED,t,e)}}else{n._trust_video_enabled_state_=!0;const e=n._video_enabled_;if(n._video_enabled_=i,n._video_enabled_===e)return;{const e=n._video_enabled_?\"enable-local-video\":\"disable-local-video\";Qy.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(t,\", msg: \").concat(e)),this.safeEmit(Nv.USER_INFO_UPDATED,t,e)}}const o=\"audio\"===e?n.hasAudio:n.hasVideo;return r!==o?!r&&o?(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" published \").concat(e)),void this.safeEmit(Nv.USER_PUBLISHED,n,e)):(\"video\"===e&&n._videoTrack&&n._videoTrack._destroy(),\"audio\"===e&&n._audioTrack,this._p2pChannel.muteRemote(n,e),Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished \").concat(e)),void this.safeEmit(Nv.USER_UNPUBLISHED,n,e)):void 0})),og(this,\"_handleMuteStream\",((e,t,i)=>{if(Dy(\"BLOCK_LOCAL_CLIENT\")&&uA(e,this.channelName))return;Qy.debug(\"[\".concat(this._clientId,\"] receive mute message\"),e,t,i);const n=this._users.find((t=>t.uid===e));if(!n)return void Qy.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(e));const r=\"audio\"===t?n.hasAudio:n.hasVideo;if(\"audio\"===t){n._trust_audio_mute_state_=!0;const t=n._audio_muted_;if(n._audio_muted_=i,n._audio_muted_===t)return;{const t=n._audio_muted_?\"mute-audio\":\"unmute-audio\";Qy.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(Nv.USER_INFO_UPDATED,e,t)}}else{n._trust_video_mute_state_=!0;const t=n._video_muted_;if(n._video_muted_=i,n._video_muted_===t)return;{const t=n._video_muted_?\"mute-video\":\"unmute-video\";Qy.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),this.safeEmit(Nv.USER_INFO_UPDATED,e,t)}}const o=\"audio\"===t?n.hasAudio:n.hasVideo;if(r!==o){if(!r&&o){return(\"audio\"===t?n._audioSSRC:n._videoSSRC)?(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" published \").concat(t)),void this.safeEmit(Nv.USER_PUBLISHED,n,t)):void Qy.warning(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" receive \").concat(t,\" unmute message  before add stream message, \").concat(t,\" SSRC doesn't exist yet.\"))}\"video\"===t&&n._videoTrack&&!n._video_pre_subscribed&&n._videoTrack._destroy(),\"audio\"===t&&n._audioTrack,this._p2pChannel.muteRemote(n,t),Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" unpublished \").concat(t)),this.safeEmit(Nv.USER_UNPUBLISHED,n,t)}})),og(this,\"_handleP2PLost\",(async e=>{Qy.debug(\"[\".concat(this._clientId,\"] receive p2p lost\"),e),parseInt(e.p2pid,10)===this.store.p2pId?await this._p2pChannel.requestReconnect():Qy.warning(\"[\".concat(this._clientId,\"] P2PLost stream not found\"),e)})),og(this,\"_handleTokenWillExpire\",(()=>{Qy.debug(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeWillExpire\")),this.safeEmit(Nv.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)})),og(this,\"_handleBeforeUnload\",(e=>{\"beforeunload\"===e.type&&void 0!==e.returnValue&&\"\"!==e.returnValue||(this.leave(),Qy.info(\"[\".concat(this._clientId,\"] auto leave onbeforeunload or pagehide\")))})),og(this,\"_handleUpdateNetworkQuality\",(()=>{if(\"normal\"===this._networkQualitySensitivity)return;if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.safeEmit(Nv.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});const e={downlinkNetworkQuality:0,uplinkNetworkQuality:0};e.uplinkNetworkQuality=this._p2pChannel.getUplinkNetworkQuality(),e.downlinkNetworkQuality=this._p2pChannel.getDownlinkNetworkQuality(),this.safeEmit(Nv.NETWORK_QUALITY,e)})),og(this,\"_handleP2PAddAudioOrVideoStream\",((e,t,i,n)=>{const r=this._users.find((e=>e.uid===t));if(!r)return void Qy.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\"));Qy.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),this.store.subscribe(r.uid,e,void 0,void 0,void 0,Date.now());const o=\"audio\"===e?r.hasAudio:r.hasVideo;\"audio\"===e?r._trust_audio_stream_added_state_=!0:r._trust_video_stream_added_state_=!0,\"audio\"===e?(r._audio_added_=!0,void 0!==i&&(r._audioSSRC=i),void 0!==n&&(r._audioMid=n)):(r._video_added_=!0,void 0!==i&&(r._videoSSRC=i),void 0!==n&&(r._videoMid=n)),(\"audio\"===e?r.hasAudio:r.hasVideo)&&!o&&(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(r.uid,\" published \").concat(e)),this.safeEmit(Nv.USER_PUBLISHED,r,e)),this._p2pChannel.hasPendingRemoteMedia(r,e)&&(Qy.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(r.uid,\" after reconnect.\")),this._subscribe(r,e,!0).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString())})))})),this._config=e,this._clientId=ey(5,\"client-\"),this.store=new ky(e.codec,e.audioCodec,e.mode,this._clientId),this.store.clientCreated(),e.proxyServer&&this.setProxyServer(e.proxyServer,!0),e.turnServer&&this.setTurnServer(e.turnServer,!0),Qy.info(\"[\".concat(this._clientId,\"] Initializing AgoraRTC client v\").concat(vy,\" build: \").concat(wy,\", mode: \").concat(this.mode,\", codec: \").concat(this.codec)),e.clientRoleOptions)try{Ov(e.clientRoleOptions),t=Object.assign({},e.clientRoleOptions)}catch(e){Qy.warning(\"[\".concat(this._clientId,\"] \").concat(e.toString()))}this._statsCollector=new yV(this.store),this._statsCollector.onStatsException=(e,t,i)=>{Qy.debug(\"[\".concat(this._clientId,\"] receive exception msg, code: \").concat(e,\", msg: \").concat(t,\", uid: \").concat(i)),this.safeEmit(Nv.EXCEPTION,{code:e,msg:t,uid:i})},this._statsCollector.onUploadPublishDuration=(e,t,i,n)=>{const r=this._users.find((t=>t.uid===e));r&&sA.peerPublishStatus(this._sessionId,{subscribeElapse:n,audioPublishDuration:t,videoPublishDuration:i,peer:r._uintid})},this.store.useP2P=\"p2p\"===e.mode,this._gateway=new ZM(this.store,{clientId:this._clientId,mode:this.mode,codec:this.codec,websocketRetryConfig:e.websocketRetryConfig||_y,httpRetryConfig:e.httpRetryConfig||_y,forceWaitGatewayResponse:void 0===e.forceWaitGatewayResponse||e.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:e.role,clientRoleOptions:t}),this._configDistribute=new VU,this.store.useP2P?(this._p2pChannel=new RV(this.store,this._statsCollector),this._handleP2PEvents()):this._p2pChannel=new hF(this.store,this._statsCollector),this._handleP2PChannelEvents(),this._handleGatewayEvents(),this._handleGatewaySignalEvents()}async joinMeta(e,t,i,n,r){let o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],s=arguments.length>6&&void 0!==arguments[6]&&arguments[6];Ny(\"JOIN_GATEWAY_USE_443PORT_ONLY\",o),Ny(\"JOIN_GATEWAY_USE_DUAL_DOMAIN\",s);const a=this._gateway.signal.websocket;return a instanceof Aw&&(a.use443PortOnly=o,a.tryDoubleDomain=s),async function(e,t,i){TI.get(e)||TI.set(e,[]),SI.get(e)||SI.set(e,t),gI.get(e)||gI.set(e,0);const n=TI.get(e),r=SI.get(e);if(!n||!r)throw new Error(\"concurrent: deferQueue or maxConcurrency is null\");if(gI.get(e)===r){const e=fI();n.push(e),await e.promise}gI.set(e,gI.get(e)+1);for(var o=arguments.length,s=new Array(o>3?o-3:0),a=3;a<o;a++)s[a-3]=arguments[a];const c=await i(...s);return gI.set(e,gI.get(e)-1),gI.get(e)===r-1&&n.length>0&&(n[0].resolve(),n.shift()),0===gI.get(e)&&(TI.set(e,[]),SI.set(e,0),gI.set(e,0)),c}(\"client.join\",Dy(\"JOIN_MAX_CONCURRENCY\"),this.join.bind(this),e,t,i,n,r)}async join(e,t,i,n,r){const o=++this._numberOfJoinCount;this.store.joinStart(),n&&(this.store.uid=n);const s=\"HTTPS\"===(Ty||Ty||(Ty=(window.location.protocol.split(\":\")[0]||\"\").toUpperCase(),Ty)),a=Iy()?window.isSecureContext:\"Browser Not Support\";if(!Iy()&&!s||!window.isSecureContext){const e=\"The website must be running in a secure context (About secure context: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts ), otherwise the media collection will be restricted by the browser\";Qy.warning(e)}\"DISCONNECTED\"===this.connectionState&&(this.store.avoidJoinStart=Math.round(Date.now()),Qy.debug(\"[\".concat(this._clientId,\"] set avoidJoinStart to \").concat(this.store.avoidJoinStart))),sA.setAppId(e);try{if(!i&&null!==i)throw new Sb(nv.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&dv(i,\"token\",1,2047),dv(e,\"appid\",1,2047),gb(t),n&&Rb(n),r&&dv(r,\"optionalInfo\",1,2047)}catch(r){throw sA.reportApiInvoke(ty(),{name:Cv.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:Iv.TRACER}).onError(r),r}if(this._leaveMutex.isLocked){Qy.debug(\"[\".concat(this._clientId,\"] join: waiting leave operation\"));(await this._leaveMutex.lock())(),Qy.debug(\"[\".concat(this._clientId,\"] join: continue\"))}if(this._joinAndNotLeaveYet=!0,\"DISCONNECTED\"!==this.connectionState){const r=new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already in connecting/connected state\"));throw sA.reportApiInvoke(ty(),{name:Cv.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:Iv.TRACER}).onError(r),r}this._gateway.state=\"CONNECTING\";const c=await GF({appId:e,cname:t,uid:n,stringUid:\"string\"==typeof n?n:void 0,token:i||e,cloudProxyServer:this._cloudProxyServerMode});if(!this._joinAndNotLeaveYet)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));const d=(null==c?void 0:c.sid)||ty();Qy.info(\"[\".concat(this._clientId,\"] start join channel \").concat(t,\", join number: \").concat(o)),this._sessionId||(this._sessionId=d,this.store.sessionId=this._sessionId);const l=sA.reportApiInvoke(d,{name:Cv.JOIN,options:[e,t,i,n],states:{isHttps:s,isSecureContext:a},tag:Iv.TRACER}),u=Sj(Sj({},this._rtmConfig),{},{clientId:this._clientId,appId:e,sid:this._sessionId,cname:t,uid:\"string\"!=typeof n?n:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:i||e,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:r,license:this._license,useLocalAccessPoint:this._useLocalAccessPoint,preload:!!c},void 0!==this._remoteDefaultVideoStreamType&&{defaultVideoStream:this._remoteDefaultVideoStreamType});if(this._useLocalAccessPoint&&(u.setLocalAPVersion=this._setLocalAPVersion),\"string\"==typeof n&&(u.stringUid=n,this._uintUid?(u.uid=this._uintUid,this._uintUid=void 0):u.uid=0),\"none\"!==this._encryptionMode&&this._encryptionSecret){if(u.aesmode=this._encryptionMode,u.aespassword=await(async e=>{const t=function(e){const t=window.atob(\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCMnXAHkKIGAM+x4N22gCI+Wyu\\nSTM9ztkT3uYslTT2PuKmZfPzhH6kVdO7PTjGCOZnAsyb3oTtWat0KcxQ4jxvqQV+\\nHvYl3iI1Yd4vl2c3qRMJPLtRDfNxa2Mcxgq7e9aEUibzdd0st+OJAy3tOj/Y0aVy\\nxQiYDz3vqa6bP29adwIDAQAB\"),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}(),i=await window.crypto.subtle.importKey(\"spki\",t,{name:\"RSA-OAEP\",hash:\"SHA-256\"},!0,[\"encrypt\"]),n=mv(e),r=await window.crypto.subtle.encrypt({name:\"RSA-OAEP\"},i,n);return function(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}(new Uint8Array(r))})(this._encryptionSecret),!this._joinAndNotLeaveYet)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this._encryptionSalt&&(u.aessalt=this._encryptionSalt)}if(this._encryptDataStream&&(\"aes-128-gcm2\"===this._encryptionMode||\"aes-256-gcm2\"===this._encryptionMode))if(this._encryptionSalt&&this._encryptionSecret)if(window.crypto.subtle){const e=new TextEncoder,t=Dy(\"USE_PURE_ENCRYPTION_MASTER_KEY\")?e.encode(u.appId+this._encryptionSecret+this._encryptionSecret):e.encode(u.appId+u.cname+this._encryptionSecret);this._encryptDataStreamIv=await async function(e,t,i){const n=await window.crypto.subtle.importKey(\"raw\",t,\"PBKDF2\",!1,[\"deriveBits\",\"deriveKey\"]),r=\"aes-128-gcm2\"===e?128:256,o=await window.crypto.subtle.deriveBits({name:\"PBKDF2\",iterations:Vy,hash:\"SHA-256\",salt:i},n,r+xy);return new Uint8Array(o).subarray(r/8)}(this._encryptionMode,t,Yv(this._encryptionSalt)),this._encryptDataStreamKey=await async function(e,t,i){const n=await window.crypto.subtle.importKey(\"raw\",t,\"PBKDF2\",!1,[\"deriveBits\",\"deriveKey\"]),r=\"aes-128-gcm2\"===e?128:256;return await window.crypto.subtle.deriveKey({name:\"PBKDF2\",iterations:Vy,hash:\"SHA-256\",salt:i},n,{name:\"AES-GCM\",length:r},!0,[\"encrypt\",\"decrypt\"])}(this._encryptionMode,t,Yv(this._encryptionSalt))}else a?Qy.warning(\"[\".concat(this._clientId,\"] encrypt datastream must be running in a secure context, fallback to plain data stream\")):Qy.warning(\"[\".concat(this._clientId,\"] current browser do not support WebCrypto ,fallback to plain data stream\")),this._encryptDataStream=!1;else this._encryptDataStream=!1,Qy.debug(\"[\".concat(this._clientId,\"] no salt / secret, cannot support encrypt data stream, fallback to plain data stream\"));this._startSession(this._sessionId,{channel:t,appId:e,stringUid:u.stringUid});const h=this._sessionId;setTimeout((()=>{\"CONNECTING\"===this.connectionState&&h===this._sessionId&&sA.joinChannelTimeout(this._sessionId,5)}),5e3);try{var p;let n;const r=u.cloudProxyServer;if(Dn(p=[\"proxy3\",\"proxy4\",\"proxy5\"]).call(p,r)){const e=Dy(\"PROXY_SERVER_TYPE3\");Array.isArray(e)?u.proxyServer=e[0]:u.proxyServer=e}if(sA.setProxyServer(u.proxyServer),Qy.setProxyServer(u.proxyServer),this.store.requestAPStart(),c){if(Qy.debug(\"[\".concat(this._clientId,\"] get serverInfo Success from Preload Cache \").concat(u.stringUid?\", \".concat(u.stringUid,\" => \").concat(c.intUid):\"\",\" \")),u.stringUid&&!u.uid&&(u.uid=c.intUid),n={gatewayInfo:c.ap.gatewayInfo},Dy(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")&&\"auto\"===u.turnServer.mode)if(0===c.ap.proxyInfo.addresses.length)Qy.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\");else{const e=(await Vw(c.ap.proxyInfo,c.ap.gatewayInfo.uid)).map((e=>({turnServerURL:e.address,tcpport:e.tcpport||cA.tcpport,udpport:e.udpport||cA.udpport,username:e.username||cA.username,password:e.password||cA.password,forceturn:!1,security:!0})));u.turnServer={mode:\"manual\",servers:e}}YF(c,u.stringUid)}else{if(u.stringUid&&!u.uid){let e;[e,n]=await Gh.all([OU(u.stringUid,u,this._axiosCancelSource.token,this._config.httpRetryConfig||_y,this.store),wU(u,this._axiosCancelSource.token,this._config.httpRetryConfig||_y,!0,this.store)]),Qy.debug(\"[\".concat(this._clientId,\"] getUserAccount Success \").concat(u.stringUid,\" => \").concat(e)),u.uid=e,n.gatewayInfo.uid=e,n.gatewayInfo.res.uid=e}else n=await wU(u,this._axiosCancelSource.token,this._config.httpRetryConfig||_y,!0,this.store);if(!this._joinAndNotLeaveYet)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"))}this.store.requestAPEnd(),setTimeout((()=>{this._configDistribute.startGetConfigDistribute(u,this._axiosCancelSource.token),this._configDistribute.on(Wb.UPDATE_BITRATE_LIMIT,(e=>{this._p2pChannel.updateBitrateLimit(e)}))}),0),this._key=i||e;const o=n.gatewayInfo,s=u.uid?u.uid:o.uid;this._joinInfo=Sj(Sj({},u),{},{cid:o.cid,uid:s,vid:o.vid,apResponse:o.res,apGatewayAddress:o.apGatewayAddress,uni_lbs_ip:o.uni_lbs_ip,gatewayAddrs:o.gatewayAddrs}),this.store.intUid=s;const a=await this._joinGateway();if(!this._joinAndNotLeaveYet)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));l.onSuccess(a),this._appId=e,this._channelName=u.cname,this._uid=a,this.store.uid=a,setTimeout((()=>{this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2e3),window.addEventListener(PI()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._statsCollector.startUpdateStats()}),0);const d=u.stringUid?\"string uid: \".concat(u.stringUid,\",uid: \").concat(u.uid):\"uid: \".concat(this._uid);return Qy.info(\"[\".concat(this._clientId,\"] Joining channel success: channel: \").concat(t,\",\").concat(d)),setTimeout((()=>{Qy.startUpload()}),5e3),this.store.joinEnd(),_=this,Dn(lA).call(lA,_)||lA.push(_),\"disabled\"===this._cloudProxyServerMode&&MD().supportWebCrypto&&Dy(\"ENABLE_PRELOAD\")&&HF(this._joinInfo),a}catch(e){const t=Array.isArray(e)?e[0]:e;throw t&&t.code===nv.OPERATION_ABORTED?Qy.warning(\"[\".concat(this._clientId,\"] join number: \").concat(o,\", Joining channel failed, rollback\"),t):Qy.error(\"[\".concat(this._clientId,\"] join number: \").concat(o,\", Joining channel failed, rollback\"),t),t.code!==nv.OPERATION_ABORTED&&this._numberOfJoinCount===o&&(this._gateway.state=\"DISCONNECTED\",this._reset()),l.onError(t),t}var _}_joinGateway(){if(!this._joinInfo||!this._key)throw new Sb(nv.INVALID_OPERATION);return this._gateway.join(this._joinInfo,this._key,!(\"disabled\"!==this._joinInfo.cloudProxyServer||this._joinInfo.proxyServer||!Dy(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\")))}async leave(){Qy.info(\"[\".concat(this._clientId,\"] Leaving channel\")),window.removeEventListener(PI()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._reset(),function(e){const t=lA.indexOf(e);-1!==t&&lA.splice(t,1)}(this),this._statsCollector.stopUpdateStats();const e=await this._leaveMutex.lock();if(\"DISCONNECTED\"===this.connectionState)return Qy.info(\"[\".concat(this._clientId,\"] Leaving channel repeated, success\")),void e();await this._gateway.leave(\"CONNECTED\"!==this.connectionState),Qy.info(\"[\".concat(this._clientId,\"] Leaving channel success\")),this._joinAndNotLeaveYet=!1,this.store.resetJoinChannelServiceRecords(),e()}async publish(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!Array.isArray(e)){if(!(e instanceof bP))return this._publishDataChannel(e);e=[e]}if(0===e.length)throw new Sb(nv.INVALID_PARAMS,\"param list is empty\");const i=e;if(\"audience\"===this._gateway.role)throw new Sb(nv.INVALID_OPERATION,\"audience can not publish stream\");for(const e of i){if(!(e instanceof bP))throw new Sb(nv.INVALID_PARAMS,\"parameter is not local track\");if(!e._enabled&&t)throw new Sb(nv.TRACK_IS_DISABLED,\"can not publish a disabled track: \".concat(e.getTrackId()))}Qy.info(\"[\".concat(this._clientId,\"] Publishing tracks, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))));const n=await this._publishMutex.lock();await this._configDistribute.awaitConfigDistributeComplete(),t&&i.forEach((e=>{const t=this._configDistribute.getBitrateLimit();e instanceof Hk&&t&&e.setBitrateLimit(t.uplink)}));try{await this._publishHighStream(i),Qy.info(\"[\".concat(this._clientId,\"] Publish success, id \").concat(i.map((e=>\"\".concat(e.getTrackId(),\" \")))))}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] publish error\"),e.toString()),e}finally{n()}}async _publishDataChannel(e){av(e.id,\"id\",0,65535,!0),ov(e.ordered,\"ordered\"),dv(e.metadata,\"metadata\",0,512),Qy.info(\"[\".concat(this._clientId,\"] Publishing datachannels, id \").concat(e.id));const t=await this._publishMutex.lock();try{if(-1!==this._p2pChannel.getAllDataChannels().findIndex((t=>t.id===e.id)))throw new Sb(nv.INVALID_PARAMS,\"Invalid id: \".concat(e.id,\". If you want to republish the datachannel, unpublish first\"));if(!this._joinInfo||void 0===this._uid)throw new Sb(nv.INVALID_OPERATION,\"Can't publish datachannel, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"can not publish datachannel in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&Dy(\"FORCE_TURN\")&&!Dy(\"TURN_ENABLE_TCP\")&&!Dy(\"TURN_ENABLE_UDP\"))throw new Sb(nv.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");const i=function(e){return fF(e,!1)}(e),n=await this._p2pChannel.publishDataChannel([i]);if(n.length>0){if(\"number\"!=typeof i._originDataChannelId)throw Qy.error(\"[\".concat(this._clientId,\"] can not publish with mediaType datachannel, cannot get RTCDatachannel id\")),new Sb(nv.CREATE_DATACHANNEL_ERROR);try{await Gh.all(n.map((e=>this._uid&&this._gateway.publishDataChannel(this._uid,e,!0)))),await i._waitTillOpen()}catch(e){if(e.code!==nv.DISCONNECT_P2P)throw e}}return Qy.info(\"[\".concat(this._clientId,\"] Publish dataChannels success, id \").concat(i.id)),i}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] publish datachannels error\"),e.toString()),e}finally{t()}}async unpublish(e){if(!this._joinInfo||void 0===this._uid)throw new Sb(nv.INVALID_OPERATION,\"Can't unpublish stream, haven't joined yet!\");let t=[];if(e)if(Array.isArray(e))t=e;else{if(!(e instanceof bP))return this._unpublishDataChannel([e]);t=[e]}else this.store.useP2P||await this._unpublishDataChannel(),t=this._p2pChannel.getAllTracks(!0);Qy.info(\"[\".concat(this._clientId,\"] Unpublish tracks, tracks \").concat(t.map((e=>\"\".concat(e.getTrackId(),\" \"))),\" \"));const i=await this._publishMutex.lock();try{if(this._p2pChannel instanceof RV){const e=await this._p2pChannel.unpublish(t);e&&await this._gateway.sendExtensionMessage(sw.UNPUBLISH,{unpubMsg:e},!0)}else{const e=await this._p2pChannel.unpublish(t);e&&await this._gateway.unpublish(e,this._uid),Qy.info(\"[\".concat(this._clientId,\"] Unpublish success,tracks \").concat(t.map((e=>\"\".concat(e.getTrackId())))))}}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] unpublish error\"),e.toString()),e}finally{i&&i()}}async _unpublishDataChannel(e){void 0!==e&&0!==e.length||(e=this._p2pChannel.getAllDataChannels()),Qy.info(\"[\".concat(this._clientId,\"] Unpublish datachannels, datachannels \").concat(e.map((e=>\"\".concat(e.id,\" \"))),\" \"));const t=await this._publishMutex.lock();try{const i=await this._p2pChannel.unpublishDataChannel(e);i&&await this._gateway.unpublishDataChannel(i),Qy.info(\"[\".concat(this._clientId,\"] Unpublish dataChannel success,dataChannel \").concat(e.map((e=>\"\".concat(e.id)))))}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] unpublish dataChannel error\"),e.toString()),e}finally{t&&t()}}async subscribe(e,t,i){if(!(e instanceof iV)){const t=this.remoteUsers.find((t=>t.uid===e));if(!t)throw new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");e=t}return\"datachannel\"===t?this._subscribeDataChannel(e,i):this._subscribe(e,t)}async presubscribe(e,t){if(sv(t,\"mediaType\",[\"audio\",\"video\"]),this._p2pChannel instanceof RV)throw new Sb(nv.INVALID_OPERATION,\"can't presub at p2p mode\");if(!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"can't presub when not join\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"can't presub in \".concat(this.connectionState,\" state\"));const i=t===Yb.AUDIO,n=t===Yb.VIDEO,r=await this._subscribeMutex.lock();try{const{ssrcId:o,ortc:s,rtxSsrcId:a,cname:c,uint_id:d}=await this._gateway.presubscribe(e,t,!0);if(null==o)throw new Sb(nv.UNEXPECTED_RESPONSE,\"no ssrc id\");let l=this._users.find((t=>t.uid===e));l||(l=new iV(e,d||e),l._is_pre_created=!0,this._users.push(l)),c&&(l._cname=c),l._uintid||(l._uintid=d||e),i&&(l._audioSSRC=o,l._audio_pre_subscribed=!0,s&&(l._audioOrtc=s)),n&&(l._videoSSRC=o,l._video_pre_subscribed=!0,s&&(l._videoOrtc=s),null!=a&&(l._rtxSsrcId=a)),Qy.info(\"[\".concat(this._clientId,\"] presub succeed ssrc: \").concat(o)),await this._p2pChannel.subscribe(l,t,o,a,s);const u=i?l._audioTrack:l._videoTrack;if(!u)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find remote track in user\");return i&&(l._trust_audio_stream_added_state_=!0,l._audio_added_=!0),n&&(l._trust_video_stream_added_state_=!0,l._video_added_=!0),u}catch(t){throw Qy.error(\"[\".concat(this._clientId,\"] presub user \").concat(e,\" error\"),t),t}finally{r()}}async _subscribeDataChannel(e,t){var i;if(av(t,\"channelId\",0,65535,!0),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe datachannel, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe datachannel in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n)throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");if(!e.hasAudio&&!e.hasVideo&&0===e._dataChannels.length)throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),new Sb(nv.INVALID_REMOTE_USER,\"user is not published\");const r=null===(i=e._dataChannels)||void 0===i?void 0:i.find((e=>e.id===t));if(!r)throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, remote datachannel is not published\")),new Sb(nv.REMOTE_USER_IS_NOT_PUBLISHED);const o=await this._subscribeMutex.lock();Qy.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: datachannel\"));try{const t=await this._p2pChannel.subscribeDataChannel(e,[r]);if(t&&Dn(t).call(t,r.id))try{var s;if(\"number\"!=typeof r._originDataChannelId)throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType datachannel, cannot get RTCDatachannel\")),new Sb(nv.CREATE_DATACHANNEL_ERROR);const t={id:r.id,datachannelId:r._originDataChannelId,ordered:r.ordered,maxRetransmits:r.maxRetransmits,metadata:null!==(s=r.metadata)&&void 0!==s?s:\"\"};await this._gateway.subscribeDataChannel(e.uid,t,!0),await r._waitTillOpen()}catch(t){if((null==t?void 0:t.code)!==nv.WS_ABORT)throw await this._p2pChannel.unsubscribeDataChannel(e,[r]),t;await this._p2pChannel.unsubscribeDataChannel(e,[r]),this._p2pChannel.setPendingRemoteDataChannel(e,r.id)}return Qy.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: datachannel\")),r}finally{o()}}async _p2pSubscribe(e,t,i){if(sv(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not published\");throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!i&&(\"audio\"===t&&!e.hasAudio||\"video\"===t&&!e.hasVideo)){const i=new Sb(nv.REMOTE_USER_IS_NOT_PUBLISHED);throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}const r=await this._subscribeMutex.lock();Qy.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{const i=\"audio\"===t?e._audioSSRC:e._videoSSRC,n=\"audio\"===t?e._audioMid:e._videoMid;this.store.subscribe(e.uid,t,Date.now()),this._p2pChannel instanceof RV&&await this._p2pChannel.subscribe(e,t,i,n)}catch(e){throw e}Qy.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{Qy.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw Qy.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{r()}}async _subscribe(e,t,i){if(this._p2pChannel instanceof RV)return this._p2pSubscribe(e,t);if(sv(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const n=this._users.find((t=>t===e));if(!n){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),t}if(!e.hasAudio&&!e.hasVideo){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not published\");throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),t}if(!(i||(\"audio\"!==t||e.hasAudio&&void 0!==e._audioSSRC)&&(\"video\"!==t||e.hasVideo&&void 0!==e._videoSSRC))){const i=new Sb(nv.REMOTE_USER_IS_NOT_PUBLISHED);throw Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),i}let r=\"audio\"===t?e._audioSSRC:e._videoSSRC,o=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,a={stream_type:\"audio\"===t?Yb.AUDIO:Yb.VIDEO,ssrcId:r};const c=await this._subscribeMutex.lock();Qy.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t));try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{const i=\"audio\"===t?e._audioSSRC:e._videoSSRC;void 0!==i&&i!==r&&(r=i,o=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,a={stream_type:\"audio\"===t?Yb.AUDIO:Yb.VIDEO,ssrcId:r}),jU.markSubscribeStart(this.store.clientId,r),this.store.subscribe(e.uid,t,Date.now()),await this._p2pChannel.subscribe(e,t,r,s,o);try{this._p2pChannel.isPreSubScribe(r)||await this._gateway.subscribe(e.uid,a,!0)}catch(i){if((null==i?void 0:i.code)!==nv.WS_ABORT)throw await this._p2pChannel.unsubscribe(e,t),i;await this._p2pChannel.unsubscribe(e,t,!0),this._p2pChannel.setPendingRemoteMedia(e,t)}this.store.subscribe(e.uid,t,void 0,Date.now()),this._p2pChannel.reportSubscribeEvent(!0,null,e,t)}catch(i){throw this._p2pChannel.reportSubscribeEvent(!1,null==i?void 0:i.code,e,t),i}Qy.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch((e=>{Qy.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e)}));const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find remote track in user object\");return i}catch(t){throw Qy.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),t),t}finally{c()}}async massSubscribe(e){if(lv(e,\"subscribeList\"),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream, not joined\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));const t=Date.now(),i=new Map,n=await this._subscribeMutex.lock();Qy.info(\"[\".concat(this._clientId,\"]start massSubscribe user \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \")));const r=(e=[...e]).map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i}})),o=await this._p2pChannel.globalLock();try{var s;for(let t=e.length-1;t>=0;t--){const n=e[t],{user:o,mediaType:s}=n;if(sv(s,\"mediaType\",[\"audio\",\"video\"]),!o){const e=new Sb(nv.INVALID_PARAMS,\"user property does not exist in subscribeList item\");throw Qy.error(\"[\".concat(this._clientId,\"] user property does not exist in subscribeList item\")),e}const a=this._users.find((e=>e===o));if(!a){const i=new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");Qy.error(\"[\".concat(this._clientId,\"] can not massSubscribe \").concat(o.uid,\", this user is not in the channel\")),r[t].error=i,e.splice(t,1);continue}if(\"audio\"===s&&(!o.hasAudio||void 0===o._audioSSRC)||\"video\"===s&&(!o.hasVideo||void 0===o._videoSSRC)){const i=new Sb(nv.REMOTE_USER_IS_NOT_PUBLISHED);Qy.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(o.uid,\" with mediaType \").concat(s,\", remote user is not published\")),r[t].error=i,e.splice(t,1);continue}const c=Vb.Video|Vb.LwoVideo,d=i.get(o);if(d){if(\"video\"===s?d&c:d&Vb.Audio){e.splice(t,1),Qy.warning(\"[\".concat(this._clientId,\"] repeat massSubscribe user:\").concat(o.uid,\", mediaType:\").concat(s,\" twice\"));continue}i.set(o,d|(\"video\"===s?c:Vb.Audio))}else i.set(o,\"video\"===s?c:Vb.Audio)}for(let t=e.length-1;t>=0;t--){const n=e[t],{user:r,mediaType:o}=n,s=Vb.Video|Vb.LwoVideo;if(this._p2pChannel.hasRemoteMedia(r,o)){await this._p2pChannel.unmuteRemoteNoLock(r,o);const n=i.get(r);i.set(r,\"video\"===o?n^s:n^Vb.Audio),e.splice(t,1)}}this.store.massSubscribe(e.map((e=>({userId:e.user.uid,type:e.mediaType}))),t);let a=Jn(s=Array.from(i.entries())).call(s,((e,t)=>{let[i,n]=t;if(0===n)return e;const r={stream_id:i.uid,stream_type:n};return n&Vb.Audio&&(r.audio_ssrc=i._audioSSRC),n&Vb.Video&&(r.video_ssrc=i._videoSSRC),e.push(r),e}),[]);try{e.length>0&&await this._p2pChannel.massSubscribeNoLock(e.map((e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i,ssrcId:i===Yb.VIDEO?t._videoSSRC:t._audioSSRC,rtxSsrcId:i===Yb.VIDEO?t._rtxSsrcId:void 0}})));const i=new Map;if(a=a.filter((e=>e.video_ssrc&&!this._p2pChannel.isPreSubScribe(e.video_ssrc)||e.audio_ssrc&&!this._p2pChannel.isPreSubScribe(e.audio_ssrc)||!e.video_ssrc&&!e.audio_ssrc)),a.length>0){const e=await this._gateway.subscribeAll(a,!0);((null==e?void 0:e.users)||[]).forEach((e=>{let{stream_id:t,video_error_code:n,audio_error_code:r,error_code:o}=e;(n||r||o)&&i.set(t,{video_error_code:n,audio_error_code:r,error_code:o})}))}if(Array.from(i.entries()).length>0){const e=[];Array.from(i.entries()).forEach((t=>{let[i,n]=t;const r=this.remoteUsers.find((e=>e.uid===i));if(r){let t;n.error_code||n.video_error_code&&n.audio_error_code?t=void 0:n.video_error_code?t=Yb.VIDEO:n.audio_error_code&&(t=Yb.AUDIO),e.push({user:r,mediaType:t})}})),e.length>0&&await this._p2pChannel.massUnsubscribeNoLock(e)}for(const e of r){const t=i.get(e.user.uid);if(t){const i=t.error_code||\"audio\"===e.mediaType&&t.audio_error_code||\"video\"===e.mediaType&&t.video_error_code;if(i){const t=pw(i);Qy.error(\"user:\".concat(e.user.uid,\" mediaType:\").concat(e.mediaType,\" has massSubscribe error \").concat(t.desc)),e.error=new Sb(nv.SUBSCRIBE_FAILED,\"code \".concat(i,\": \").concat(t.desc))}}e.error||(\"video\"===e.mediaType?e.track=e.user.videoTrack:e.track=e.user.audioTrack)}return this.store.massSubscribe(r.filter((e=>!e.error)).map((e=>({userId:e.user.uid,type:e.mediaType}))),void 0,Date.now()),r.forEach((e=>{var i;sA.subscribe(this.store.sessionId,{succ:!!e.error,ec:(null===(i=e.error)||void 0===i?void 0:i.code)||null,video:e.mediaType===Yb.VIDEO,audio:e.mediaType===Yb.AUDIO,peerid:e.user.uid,subscribeRequestid:e.mediaType===Yb.VIDEO?e.user._videoSSRC:e.user._audioSSRC,p2pid:this.store.p2pId,eventElapse:Math.floor(performance.now()-t),preSsrc:this._p2pChannel.isPreSubScribe(e.user._videoSSRC)},!0)})),Qy.info(\"[\".concat(this._clientId,\"] massSubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)})).join(\"; \"))),r}catch(t){throw await this._p2pChannel.massUnsubscribeNoLock(e),t}}finally{o(),n()}}async unsubscribe(e,t,i){if(!(e instanceof iV)){const t=this.remoteUsers.find((t=>t.uid===e));if(!t)throw new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");e=t}if(t||this.store.useP2P){if(\"datachannel\"===t)return this._unsubscribeDataChannel(e,i)}else await this._unsubscribeDataChannel(e,i);if(t&&sv(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't unsubscribe stream, haven't joined yet!\");const n=this._users.find((t=>t===e));if(!n){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");throw Qy.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}Qy.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: \").concat(t));const r=await this._subscribeMutex.lock();try{if(this._p2pChannel instanceof RV)await this._p2pChannel.unsubscribe(e,t);else{const i=await this._p2pChannel.unsubscribe(e,t);i&&await this._gateway.unsubscribe(i,e.uid),t&&\"audio\"!==t||(e._audio_pre_subscribed=!1),t&&\"video\"!==t||(e._video_pre_subscribed=!1),e._is_pre_created&&Fv(this._users,e),Qy.info(\"[\".concat(this._clientId,\"] unsubscribe success uid: \").concat(e.uid,\", mediaType: \").concat(t))}}catch(t){if(t.code===nv.DISCONNECT_P2P)return void Qy.warning(\"disconnecting p2p, abort unsubscribe request.\");throw Qy.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}finally{r()}}async _unsubscribeDataChannel(e,t){if(t&&av(t,\"id\",0,65535,!0),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't unsubscribe datachannel, haven't joined yet!\");const i=this._users.find((t=>t===e));if(!i){const t=new Sb(nv.INVALID_REMOTE_USER,\"user is not in the channel\");throw Qy.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),t}let n;if(\"number\"==typeof t){const i=e._dataChannels.find((e=>e.id===t));i&&(n=[i])}else n=e._dataChannels;if(void 0===n){const i=new Sb(nv.REMOTE_USER_IS_NOT_PUBLISHED);throw Qy.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\" with channelId \").concat(t,\", remote datachannel is not published\")),i}Qy.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(n.map((e=>e.id))));try{const t=await this._p2pChannel.unsubscribeDataChannel(e,n);t&&await this._gateway.unsubscribeDataChannel(t,e.uid),Qy.info(\"[\".concat(this._clientId,\"] unsubscribe datachannel success uid: \").concat(e.uid,\", mediaType: datachannel, ids: \").concat(t))}catch(t){if(t.code===nv.DISCONNECT_P2P)return void Qy.warning(\"disconnecting p2p, abort unsubscribe request.\");throw Qy.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),t.toString()),t}}async massUnsubscribe(e){if(lv(e,\"unsubscribeList\"),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't unsubscribeAll stream, haven't joined yet!\");Qy.info(\"[\".concat(this._clientId,\"] start massUnsubscribe \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join())),e=[...e];const t=new Map;for(let i=e.length-1;i>=0;i--){const{user:n,mediaType:r}=e[i];if(!n){const e=new Sb(nv.INVALID_PARAMS,\"user property does not exist in unsubscribeList item\");throw Qy.error(\"[\".concat(this._clientId,\"] user property does not exist in unsubscribeList item\")),e}sv(r,\"mediaType\",[\"video\",\"audio\",void 0]);const o=this._users.find((e=>e===n));if(!o){Qy.warning(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(n.uid,\", user is not in the channel\")),e.splice(i,1);continue}const s=Vb.Video|Vb.LwoVideo;if(t.has(n)){const o=t.get(n);let a;switch(r){case\"video\":a=o&s;break;case\"audio\":a=o&Vb.Audio;break;default:a=o&(Vb.Audio|s)}if(a){Qy.warning(\"[\".concat(this._clientId,\"] repeat massUnsubscribe user:\").concat(n.uid,\",mediaType:\").concat(r,\" twice.\")),e.splice(i,1);continue}r?\"audio\"===r?t.set(n,o|Vb.Audio):\"video\"===r&&t.set(n,o|s):t.set(n,o|Vb.Audio|s)}else r?\"audio\"===r?t.set(n,Vb.Audio):\"video\"===r&&t.set(n,s):t.set(n,Vb.Audio|s)}try{const t=await this._p2pChannel.massUnsubscribe(e);t&&await this._gateway.massUnsubscribe(t),Qy.info(\"[\".concat(this._clientId,\"] massUnsubscribe success \").concat(e.map((e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")})).join()))}catch(e){if(e.code===nv.DISCONNECT_P2P)return void Qy.warning(\"[\".concat(this._clientId,\"] disconnecting p2p, abort unsubscribe request.\"));throw Qy.error(\"[\".concat(this._clientId,\"] massUnsubscribe error\"),e.toString()),e}}async setLowStreamParameter(e){!function(e){if(!e)throw new rv(nv.INVALID_PARAMS);uv(e.width)||cv(e.width,\"streamParameter.width\"),uv(e.height)||cv(e.height,\"streamParameter.height\"),uv(e.framerate)||cv(e.framerate,\"streamParameter.framerate\"),uv(e.bitrate)||av(e.bitrate,\"streamParameter.bitrate\")}(e),(!e.width&&e.height||e.width&&!e.height)&&Qy.warning(\"[\".concat(this._clientId,\"] The width and height parameters take effect only when both are set\")),Qy.info(\"[\".concat(this._clientId,\"] set low stream parameter to\"),JSON.stringify(e));const t=this._configDistribute.getLowStreamConfigDistribute();if(t&&t.bitrate&&e.bitrate&&t.bitrate<e.bitrate&&(e.bitrate=t.bitrate),this._lowStreamParameter=e,this._isDualStreamEnabled)return this._p2pChannel.updateVideoStreamParameter(e,Jb.LocalVideoLowTrack)}async enableDualStream(){if(!MD().supportDualStream)throw sA.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),new Sb(nv.NOT_SUPPORTED,\"Your browser is not support dual stream\");if(this._isDualStreamEnabled)throw new Sb(nv.INVALID_OPERATION,\"Dual stream is already enabled\");if(this._p2pChannel.canPublishLowStream())try{await this._publishLowStream()}catch(e){throw sA.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),e}this._isDualStreamEnabled=!0,sA.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!0}),Qy.info(\"[\".concat(this._clientId,\"] enable dual stream\"))}async disableDualStream(){if(this._isDualStreamEnabled){if(!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(this._p2pChannel.getLocalMedia(Jb.LocalVideoLowTrack))try{const e=await this._p2pChannel.unpublishLowStream();e&&await this._gateway.unpublish(e,this._joinInfo.stringUid||this._joinInfo.uid)}catch(e){throw sA.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!1}),e}this._isDualStreamEnabled=!1,sA.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!0}),Qy.info(\"[\".concat(this._clientId,\"] disable dual stream\"))}}async setClientRole(e,t){if(function(e){sv(e,\"role\",[\"audience\",\"host\"])}(e),t&&Ov(t),\"rtc\"===this.mode||\"p2p\"===this.mode)throw Qy.warning(\"[\".concat(this._clientId,\"]\").concat(this.mode,\" mode can not use setClientRole\")),new Sb(nv.INVALID_OPERATION,\"\".concat(this.mode,\" mode can not use setClientRole\"));if(t&&t.level&&\"host\"===e)throw new Sb(nv.INVALID_OPERATION,\"host mode can not set audience latency level\");if(\"audience\"===e&&this._p2pChannel.hasLocalMedia())throw new Sb(nv.INVALID_OPERATION,\"can not set client role to audience when publishing stream\");await this._gateway.setClientRole(e,t),this._config.role=e,Qy.info(\"[\".concat(this._clientId,\"] set client role to \").concat(e,\", level: \").concat(t&&t.level))}getRemoteInboundOffset(){var e;const t=null===(e=this._p2pChannel.getStats())||void 0===e?void 0:e.audioSend[0];if(!t||!t.timestamp)return 0;const i=t.timestamp-Date.now();return Math.abs(i)>1e3+t.rttMs+100?this.ntpAlignErrorCount+=1:this.ntpAlignErrorCount=0,this.ntpAlignErrorCount>=3?i:0}getNtpWallTimeInMs(){return\"visible\"===document.visibilityState&&(this.remoteInboundOffset=this.getRemoteInboundOffset()),this.remoteInboundOffset+Date.now()+this._gateway.ntpOffset}setProxyServer(e,t){if(dv(e,\"proxyServer\"),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Set proxy server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new Sb(nv.INVALID_OPERATION,\"You have already set the proxy\")}this._proxyServer=e,sA.setProxyServer(this._proxyServer),Qy.setProxyServer(this._proxyServer),Qy.info(\"[\".concat(this._clientId,\"] Set proxy server \").concat(t?\"by initialize call\":\"\",\" success.\"))}setTurnServer(e,t){if(Array.isArray(e)||(e=[e]),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Set turn server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new Sb(nv.INVALID_OPERATION,\"You have already set the proxy\")}if(bv(e))return this._turnServer={servers:e,mode:\"original-manual\"},void Qy.info(\"[\".concat(this._clientId,\"] Set original turnserver \").concat(t?\"by initialize call\":\"\",\" success: \").concat(e.map((e=>e.urls)).join(\",\"),\".\"));e.forEach((e=>wv(e))),this._turnServer={servers:e,mode:\"manual\"},Qy.info(\"[\".concat(this._clientId,\"] Set turnserver \").concat(t?\"by initialize call\":\"\",\" success.\"))}setLicense(e){if(\"DISCONNECTED\"!==this.connectionState){throw new Sb(nv.INVALID_OPERATION,\"you should set license before join channel\")}if(dv(e,\"license\",32,32),!/^[A-Za-z\\d]+$/.test(e))throw new Sb(nv.INVALID_PARAMS,\"license should only contains characters from A-Z a-z 0-9\");this._license=e,Qy.info(\"[\".concat(this._clientId,\"] set license success\"),e)}startProxyServer(e){if(\"DISCONNECTED\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Start proxy server before join channel\");if(this._proxyServer||\"manual\"===this._turnServer.mode||this._useLocalAccessPoint)throw new Sb(nv.INVALID_OPERATION,\"You have already set the proxy\");const t=[3,4,5];let i;switch(void 0===e&&(e=3),e){case 1:case 2:throw new Sb(nv.NOT_SUPPORTED,\"proxy mode 1/2 has been deprecated and not supported.\");case 3:i=\"proxy3\";break;case 4:i=\"proxy4\";break;case 5:i=\"proxy5\";break;default:throw new Sb(nv.INVALID_PARAMS,\"proxy server mode must be \".concat(t.join(\"|\")))}this._cloudProxyServerMode=i,this.store.cloudProxyServerMode=i,Qy.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode)}stopProxyServer(){if(\"DISCONNECTED\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"Stop proxy server after leave channel\");sA.setProxyServer(),Qy.setProxyServer(),this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\",Qy.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode),this._proxyServer=void 0,this._turnServer={mode:\"auto\",servers:[]}}setLocalAccessPointsV2(e){if(!e.accessPoints)throw new Sb(nv.INVALID_PARAMS,\"accessPoints is required.\");lv(e.accessPoints.serverList,\"accessPoints.serverList\"),dv(e.accessPoints.domain,\"accessPoints.domain\");const t=(e,t)=>{av(e,t,0,65535,!0)};let i=443;if(e.accessPoints.port&&(t(e.accessPoints.port,\"accessPoints.port\"),i=e.accessPoints.port),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new Sb(nv.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");Dy(\"CLOSE_AFB_FOR_LOCAL_AP\")&&(Ny(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\",!1),Ny(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\",!1));const n=/^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/,r=e.accessPoints.domain,o=e.accessPoints.serverList.map((e=>n.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(r):e)),s=o.map((e=>\"\".concat(e,\":\").concat(i)));this._useLocalAccessPoint=!0,this._setLocalAPVersion=2,Ny(\"WEBCS_DOMAIN\",s),Ny(\"WEBCS_DOMAIN_BACKUP_LIST\",s),Ny(\"GATEWAY_DOMAINS\",[r]),e.report&&e.report.hostname&&Array.isArray(e.report.hostname)&&e.report.hostname.length?(lv(e.report.hostname,\"report.hostname\"),Ny(\"EVENT_REPORT_DOMAIN\",e.report.hostname[0]),Ny(\"EVENT_REPORT_BACKUP_DOMAIN\",e.report.hostname[1]||e.report.hostname[0])):(Ny(\"EVENT_REPORT_DOMAIN\",o[0]),Ny(\"EVENT_REPORT_BACKUP_DOMAIN\",o[1]||o[0]));let a=6443;e.report&&e.report.port&&(t(e.report.port,\"report.port\"),a=e.report.port),Ny(\"STATS_COLLECTOR_PORT\",a),e.report?Ny(\"ENABLE_EVENT_REPORT\",!0):Ny(\"ENABLE_EVENT_REPORT\",!1);let c=\"\";e.log&&e.log.hostname&&Array.isArray(e.log.hostname)&&e.log.hostname.length?(lv(e.log.hostname,\"log.hostname\"),c=e.log.hostname[0]):c=o[0];let d=6444;e.log&&e.log.port&&(t(e.log.port,\"log.port\"),d=e.log.port),Ny(\"LOG_UPLOAD_SERVER\",\"\".concat(c,\":\").concat(d));let l=[];e.cds&&e.cds.hostname&&Array.isArray(e.cds.hostname)&&e.cds.hostname.length?(lv(e.cds.hostname,\"cds.hostname\"),l=e.cds.hostname):l=o;let u=443;e.cds&&e.cds.port&&(t(e.cds.port,\"cds.port\"),u=e.cds.port),Ny(\"CDS_AP\",l.map((e=>\"\".concat(e,\":\").concat(u)))),e.cds?Ny(\"ENABLE_CONFIG_DISTRIBUTE\",!0):Ny(\"ENABLE_CONFIG_DISTRIBUTE\",!1),Qy.info(\"set local access point v2 success\")}setLocalAccessPoints(e,t){if(lv(e,\"serverList\"),dv(t,\"domain\"),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new Sb(nv.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");const i=/^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;e=e.map((e=>i.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(t):e)),this._useLocalAccessPoint=!0,this._setLocalAPVersion=1,Ny(\"WEBCS_DOMAIN\",e),Ny(\"WEBCS_DOMAIN_BACKUP_LIST\",e),Ny(\"GATEWAY_DOMAINS\",[t]),Ny(\"EVENT_REPORT_DOMAIN\",e[0]),Ny(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]||e[0]),Ny(\"LOG_UPLOAD_SERVER\",\"\".concat(e[0],\":6444\")),Qy.info(\"[\".concat(this._clientId,\"] set local access point success\"))}async setRemoteDefaultVideoStreamType(e){if(sv(e,\"streamType\",[0,1]),this._remoteDefaultVideoStreamType=e,this._joinInfo)try{await this._gateway.setDefaultRemoteVideoStreamType(e),this._joinInfo.defaultVideoStream=this._remoteDefaultVideoStreamType}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] set default remote video stream type error\"),e.toString()),e}else Qy.debug(\"[\".concat(this._clientId,\"] haven't joined yet, cache remoteDefaultVideoStreamType \").concat(e))}async setRemoteVideoStreamType(e,t){sv(t,\"streamType\",[0,1]);try{await this._gateway.setRemoteVideoStreamType(e,t),setTimeout((()=>{const t=this._users.find((t=>t.uid===e));t&&t.videoTrack&&t.videoTrack.updateMediaStreamTrackResolution()}),2e3)}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] set remote video stream type error\"),e.toString()),e}Qy.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" video stream type to \").concat(t)),this._remoteStreamTypeCacheMap.set(e,t)}async setStreamFallbackOption(e,t){sv(t,\"fallbackType\",[0,1,2]);try{await this._gateway.setStreamFallbackOption(e,t)}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] set stream fallback option\"),e.toString()),e}Qy.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" stream fallback type to \").concat(t)),this._streamFallbackTypeCacheMap.set(e,t)}setEncryptionConfig(e,t,i,n){!function(e){sv(e,\"encryptionMode\",[\"aes-128-xts\",\"aes-256-xts\",\"aes-128-ecb\",\"sm4-128-ecb\",\"aes-128-gcm\",\"aes-256-gcm\",\"aes-128-gcm2\",\"aes-256-gcm2\",\"none\"])}(e),dv(t,\"secret\");const r=[\"aes-128-gcm2\",\"aes-256-gcm2\"];if(Dn(r).call(r,e)){if(!i||!(i instanceof Uint8Array&&32===i.length))throw new Sb(nv.INVALID_PARAMS,\"salt must be an Uint8Array and exactly equal to 32 bytes\")}else if(i)throw new Sb(nv.INVALID_PARAMS,\"current encrypt mode does not need salt\");if(n){if(ov(n,\"encryptDataStream\"),!Dn(r).call(r,e))throw new Sb(nv.INVALID_PARAMS,\"current encrypt mode does not support data stream\");this._encryptDataStream=!0}new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'\\\"|{}\\\\[\\\\]])(?=.{8,})\").test(t)||Qy.warning(\"The secret is not strong:\\n      The secret must contain at least 1 lowercase alphabetical character,\\n      The secret must contain at least 1 uppercase alphabetical character,\\n      The secret must contain at least 1 numeric character,\\n      The secret must contain at least one special character,\\n      The secret must be eight characters or longer.\\n      \"),this._encryptionMode=e,this._encryptionSecret=t,i&&(this._encryptionSalt=qv(i))}async renewToken(e){if(dv(e,\"token\",1,2047),!this._key||!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"renewToken should not be called before user join\");const t=this._key;this._key=e,this._joinInfo&&(this._joinInfo.token=e);const i=await this._renewTokenMutex.lock();try{if(Dy(\"USE_NEW_TOKEN\")){Qy.debug(\"[\".concat(this._clientId,\"] start renew token with ticket from unilbs\"));const t=await MU(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||_y);Qy.debug(\"[\".concat(this._clientId,\"] get ticket from unilbs success\")),await this._gateway.renewToken({token:e,ticket:t})}else Qy.debug(\"[\".concat(this._clientId,\"] start renew token without ticket\")),await this._gateway.renewToken({token:e});Qy.debug(\"[\".concat(this._clientId,\"] renewToken success\"))}catch(e){throw this._key=t,this._joinInfo.token=t,Qy.error(\"[\".concat(this._clientId,\"] renewToken failed\"),e.toString()),e}finally{i()}}enableAudioVolumeIndicator(){this._audioVolumeIndicationInterval?Qy.warning(\"you have already enabled audio volume indicator!\"):this._audioVolumeIndicationInterval=window.setInterval((()=>{const e=this._p2pChannel.getAudioLevels();this.safeEmit(Nv.VOLUME_INDICATOR,e)}),Dy(\"AUDIO_VOLUME_INDICATION_INTERVAL\")||2e3)}getRTCStats(){const e=this._statsCollector.getRTCStats(),t=this._gateway.getInChannelInfo();return e.Duration=Math.round(t.duration/1e3),e}async startLiveStreaming(e,t){if(!t){if(\"h264\"!==this.codec)throw new Sb(nv.LIVE_STREAMING_INVALID_RAW_STREAM,\"raw streaming is only support h264\");if(!this._p2pChannel.hasLocalMedia())throw new Sb(nv.LIVE_STREAMING_INVALID_RAW_STREAM,\"can not find stream to raw streaming\")}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(e)||this._liveTranscodeStreamingClient&&this._liveTranscodeStreamingClient.hasUrl(e))throw new Sb(nv.LIVE_STREAMING_TASK_CONFLICT);const i=t?Cb.TRANSCODE:Cb.RAW;return this._createLiveStreamingClient(i).startLiveStreamingTask(e,i)}setLiveTranscoding(e){return this._createLiveStreamingClient(Cb.TRANSCODE).setTranscodingConfig(e)}async stopLiveStreaming(e){const t=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient].filter((t=>t&&t.hasUrl(e)));if(!t.length)throw new Sb(nv.INVALID_PARAMS,\"can not find live streaming url to stop\");await Gh.all(t.map((t=>t&&t.stopLiveStreamingTask(e))))}async startChannelMediaRelay(e){bV(e);const t=this._createChannelMediaRelayClient();await t.startChannelMediaRelay(e)}async updateChannelMediaRelay(e){bV(e);const t=this._createChannelMediaRelayClient();await t.updateChannelMediaRelay(e)}async stopChannelMediaRelay(){const e=this._createChannelMediaRelayClient();await e.stopChannelMediaRelay(),this._statsCollector.onStatsChanged&&(this._statsCollector.onStatsChanged=void 0)}async sendStreamMessage(e){var t;let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"can not send data stream, not joined\");if((\"string\"==typeof e||e instanceof Uint8Array)&&(e={payload:e}),\"string\"==typeof e.payload){const t=new TextEncoder;e.payload=t.encode(e.payload)}let n=!1;this._encryptDataStream&&this._encryptDataStreamIv&&this._encryptDataStreamKey&&window.crypto.subtle&&Dn(t=[\"aes-128-gcm2\",\"aes-256-gcm2\"]).call(t,this._encryptionMode)&&(n=!0,e.payload=await async function(e,t,i){var n;const r=Jn(n=Array.from(i)).call(n,((e,t)=>e+t),0),o={serverTs:0,seq:By++,length:i.length,checkSum:r},s=new Uint8Array(ay(r,2)),a=new ArrayBuffer(Fy),c=new DataView(a);c.setUint32(0,o.serverTs),c.setUint16(4,o.seq),c.setUint16(6,o.length),c.setUint16(8,o.checkSum);const d=16-i.length%16;i=Jv(i,new Uint8Array(d));const l=await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:e,tagLength:Uy,additionalData:s},t,i);return Jv(new Uint8Array(a),new Uint8Array(l))}(this._encryptDataStreamIv,this._encryptDataStreamKey,e.payload));if(new Blob([e.payload]).size>1024)throw new Sb(nv.INVALID_PARAMS,n?\"encrypted stream message out of range.\":\"stream message out of range.\");return this._gateway.signal.request(_b.DATA_STREAM,{payload:qv(e.payload),syncWithAudio:e.syncWithAudio,sendTs:Date.now()-gF},!i)}sendMetadata(e){if(!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"can not send metadata, not joined\");if(new Blob([e]).size>1024)throw new Sb(nv.METADATA_OUT_OF_RANGE);return this._gateway.signal.request(_b.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:qv(e)})}async sendCustomReportMessage(e){if(Array.isArray(e)||(e=[e]),e.forEach($y),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"can not send custom report, not joined\");await sA.sendCustomReportMessage(this._joinInfo.sid,e)}getLocalAudioStats(){return this._statsCollector.getLocalAudioTrackStats()}getRemoteAudioStats(){return this._statsCollector.getRemoteAudioTrackStats()}getLocalVideoStats(){return this._statsCollector.getLocalVideoTrackStats()}getRemoteVideoStats(){return this._statsCollector.getRemoteVideoTrackStats()}getRemoteNetworkQuality(){return this._statsCollector.getRemoteNetworkQualityStats()}async pickSVCLayer(e,t){sv(t.spatialLayer,\"spatialLayer\",[0,1,2,3]),sv(t.temporalLayer,\"temporalLayer\",[0,1,2,3]);try{await this._gateway.pickSVCLayer(e,t)}catch(e){throw Qy.error(\"[\".concat(this._clientId,\"] pick SVC layer failed\"),e.toString()),e}}async setRTMConfig(e){const{apRTM:t=!1,rtmFlag:i}=e;if(ov(t,\"apRTM\"),av(i,\"rtmFlag\",0),this._rtmConfig.apRTM=t,this._rtmConfig.rtmFlag=i,Qy.debug(\"[\".concat(this._clientId,\"] setRTMconfig \").concat(JSON.stringify(e),\" in \").concat(this.connectionState,\" state\")),(\"CONNECTED\"===this.connectionState||\"RECONNECTING\"===this.connectionState)&&this._joinInfo)return this._joinInfo.apRTM=t,this._joinInfo.rtmFlag=i,this._gateway.setRTM2Flag(i)}_reset(){if(Qy.debug(\"[\".concat(this._clientId,\"] reset client\")),this._axiosCancelSource.cancel(),this._axiosCancelSource=EI.CancelToken.source(),this._streamFallbackTypeCacheMap=new Map,this._remoteStreamTypeCacheMap=new Map,this._configDistribute.stopGetConfigDistribute(),this._joinInfo&&KF(this._joinInfo),this._joinInfo=void 0,this._proxyServer=void 0,this._defaultStreamFallbackType=void 0,this._sessionId=null,this.store.sessionId=null,this._statsCollector.reset(),this._key=void 0,this._appId=void 0,this._uid=void 0,this.store.uid=void 0,this._channelName=void 0,this._encryptionMode=\"none\",this._encryptionSecret=null,this._encryptionSalt=null,this._encryptDataStreamKey=null,this._encryptDataStreamIv=null,this._pendingPublishedUsers=[],this._users.forEach((e=>{e._audioTrack&&e._audioTrack._destroy(),e._videoTrack&&e._videoTrack._destroy(),e._dataChannels&&(e._dataChannels.forEach((e=>e._close())),e._dataChannels.length=0)})),this._users=[],this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0),\"fallback\"===this._cloudProxyServerMode&&(this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\"),this._p2pChannel.reset(),this._publishMutex=new hy(\"client-publish\"),this._subscribeMutex=new hy(\"client-subscribe\"),this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0),this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0),this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0),this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0),this._inspect)try{this._inspect.close(),this._inspect=void 0}catch(e){}if(this._moderation)try{this.setImageModeration(!1)}catch(e){}}_startSession(e,t){var i;const n=e||ty();e?Qy.debug(\"[\".concat(this._clientId,\"] new Session \").concat(n)):Qy.debug(\"[\".concat(this._clientId,\"] renewSession \").concat(this._sessionId,\" => \").concat(n));const r=e?\"\":this._sessionId||\"\";this._sessionId=n,this.store.sessionId=n;const o={lts:(new Date).getTime(),mode:this.mode,buildFormat:2,stringUid:(null==t?void 0:t.stringUid)||(null===(i=this._joinInfo)||void 0===i?void 0:i.stringUid),channelProfile:\"live\"===this.mode?1:0,channelMode:0,isABTestSuccess:Number(this._configDistribute.isSuccess),lsid:r,clientRole:\"audience\"===this.role?2:1};sA.sessionInit(this._sessionId,Sj({cname:t.channel,appid:t.appId},o)),this._joinInfo&&(this._joinInfo.sid=n),this._gateway.joinInfo&&(this._gateway.joinInfo.sid=n)}async _publishHighStream(e){if(!this._joinInfo||void 0===this._uid)throw new Sb(nv.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&Dy(\"FORCE_TURN\")&&!Dy(\"TURN_ENABLE_TCP\")&&!Dy(\"TURN_ENABLE_UDP\"))throw new Sb(nv.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");Qy.debug(\"[\".concat(this._clientId,\"] publish high stream\"));try{const i=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter);if(this._p2pChannel instanceof RV){const e=(await i.next()).value;if(e){try{await this._gateway.sendExtensionMessage(sw.PUBLISH,e,!0)}catch(e){throw i.throw(e),e}await i.next()}this._p2pChannel.reportPublishEvent(!0,null)}else{const n=(await i.next()).value;if(n){var t;let e;try{e=await this._gateway.publish(this._uid,n,!0)}catch(e){if(e.code!==nv.DISCONNECT_P2P)throw i.throw(e),e}await i.next((null===(t=e)||void 0===t?void 0:t.ortc)||[])}this._p2pChannel.reportPublishEvent(!0,null);for(const t of e)t instanceof Hk&&t._encoderConfig&&this._gateway.setVideoProfile(t._encoderConfig),!t.muted&&t.enabled||await this._p2pChannel.muteLocalTrack(t)}}catch(t){if(this._p2pChannel.reportPublishEvent(!1,null==t?void 0:t.code,e),(null==t?void 0:t.code)===nv.WS_ABORT)return;throw t}}async _publishLowStream(){if(!this._joinInfo||void 0===this._uid)throw new Sb(nv.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));Qy.debug(\"[\".concat(this._clientId,\"] publish low stream\"));const e=this._configDistribute.getLowStreamConfigDistribute();e&&e.bitrate&&(this._lowStreamParameter||(this._lowStreamParameter={width:160,height:120,framerate:15,bitrate:50}),this._lowStreamParameter&&this._lowStreamParameter.bitrate&&e.bitrate<this._lowStreamParameter.bitrate&&(this._lowStreamParameter.bitrate=e.bitrate));try{const e=await this._p2pChannel.publishLowStream(this._lowStreamParameter),i=(await e.next()).value;if(i){var t;let n;try{n=await this._gateway.publish(this._uid,i,!0)}catch(t){if(t.code!==nv.DISCONNECT_P2P)throw e.throw(t),t}e.next((null===(t=n)||void 0===t?void 0:t.ortc)||[]),this._p2pChannel.reportPublishEvent(!0,null,void 0,!0)}}catch(e){if(this._p2pChannel.reportPublishEvent(!1,null==e?void 0:e.code,void 0,!0),(null==e?void 0:e.code)===nv.WS_ABORT)return;throw e}}_createLiveStreamingClient(e){const t=()=>{if(!this._joinInfo||!this._appId){return new Sb(nv.INVALID_OPERATION,\"can not create live streaming client, please join channel first\").throw()}const e=(t={joinInfo:this._joinInfo,appId:this._appId,websocketRetryConfig:this._config.websocketRetryConfig,httpRetryConfig:this._config.httpRetryConfig},mF(\"LiveStreaming\").create(t));var t;return e.onLiveStreamError=(e,t)=>{sA.reportApiInvoke(this._sessionId,{name:Cv.ON_LIVE_STREAM_ERROR,options:[e,t],tag:Iv.TRACER}).onSuccess(),this.safeEmit(Nv.LIVE_STREAMING_ERROR,e,t)},e.onLiveStreamWarning=(e,t)=>{sA.reportApiInvoke(this._sessionId,{name:Cv.ON_LIVE_STREAM_WARNING,options:[e,t],tag:Iv.TRACER}).onSuccess(),this.safeEmit(Nv.LIVE_STREAMING_WARNING,e,t)},e.on(wb.REQUEST_WORKER_MANAGER_LIST,((e,t,i)=>{if(!this._joinInfo)return i(new Sb(nv.INVALID_OPERATION,\"can not find join info to get worker manager\"));(async function(e,t,i,n){const r=Dy(\"UAP_AP\").slice(0,Dy(\"AJAX_REQUEST_CONCURRENT\")).map((e=>t.proxyServer?\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1?action=uap\"):\"https://\".concat(e,\"/api/v1?action=uap\")));return await _U(r,e,t,i,n)})(e,this._joinInfo,this._axiosCancelSource.token,_y).then(t).catch(i)})),e};return e===Cb.RAW?(this._liveRawStreamingClient=this._liveRawStreamingClient||t(),this._liveRawStreamingClient):(this._liveTranscodeStreamingClient=this._liveTranscodeStreamingClient||t(),this._liveTranscodeStreamingClient)}_createChannelMediaRelayClient(){if(!this._joinInfo){return new Sb(nv.INVALID_OPERATION,\"can not create channel media relay client, please join channel first\").throw()}if(!this._channelMediaRelayClient){const{sendResolutionWidth:t,sendResolutionHeight:i}=this.getLocalVideoStats(),n=(e={joinInfo:this._joinInfo,clientId:this._clientId,websocketRetryConfig:this._config.websocketRetryConfig,httpRetryConfig:this._config.httpRetryConfig,resolution:{width:t,height:i}},mF(\"ChannelMediaRelay\").create(e));n.on(\"state\",(e=>{e===Lb.RELAY_STATE_FAILURE&&n&&n.dispose(),this.safeEmit(Nv.CHANNEL_MEDIA_RELAY_STATE,e)})),n.on(\"event\",(e=>{this.safeEmit(Nv.CHANNEL_MEDIA_RELAY_EVENT,e)})),this._channelMediaRelayClient=n,this._statsCollector.onStatsChanged=(e,t)=>{var i;\"resolution\"===e&&(null===(i=this._channelMediaRelayClient)||void 0===i||i.setVideoProfile(t))}}var e;return this._channelMediaRelayClient}_handleUpdateDataChannel(e,t){const{added:i,deleted:n}=e,r=[];if(t){const e=[];this._users.forEach((t=>{t._dataChannels.forEach((n=>{i.every((e=>e.uid!==t._uintid||e.stream_id!==n.id))&&e.push({uid:t._uintid,stream_id:n.id,ordered:n.ordered,max_retrans_times:n.maxRetransmits,metadata:n.metadata})}))})),e.length>0&&this._handleUpdateDataChannel({added:[],deleted:e})}Array.isArray(i)&&i.length>0&&i.forEach((e=>{const{uid:i,stream_id:n,ordered:o,max_retrans_times:s,metadata:a}=e,c=this._users.find((e=>e._uintid===i));if(!c)return void Qy.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_data_channel)\"));Qy.debug(\"[\".concat(this._clientId,\"] data_channel added with uid \").concat(i)),Dn(r).call(r,c)||r.push(c),c._uintid||(c._uintid=i);if(!(-1!==c._dataChannels.findIndex((t=>t.id===e.stream_id)))){const e={id:n,ordered:!!o,maxRetransmits:s,metadata:a},i=function(e){return fF(e,!0)}(e);c._dataChannels.push(i),Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(c.uid,\" published datachannel\")),t||this.safeEmit(Nv.USER_PUBLISHED,c,\"datachannel\",e)}this._p2pChannel.hasPendingRemoteDataChannel(c,e.stream_id)&&(Qy.debug(\"[\".concat(this._clientId,\"] resubscribe datachannel for user \").concat(c.uid,\" after reconnect.\")),this._subscribeDataChannel(c,e.stream_id).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] resubscribe datachannel error\"),e.toString())})))})),t&&(this.safeEmit(Nv.PUBLISHED_USER_LIST,this._pendingPublishedUsers),this._pendingPublishedUsers=[]),Array.isArray(n)&&n.length>0&&n.forEach((e=>{const{uid:t,stream_id:i}=e,n=this._users.find((e=>e._uintid===t));if(!n)return void Qy.error(\"[\".concat(this._clientId,\"] can not find target user!(on_delete_data_channel)\"));const r=n._dataChannels.find((t=>t.id===e.stream_id));r&&(Qy.debug(\"[\".concat(this._clientId,\"] data_stream delete with uid \").concat(t)),this._p2pChannel.unsubscribeDataChannel(n,[r]).then((e=>{if(n._dataChannels=n._dataChannels.filter((e=>e!==r)),e)return this._gateway.unsubscribeDataChannel(e,n.uid)})),Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished datachannel ,id:\").concat(r.id)),this.safeEmit(Nv.USER_UNPUBLISHED,n,\"datachannel\",r._config))}))}_handleRemoveDataChannels(e){const t=this._users.find((t=>t.uid===e.uid));if(t){if(void 0!==t._dataChannels&&t._dataChannels.length>0){Qy.debug(\"[\".concat(this._clientId,\"] datachannel removed with uid \").concat(e.uid));const i=()=>{Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished datachannel\")),t._dataChannels.forEach((e=>{this.safeEmit(Nv.USER_UNPUBLISHED,t,\"datachannel\",e._config)}))};this._p2pChannel.unsubscribeDataChannel(t,t._dataChannels).then((e=>{if(e)return this._gateway.unsubscribeDataChannel(e,t.uid)})),i()}}else Qy.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_datachannel)\"))}_handleGatewayEvents(){this._gateway.on(Ub.DISCONNECT_P2P,(async()=>{await this._p2pChannel.disconnectForReconnect()})),this._gateway.on(Ub.CONNECTION_STATE_CHANGE,((e,t,i)=>{var n;if(i===Av.FALLBACK)return;const r=()=>{this.safeEmit(Nv.CONNECTION_STATE_CHANGE,e,t,i)};if(sA.reportApiInvoke(this._sessionId||(null===(n=this._gateway.joinInfo)||void 0===n?void 0:n.sid)||null,{name:Cv.CONNECTION_STATE_CHANGE,options:[e,t,i],tag:Iv.TRACER}).onSuccess(JSON.stringify({cur:e,prev:t,reason:i})),Qy.info(\"[\".concat(this._clientId,\"] connection state change: \").concat(t,\" -> \").concat(e)),\"DISCONNECTED\"===e)return this._reset(),void r();if(\"RECONNECTING\"===e)this._users.forEach((e=>{e._trust_in_room_=!1,e._trust_audio_enabled_state_=!1,e._trust_video_enabled_state_=!1,e._trust_audio_mute_state_=!1,e._trust_video_mute_state_=!1,e._trust_audio_stream_added_state_=!1,e._trust_video_stream_added_state_=!1,e._is_pre_created||(e._audio_pre_subscribed||(e._audioSSRC=void 0,e._audioOrtc=void 0),e._video_pre_subscribed||(e._videoSSRC=void 0,e._videoOrtc=void 0,e._rtxSsrcId=void 0),e._cname=void 0)})),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._userOfflineTimeout=void 0,this._streamRemovedTimeout=void 0;else if(\"CONNECTED\"===e){var o;this._streamFallbackTypeCacheMap.forEach(((e,t)=>{this._gateway.setStreamFallbackOption(t,e).catch((e=>{Qy.warning(\"[\".concat(this._clientId,\"] auto set stream fallback option failed\"),e)}))})),this._remoteStreamTypeCacheMap.forEach(((e,t)=>{this._gateway.setRemoteVideoStreamType(t,e).catch((e=>{Qy.warning(\"[\".concat(this._clientId,\"] auto set remote stream type failed\"),e)}))})),void 0!==this._remoteDefaultVideoStreamType&&void 0===(null===(o=this._joinInfo)||void 0===o?void 0:o.defaultVideoStream)&&this.setRemoteDefaultVideoStreamType(this._remoteDefaultVideoStreamType).then((()=>{Qy.debug(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway connected\"))})).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway failed, \").concat(e))})),this.store.useP2P||(this._p2pChannel.republish(),this._userOfflineTimeout=window.setTimeout((()=>{if(\"CONNECTED\"!==this.connectionState)return;this._userOfflineTimeout=void 0;this._users.filter((e=>!e._trust_in_room_)).forEach((e=>{Qy.debug(\"[\".concat(this._clientId,\"] user offline timeout, emit user offline \").concat(e.uid)),this._handleUserOffline({uid:e.uid})}))}),3e3),this._streamRemovedTimeout=window.setTimeout((()=>{\"CONNECTED\"===this.connectionState&&(this._streamRemovedTimeout=void 0,this._users.forEach((e=>{e._trust_audio_mute_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch audio unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,Yb.AUDIO,!1)),e._trust_video_mute_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch video unmute event \").concat(e.uid)),this._handleMuteStream(e.uid,Yb.VIDEO,!1)),e._trust_audio_enabled_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local audio \").concat(e.uid)),this._handleSetStreamLocalEnable(\"audio\",e.uid,!0)),e._trust_video_enabled_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local video \").concat(e.uid)),this._handleSetStreamLocalEnable(\"video\",e.uid,!0)),e._trust_video_stream_added_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch reset video stream added \").concat(e.uid)),this._handleResetAddStream(e,\"video\")),e._trust_audio_stream_added_state_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch reset audio stream added \").concat(e.uid)),this._handleResetAddStream(e,\"audio\")),e._video_added_||e._audio_added_||(Qy.debug(\"[\".concat(this._clientId,\"] auto dispatch stream remove \").concat(e.uid)),this._handleRemoveStream({uid:e.uid,uint_id:e._uintid}))})))}),1e3))}r()})),this._gateway.on(Ub.REQUEST_NEW_GATEWAY_LIST,(async(e,t)=>{if(!this._joinInfo)return t(new Sb(nv.UNEXPECTED_ERROR,\"can not recover, no join info\"));try{let t;const i=await GF(Sj(Sj({},this._joinInfo),{},{uid:this._joinInfo.uid,stringUid:void 0}));i?(t=i.ap,YF(i),this._joinInfo.preload=!0):(t=await bU(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||_y,this.store),this._joinInfo.preload=!1),this._joinInfo&&(this._joinInfo.apResponse=t.gatewayInfo.res,this._joinInfo.gatewayAddrs=t.gatewayInfo.gatewayAddrs,this._joinInfo.uni_lbs_ip=t.gatewayInfo.uni_lbs_ip);const n=[];t.gatewayInfo.gatewayAddrs.forEach((e=>{let{address:t}=e;const[i,r]=t.split(\":\");this._joinInfo&&this._joinInfo.proxyServer?n.push({proxy:this._joinInfo.proxyServer,host:i,port:r}):n.push({host:i,port:r})})),e(n)}catch(e){t(e)}})),this._gateway.on(Ub.NETWORK_QUALITY,(e=>{\"normal\"===this._networkQualitySensitivity&&this.safeEmit(Nv.NETWORK_QUALITY,e)})),this._gateway.on(Ub.STREAM_TYPE_CHANGE,((e,t)=>{this.safeEmit(Nv.STREAM_TYPE_CHANGED,e,t);sA.reportApiInvoke(this._sessionId,{name:Cv.STREAM_TYPE_CHANGE,options:[e,t],tag:Iv.TRACER}).onSuccess(JSON.stringify({uid:e,streamType:t}))})),this._gateway.on(Ub.IS_P2P_DISCONNECTED,(e=>{this._p2pChannel.isP2PDisconnected()?e(!0):this._p2pChannel.hasLocalMedia()||this._p2pChannel.hasRemoteMedia()?e(!1):e(!0)})),this._gateway.on(Ub.REQUEST_P2P_CONNECTION_PARAMS,(async(e,t,i)=>{try{let i=await this._p2pChannel.getEstablishParams();Dy(\"ENABLE_PREALLOC_PC\")&&i||(i=await this._p2pChannel.startP2PConnection(e)),t(i)}catch(e){i(e)}})),this._gateway.on(Ub.JOIN_RESPONSE,((e,t)=>{if(this.store.useP2P)return;const i=OM(e.ortc,t,e.attributes.userAttributes.preSubSsrcs);this._p2pChannel.connect(i)})),this._gateway.on(Ub.PRE_CONNECT_PC,(async e=>{const{candidates:t,fingerprint:i}=e;if(this._joinInfo&&t.length>0&&!this._p2pChannel.isPlanB){var n;await this._p2pChannel.startP2PConnection({turnServer:this._joinInfo.turnServer});const{cert:e,cid:r}=this._joinInfo.apResponse;await this._p2pChannel.connect({iceParameters:{iceUfrag:\"\".concat(r,\"_\").concat(e),icePwd:\"\".concat(r,\"_\").concat(e)},dtlsParameters:{fingerprints:[{hashFunction:\"sha-256\",fingerprint:null!==(n=Dy(\"FINGERPRINT\"))&&void 0!==n?n:i}]},candidates:t,rtpCapabilities:{send:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},recv:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]}},setup:\"active\",cname:\"o/i14u9pJrxRKAsu\",preallocation:!0})}}))}_handleGatewaySignalEvents(){this._gateway.signal.on(mb.ON_USER_ONLINE,this._handleUserOnline),this._gateway.signal.on(mb.ON_USER_OFFLINE,this._handleUserOffline),this._gateway.signal.on(mb.ON_ADD_AUDIO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"audio\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc))),this._gateway.signal.on(mb.ON_ADD_VIDEO_STREAM,(e=>this._handleAddAudioOrVideoStream(\"video\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc,e.rtxSsrcId))),this._gateway.signal.on(mb.ON_REMOTE_DATASTREAM_UPDATE,(e=>{this._handleUpdateDataChannel(e)})),this._gateway.signal.on(mb.ON_REMOTE_FULL_DATASTREAM_INFO,(e=>{this._handleUpdateDataChannel({added:e.datastreams||[],deleted:[]},!0)})),this._gateway.signal.on(mb.ON_REMOVE_STREAM,this._handleRemoveStream),this._gateway.signal.on(mb.ON_P2P_LOST,this._handleP2PLost),this._gateway.signal.on(mb.MUTE_AUDIO,(e=>this._handleMuteStream(e.uid,Yb.AUDIO,!0))),this._gateway.signal.on(mb.UNMUTE_AUDIO,(e=>this._handleMuteStream(e.uid,Yb.AUDIO,!1))),this._gateway.signal.on(mb.MUTE_VIDEO,(e=>this._handleMuteStream(e.uid,Yb.VIDEO,!0))),this._gateway.signal.on(mb.UNMUTE_VIDEO,(e=>this._handleMuteStream(e.uid,Yb.VIDEO,!1))),this._gateway.signal.on(mb.RECEIVE_METADATA,(e=>{const t=Yv(e.metadata);this.safeEmit(Nv.RECEIVE_METADATA,e.uid,t)})),this._gateway.signal.on(mb.ON_DATA_STREAM,(async e=>{var t;if(!e)return;let i=Yv(e.payload);if(this._encryptDataStream&&this._encryptDataStreamIv&&this._encryptDataStreamKey&&window.crypto.subtle&&Dn(t=[\"aes-128-gcm2\",\"aes-256-gcm2\"]).call(t,this._encryptionMode)){if(e.payload.length<Fy)throw new Sb(nv.UNEXPECTED_RESPONSE,\"payload length \".concat(e.payload.length,\" is less than header length \").concat(Fy));const t=await async function(e,t,i){const n=i.subarray(0,Fy),r=n.slice(8,Fy),o=(r[0]<<8)+r[1],s=(n[6]<<8)+n[7],a=await window.crypto.subtle.decrypt({name:\"AES-GCM\",iv:e,tagLength:Uy,additionalData:new Uint8Array(ay(o,2))},t,i.subarray(Fy));return new Uint8Array(a).subarray(0,s)}(this._encryptDataStreamIv,this._encryptDataStreamKey,i);i=t}let n=0;if(e.ordered||e.syncWithAudio){const t=this._p2pChannel.getStats(),i=this.remoteUsers.find((t=>t.uid===e.uid)),r=null==t?void 0:t.audioRecv.find((e=>e.ssrc===(null==i?void 0:i._audioSSRC)));n=null==r?void 0:r.jitterBufferMs}null==n&&(n=0),AF(Sj(Sj({},e),{},{payload:i}),n,{id:this._clientId,onStreamMessage:\"function\"==typeof this.onStreamMessage?this.onStreamMessage.bind(this):void 0,safeEmit:this.safeEmit.bind(this)})})),this._gateway.signal.on(mb.ON_CRYPT_ERROR,(()=>{Kv((()=>{Qy.warning(\"[\".concat(this._clientId,\"] on crypt error\")),this.safeEmit(Nv.CRYPT_ERROR)}),this._sessionId)})),this._gateway.signal.on(mb.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire),this._gateway.signal.on(mb.ON_TOKEN_PRIVILEGE_DID_EXPIRE,(()=>{Qy.warning(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeDidExpire, please get new token and join again\")),this._gateway.leave(!0,Av.TOKEN_EXPIRE),this.safeEmit(Nv.ON_TOKEN_PRIVILEGE_DID_EXPIRE),this._reset()})),this._gateway.signal.on(mb.ON_STREAM_FALLBACK_UPDATE,(e=>{Qy.debug(\"[\".concat(this._clientId,\"] stream fallback peerId: \").concat(e.stream_id,\", attr: \").concat(e.stream_type)),this.safeEmit(Nv.STREAM_FALLBACK,e.stream_id,1===e.stream_type?\"fallback\":\"recover\")})),this._gateway.signal.on(mb.ON_PUBLISH_STREAM,(e=>{this.uid===this._uid&&(this._p2pChannel.reportPublishEvent(!0,null,void 0,!1,JSON.stringify({proxy:e.proxy})),Qy.info(\"[\".concat(this._clientId,\"] on publish stream, \").concat(JSON.stringify(e))))})),this._gateway.signal.on(mb.ENABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!0)})),this._gateway.signal.on(mb.DISABLE_LOCAL_VIDEO,(e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!1)})),this._gateway.signal.on(pb.REQUEST_TIMEOUT,((e,t)=>{if(this._joinInfo)switch(e){case _b.PUBLISH:{if(!t)return;const e=t.ortc;if(e){var i,n;const r=e.some((e=>{let{stream_type:t}=e;return t===Mb.Audio})),o=e.some((e=>{let{stream_type:t}=e;return t!==Mb.Audio})),s=e.some((e=>{let{stream_type:t}=e;return t===Mb.Screen||t===Mb.ScreenLow}));\"offer\"===t.state&&sA.publish(this._joinInfo.sid,{eventElapse:jU.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:!1,ec:nv.TIMEOUT,audio:r,video:o,p2pid:t.p2p_id,publishRequestid:this.store.pubId,screenshare:s,audioName:r?null===(i=e.find((e=>{let{stream_type:t}=e;return t===Mb.Audio})))||void 0===i||null===(i=i.ssrcs[0])||void 0===i?void 0:i.ssrcId.toString():void 0,videoName:o?null===(n=e.find((e=>{let{stream_type:t}=e;return t!==Mb.Audio})))||void 0===n||null===(n=n.ssrcs[0])||void 0===n?void 0:n.ssrcId.toString():void 0})}break}case _b.SUBSCRIBE:t&&sA.subscribe(this._joinInfo.sid,{succ:!1,ec:nv.TIMEOUT,audio:t.stream_type===Yb.AUDIO,video:t.stream_type===Yb.VIDEO,peerid:t.stream_id,subscribeRequestid:t.ssrcId,p2pid:this.store.p2pId,eventElapse:jU.measureFromSubscribeStart(this.store.clientId,t.ssrcId),preSsrc:this._p2pChannel.isPreSubScribe(t.ssrcId)})}})),this._gateway.signal.on(mb.ON_P2P_OK,(e=>{this.uid,this._uid})),this._gateway.signal.on(mb.ON_PUBLISHED_USER_LIST,(e=>{if(null==e||!e.users)return;Dy(\"BLOCK_LOCAL_CLIENT\")&&(e.users=e.users.filter((e=>!uA(e.string_id||e.stream_id,this.channelName))));const t=[],i=[];for(const n of e.users){let e=this._users.find((e=>e._uintid===n.stream_id));e?e._trust_in_room_=!0:(e=new iV(n.string_id||n.stream_id,n.stream_id),this._users.push(e),0===this.getListeners(Nv.PUBLISHED_USER_LIST).length&&(Qy.debug(\"[\".concat(this._clientId,\"] user online\"),n.stream_id),this.safeEmit(Nv.USER_JOINED,e)));const r=Vb.Audio&n.stream_type,o=(Vb.Video|Vb.LwoVideo)&n.stream_type,s=0!=(65280&n.stream_type),a=r&&e.hasAudio,c=o&&e.hasVideo;o&&(e._trust_video_stream_added_state_=!0,e._video_added_=!0,e._videoSSRC=n.video_ssrc,e._rtxSsrcId=n.video_rtx),r&&(e._trust_audio_stream_added_state_=!0,e._audio_added_=!0,e._audioSSRC=n.audio_ssrc),r&&!a&&0===this.getListeners(Nv.PUBLISHED_USER_LIST).length&&(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published audio\")),this.safeEmit(Nv.USER_PUBLISHED,e,\"audio\")),o&&!c&&0===this.getListeners(Nv.PUBLISHED_USER_LIST).length&&(Qy.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published video\")),this.safeEmit(Nv.USER_PUBLISHED,e,\"video\")),(r&&!a||o&&!c||s)&&t.push(e),o&&this._p2pChannel.hasPendingRemoteMedia(e,\"video\")&&i.push({user:e,mediaType:\"video\"}),r&&this._p2pChannel.hasPendingRemoteMedia(e,\"audio\")&&i.push({user:e,mediaType:\"audio\"})}i.length>0&&(Qy.debug(\"[\".concat(this._clientId,\"] RE massSubscribe after reconnect \").concat(i.map((e=>\"user: \".concat(e.user.uid,\", mediaType: \").concat(e.mediaType))).join(\"; \"),\" \")),this.massSubscribe(i).catch((e=>{Qy.error(\"[\".concat(this._clientId,\"] mass resubscribe error\"),e.toString())}))),this.getListeners(Nv.PUBLISHED_USER_LIST).length>0?Dy(\"ENABLE_DATASTREAM_2\")?this._pendingPublishedUsers=t:(Qy.info(\"[\".concat(this._clientId,\"] client emit user-list event, users: \").concat(t.map((e=>e.uid)).join(\", \"))),this.safeEmit(Nv.PUBLISHED_USER_LIST,t)):Qy.info(\"[\".concat(this._clientId,\"] client not emit user-list event case there is no user-list listener, users: \").concat(t.map((e=>e.uid)).join(\", \")))})),this._gateway.signal.on(mb.ON_RTP_CAPABILITY_CHANGE,(e=>{const{video_codec:t}=e;this._p2pChannel instanceof hF&&this._p2pChannel.updateRemoteRTPCapabilities(t.map((e=>e.toLowerCase())).filter((e=>{var t;return Dn(t=Object.keys(My)).call(t,e)})))}))}_handleP2PEvents(){this._gateway.signal.on(mb.ON_USER_OFFLINE,(()=>{this._p2pChannel.disconnectForReconnect()})),this._gateway.signal.on(sw.PUBLISH,((e,t,i)=>{const{uid:n}=e;e.forEach((e=>{const{kind:r,ssrcs:o,mid:s,isMuted:a}=e;this._handleP2PAddAudioOrVideoStream(r,n,o[0].ssrcId,s);const c=this._users.find((e=>e.uid===n));return c&&this._p2pChannel instanceof RV?this._p2pChannel.mockSubscribe(c,r,o[0].ssrcId,s).then((()=>{t()})).catch(i):t(),this._handleMuteStream(n,r,!!a)}))})),this._gateway.signal.on(sw.CALL,(async(e,t,i)=>{if(this._p2pChannel instanceof RV)try{var n;t(await this._p2pChannel.startP2P({turnServer:null===(n=this._joinInfo)||void 0===n?void 0:n.turnServer},e))}catch(e){i(e)}})),this._gateway.signal.on(pb.P2P_CONNECTION,(async e=>{this._p2pChannel instanceof RV&&await this._p2pChannel.p2pConnect(e)})),this._gateway.signal.on(sw.UNPUBLISH,(async(e,t,i)=>{if(this._p2pChannel instanceof RV){const{unpubMsg:n,uid:r}=e,o=this._users.find((e=>e.uid===r));if(!o)return Qy.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(r)),void t();try{n.forEach((async e=>{let{stream_type:t}=e;const i=t===Mb.Audio?Yb.AUDIO:Yb.VIDEO;await this._p2pChannel.unsubscribe(o,i),this._handleMuteStream(r,i,!0)})),t()}catch(e){i(e)}}})),this._gateway.signal.on(sw.CONTROL,(async(e,t)=>{const{action:i}=e;switch(i){case cw.MUTE_LOCAL_VIDEO:this._handleMuteStream(t,Yb.VIDEO,!0);break;case cw.MUTE_LOCAL_AUDIO:this._handleMuteStream(t,Yb.AUDIO,!0);break;case cw.UNMUTE_LOCAL_VIDEO:this._handleP2PAddAudioOrVideoStream(\"video\",t),this._handleMuteStream(t,Yb.VIDEO,!1);break;case cw.UNMUTE_LOCAL_AUDIO:this._handleP2PAddAudioOrVideoStream(\"audio\",t),this._handleMuteStream(t,Yb.AUDIO,!1)}})),this._gateway.signal.on(sw.RESTART_ICE,(async(e,t,i)=>{if(this._p2pChannel instanceof RV)try{const{direction:i,iceParameter:n}=e;if(i!==fb.SEND_ONLY||n){t(await this._p2pChannel.restartICE(i,n))}else this._p2pChannel.handleDisconnect(i),t()}catch(e){i(e)}})),this._gateway.signal.on(sw.CANDIDATE,(e=>{if(this._p2pChannel instanceof RV){const{candidate:t,direction:i}=e;this._p2pChannel.addRemoteCandidate(t,i)}})),this._p2pChannel.on(Qb.RequestP2PRestartICE,(async(e,t,i)=>{try{const{direction:i}=e;t(await this._gateway.sendExtensionMessage(sw.RESTART_ICE,e,i===fb.SEND_ONLY))}catch(e){i(e)}})),this._p2pChannel.on(Qb.LocalCandidate,(e=>{this._gateway.sendExtensionMessage(sw.CANDIDATE,JSON.stringify(e),!0)})),this._p2pChannel.on(Qb.RequestP2PMuteLocal,(async(e,t,i)=>{try{await this._gateway.sendExtensionMessage(sw.CONTROL,e,!0),t()}catch(e){i(e)}})),this._p2pChannel.on(Qb.RequestP2PUnmuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===nv.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(Qb.RequestP2PMuteRemote,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteRemote(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===nv.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(Qb.StateChange,((e,t)=>{t===Xb.Connected&&this._p2pChannel.republish()}))}_handleP2PChannelEvents(){this._p2pChannel.on(Qb.RequestMuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===nv.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(Qb.RequestUnmuteLocal,(async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===nv.DISCONNECT_P2P?t():i(e)}else t()})),this._p2pChannel.on(Qb.RequestRePublish,((e,t,i)=>{this.publish(e,!1).then(t).catch(i)})),this._p2pChannel.on(Qb.RequestRePublishDataChannel,((e,t,i)=>{Gh.all(e.map((async e=>{const t=await this._p2pChannel.publishDataChannel([e]);try{t.forEach((e=>{this._uid&&this._gateway.publishDataChannel(this._uid,e,!0)}))}catch(e){if(e.code!==nv.DISCONNECT_P2P)throw e}}))).then(t).catch(i)})),this._p2pChannel.on(Qb.RequestReSubscribe,(async(e,t,i)=>{try{for(const{user:t,kind:i}of e)i===Yb.VIDEO?await this.subscribe(t,\"video\"):await this.subscribe(t,\"audio\");t()}catch(e){i(e)}})),this._p2pChannel.on(Qb.RequestUpload,((e,t)=>{this._gateway.upload(e,t)})),this._p2pChannel.on(Qb.RequestUploadStats,(e=>{this._gateway.uploadWRTCStats(e)})),this._p2pChannel.on(Qb.MediaReconnectStart,(e=>{this.safeEmit(Nv.MEDIA_RECONNECT_START,e)})),this._p2pChannel.on(Qb.MediaReconnectEnd,(e=>{this.safeEmit(Nv.MEDIA_RECONNECT_END,e)})),this._p2pChannel.on(Qb.NeedSignalRTT,(e=>{e(this._gateway.getSignalRTT())})),this._p2pChannel.on(Qb.RequestRestartICE,(async e=>{if(this._p2pChannel instanceof RV)return;const t=await this._p2pChannel.restartICE(e),i=await t.next();if(i.done)return;const n=i.value;let r;try{r=await this._gateway.restartICE({iceParameters:n})}catch(e){return void t.throw(e)}const{iceParameters:o}=function(e){const t=e.iceParameters;return{iceParameters:{iceUfrag:t.iceUfrag,icePwd:t.icePwd}}}(r);await t.next({remoteIceParameters:o})})),this._p2pChannel.on(Qb.RequestReconnect,(async()=>{this._gateway.reconnect()})),this._p2pChannel.on(Qb.RequestReconnectPC,(async()=>{var e;const{iceParameters:t,dtlsParameters:i,rtpCapabilities:n}=await this._p2pChannel.startP2PConnection({turnServer:null===(e=this._joinInfo)||void 0===e?void 0:e.turnServer}),{gatewayEstablishParams:r,gatewayAddress:o}=await this._gateway.reconnectPC({iceParameters:t,dtlsParameters:i,rtpCapabilities:n}),s=OM(r,o);await this._p2pChannel.connect(s),await this._p2pChannel.republish(),await this._p2pChannel.reSubscribe()})),this._p2pChannel.on(Qb.RequestUnpublishForReconnectPC,(async(e,t,i)=>{this._joinInfo&&void 0!==this._uid?(await this._gateway.unpublish(e,this._uid),t()):i()})),this._p2pChannel.on(Qb.P2PLost,(()=>{this.safeEmit(Nv.P2P_LOST,this.store.uid)})),this._p2pChannel.on(Qb.UpdateVideoEncoder,(e=>{e._encoderConfig&&this._gateway.setVideoProfile(e._encoderConfig)})),this._p2pChannel.on(Qb.ConnectionTypeChange,(e=>{this.safeEmit(Nv.IS_USING_CLOUD_PROXY,e)})),this._p2pChannel.on(Qb.RequestLowStreamParameter,(e=>{e(this._lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50})})),this._p2pChannel.on(Qb.QueryClientConnectionState,(e=>{e(this.connectionState)}))}getKeyMetrics(){return this.store.keyMetrics}async enableContentInspect(e){if(!this._joinInfo||\"CONNECTED\"!==this.connectionState)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] can not create content inspect, please join channel first\"));if(this._inspect)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Inspect content service already in connecting/connected state\"));try{const i=(t={config:e},mF(\"ContentInspect\").create(t));this._inspect=i,this.handleVideoInspectEvents(i);const{appId:n,cname:r,sid:o,token:s,uid:a,cid:c,vid:d}=this._joinInfo;await i.init({appId:n,areaCode:\"\",cname:r,sid:o,token:s,uid:a,cid:c,vid:d?Number(d):0},_y)}catch(e){throw Array.isArray(e)?e[0]:e}var t}handleVideoInspectEvents(e){e.on(ew.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(Nv.CONTENT_INSPECT_CONNECTION_STATE_CHANGE,t,i),i===Zb.CONNECTED){if(\"CONNECTED\"!==this.connectionState)return void this.safeEmit(Nv.CONTENT_INSPECT_ERROR,new Sb(nv.OPERATION_ABORTED,\"Content inspect was cancelled because it left the channel\"));e.inspectImage()}})),e.on(ew.INSPECT_RESULT,((e,t)=>{var i;if((null==t?void 0:t.code)===nv.INVALID_OPERATION&&\"DISCONNECTED\"===this.connectionState)return Qy.debug(\"Stop inspect content because that has left channel\"),null==this||null===(i=this._inspect)||void 0===i||i.close(),void(this._inspect=void 0);this.safeEmit(Nv.CONTENT_INSPECT_RESULT,e,t)})),e.on(ew.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}async disableContentInspect(){if(!this._inspect)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] inspectVideoContent not started\"));try{this._inspect.close(),this._inspect=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}async setImageModeration(e,t){if(ov(e,\"enabled\"),e){if(!t)throw new Sb(nv.INVALID_PARAMS,\"config is required\");if(OB(t),!this._joinInfo)throw new Sb(nv.INVALID_OPERATION,\"can not create image moderation, please join channel first\");try{if(this._moderation)this._moderation.updateConfig(t);else{const e=(i={config:t},mF(\"ImageModeration\").create(i));this._moderation=e,this.handleImageModerationEvents(e);const{appId:n,cname:r,sid:o,token:s,uid:a,cid:c,vid:d}=this._joinInfo;await e.init({appId:n,areaCode:\"\",cname:r,sid:o,token:s,uid:a,cid:c,vid:d?Number(d):0},_y)}}catch(e){throw Array.isArray(e)?e[0]:e}}else{var i;if(!this._moderation)throw new Sb(nv.INVALID_OPERATION,\"[\".concat(this._clientId,\"] image moderation not started\"));try{this._moderation.close(),this._moderation.removeAllListeners(),this._moderation=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}}handleImageModerationEvents(e){e.on(rw.CONNECTION_STATE_CHANGE,((t,i)=>{if(this.safeEmit(Nv.IMAGE_MODERATION_CONNECTION_STATE_CHANGE,t,i),t===nw.CONNECTED){if(\"CONNECTED\"!==this.connectionState)throw this.setImageModeration(!1),new Sb(nv.OPERATION_ABORTED,\"Image moderation was cancelled because it left the channel\");e.inspectImage()}})),e.on(rw.CLIENT_LOCAL_VIDEO_TRACK,(e=>{e(this.localTracks.filter((e=>\"video\"===e.trackMediaType))[0])}))}setP2PTransport(e){if(function(e){sv(e,\"transport\",[\"default\",\"auto\",\"relay\",\"sd-rtn\"])}(e),\"p2p\"!==this.mode)throw new Sb(nv.INVALID_OPERATION,\"only p2p mode can set p2pTransport\");this.store.p2pTransport=e,Qy.info(\"[\".concat(this._clientId,\"] set client p2pTransport to \").concat(e))}getJoinChannelServiceRecords(){return Qy.debug(\"getJoinChannelServiceRecords\"),this.store.joinChannelServiceRecords}async setPublishAudioFilterEnabled(e){ov(e,\"enabled\"),Ny(\"ENABLE_PUBLISH_AUDIO_FILTER\",e),this._joinInfo&&await this._gateway.setPublishAudioFilterEnabled(e)}_handleResetAddStream(e,t){switch(t){case\"audio\":e._audio_added_=!1,e._trust_audio_stream_added_state_=!0;break;case\"video\":e._video_added_=!1,e._trust_video_stream_added_state_=!0}}},rb(fj.prototype,\"leave\",[DB],Object.getOwnPropertyDescriptor(fj.prototype,\"leave\"),fj.prototype),rb(fj.prototype,\"publish\",[PB],Object.getOwnPropertyDescriptor(fj.prototype,\"publish\"),fj.prototype),rb(fj.prototype,\"unpublish\",[LB],Object.getOwnPropertyDescriptor(fj.prototype,\"unpublish\"),fj.prototype),rb(fj.prototype,\"subscribe\",[kB],Object.getOwnPropertyDescriptor(fj.prototype,\"subscribe\"),fj.prototype),rb(fj.prototype,\"presubscribe\",[MB],Object.getOwnPropertyDescriptor(fj.prototype,\"presubscribe\"),fj.prototype),rb(fj.prototype,\"massSubscribe\",[UB],Object.getOwnPropertyDescriptor(fj.prototype,\"massSubscribe\"),fj.prototype),rb(fj.prototype,\"unsubscribe\",[xB],Object.getOwnPropertyDescriptor(fj.prototype,\"unsubscribe\"),fj.prototype),rb(fj.prototype,\"massUnsubscribe\",[VB],Object.getOwnPropertyDescriptor(fj.prototype,\"massUnsubscribe\"),fj.prototype),rb(fj.prototype,\"setLowStreamParameter\",[FB],Object.getOwnPropertyDescriptor(fj.prototype,\"setLowStreamParameter\"),fj.prototype),rb(fj.prototype,\"enableDualStream\",[BB],Object.getOwnPropertyDescriptor(fj.prototype,\"enableDualStream\"),fj.prototype),rb(fj.prototype,\"disableDualStream\",[jB],Object.getOwnPropertyDescriptor(fj.prototype,\"disableDualStream\"),fj.prototype),rb(fj.prototype,\"setClientRole\",[GB],Object.getOwnPropertyDescriptor(fj.prototype,\"setClientRole\"),fj.prototype),rb(fj.prototype,\"setProxyServer\",[WB],Object.getOwnPropertyDescriptor(fj.prototype,\"setProxyServer\"),fj.prototype),rb(fj.prototype,\"setTurnServer\",[HB],Object.getOwnPropertyDescriptor(fj.prototype,\"setTurnServer\"),fj.prototype),rb(fj.prototype,\"setLicense\",[KB],Object.getOwnPropertyDescriptor(fj.prototype,\"setLicense\"),fj.prototype),rb(fj.prototype,\"startProxyServer\",[YB],Object.getOwnPropertyDescriptor(fj.prototype,\"startProxyServer\"),fj.prototype),rb(fj.prototype,\"stopProxyServer\",[qB],Object.getOwnPropertyDescriptor(fj.prototype,\"stopProxyServer\"),fj.prototype),rb(fj.prototype,\"setLocalAccessPointsV2\",[zB],Object.getOwnPropertyDescriptor(fj.prototype,\"setLocalAccessPointsV2\"),fj.prototype),rb(fj.prototype,\"setLocalAccessPoints\",[JB],Object.getOwnPropertyDescriptor(fj.prototype,\"setLocalAccessPoints\"),fj.prototype),rb(fj.prototype,\"setRemoteDefaultVideoStreamType\",[XB],Object.getOwnPropertyDescriptor(fj.prototype,\"setRemoteDefaultVideoStreamType\"),fj.prototype),rb(fj.prototype,\"setRemoteVideoStreamType\",[QB],Object.getOwnPropertyDescriptor(fj.prototype,\"setRemoteVideoStreamType\"),fj.prototype),rb(fj.prototype,\"setStreamFallbackOption\",[ZB],Object.getOwnPropertyDescriptor(fj.prototype,\"setStreamFallbackOption\"),fj.prototype),rb(fj.prototype,\"setEncryptionConfig\",[$B],Object.getOwnPropertyDescriptor(fj.prototype,\"setEncryptionConfig\"),fj.prototype),rb(fj.prototype,\"renewToken\",[ej],Object.getOwnPropertyDescriptor(fj.prototype,\"renewToken\"),fj.prototype),rb(fj.prototype,\"enableAudioVolumeIndicator\",[tj],Object.getOwnPropertyDescriptor(fj.prototype,\"enableAudioVolumeIndicator\"),fj.prototype),rb(fj.prototype,\"startLiveStreaming\",[ij],Object.getOwnPropertyDescriptor(fj.prototype,\"startLiveStreaming\"),fj.prototype),rb(fj.prototype,\"setLiveTranscoding\",[nj],Object.getOwnPropertyDescriptor(fj.prototype,\"setLiveTranscoding\"),fj.prototype),rb(fj.prototype,\"stopLiveStreaming\",[rj],Object.getOwnPropertyDescriptor(fj.prototype,\"stopLiveStreaming\"),fj.prototype),rb(fj.prototype,\"startChannelMediaRelay\",[oj],Object.getOwnPropertyDescriptor(fj.prototype,\"startChannelMediaRelay\"),fj.prototype),rb(fj.prototype,\"updateChannelMediaRelay\",[sj],Object.getOwnPropertyDescriptor(fj.prototype,\"updateChannelMediaRelay\"),fj.prototype),rb(fj.prototype,\"stopChannelMediaRelay\",[aj],Object.getOwnPropertyDescriptor(fj.prototype,\"stopChannelMediaRelay\"),fj.prototype),rb(fj.prototype,\"sendCustomReportMessage\",[cj],Object.getOwnPropertyDescriptor(fj.prototype,\"sendCustomReportMessage\"),fj.prototype),rb(fj.prototype,\"pickSVCLayer\",[dj],Object.getOwnPropertyDescriptor(fj.prototype,\"pickSVCLayer\"),fj.prototype),rb(fj.prototype,\"setRTMConfig\",[lj],Object.getOwnPropertyDescriptor(fj.prototype,\"setRTMConfig\"),fj.prototype),rb(fj.prototype,\"enableContentInspect\",[uj],Object.getOwnPropertyDescriptor(fj.prototype,\"enableContentInspect\"),fj.prototype),rb(fj.prototype,\"disableContentInspect\",[hj],Object.getOwnPropertyDescriptor(fj.prototype,\"disableContentInspect\"),fj.prototype),rb(fj.prototype,\"setImageModeration\",[pj],Object.getOwnPropertyDescriptor(fj.prototype,\"setImageModeration\"),fj.prototype),rb(fj.prototype,\"setP2PTransport\",[_j],Object.getOwnPropertyDescriptor(fj.prototype,\"setP2PTransport\"),fj.prototype),rb(fj.prototype,\"getJoinChannelServiceRecords\",[Ej],Object.getOwnPropertyDescriptor(fj.prototype,\"getJoinChannelServiceRecords\"),fj.prototype),rb(fj.prototype,\"setPublishAudioFilterEnabled\",[mj],Object.getOwnPropertyDescriptor(fj.prototype,\"setPublishAudioFilterEnabled\"),fj.prototype),fj);class Rj{constructor(e,t){og(this,\"id\",0),og(this,\"element\",void 0),og(this,\"peerPair\",void 0),og(this,\"context\",void 0),og(this,\"audioPlayerElement\",void 0),og(this,\"audioTrack\",void 0),Rj.count+=1,this.id=Rj.count,this.element=e,this.context=t}initPeers(){this.peerPair=[new RTCPeerConnection,new RTCPeerConnection],this.peerPair[1].ontrack=e=>{const t=document.createElement(\"audio\");t.srcObject=new MediaStream([e.track]),t.play(),this.audioPlayerElement=t}}async switchSdp(){if(!this.peerPair)return;const e=async(e,t)=>{const i=\"offer\"===t?await e.createOffer():await e.createAnswer();return await e.setLocalDescription(i),\"complete\"===e.iceGatheringState?e.localDescription:new Gh((t=>{e.onicegatheringstatechange=()=>{\"complete\"===e.iceGatheringState&&t(e.localDescription)}}))},t=async(e,t)=>await e.setRemoteDescription(t);try{const i=await e(this.peerPair[0],\"offer\");await t(this.peerPair[1],i);const n=await e(this.peerPair[1],\"answer\");await t(this.peerPair[0],n)}catch(e){throw new Sb(nv.LOCAL_AEC_ERROR,e.toString()).print()}}async getTracksFromMediaElement(e){if(this.audioTrack)return this.audioTrack;let t;try{e instanceof HTMLVideoElement&&(e.captureStream?e.captureStream():e.mozCaptureStream()),t=this.context.createMediaStreamDestination();this.context.createMediaElementSource(e).connect(t)}catch(e){throw new Sb(nv.LOCAL_AEC_ERROR,e.toString()).print()}if(!t){throw new Sb(nv.LOCAL_AEC_ERROR,\"no dest node when local aec\").print()}const i=t.stream.getAudioTracks()[0];return this.audioTrack=i,i}getElement(){return this.element}async startEchoCancellation(){this.context.resume(),this.peerPair&&this.close(),this.initPeers();const e=this.element,t=await this.getTracksFromMediaElement(e);this.peerPair&&this.peerPair[0].addTrack(t),await this.switchSdp()}close(){Qy.debug(\"close echo cancellation unit, id is\",this.id),this.audioPlayerElement&&this.audioPlayerElement.pause(),this.peerPair&&this.peerPair.forEach((e=>{e.close()})),this.peerPair=void 0,this.audioPlayerElement=void 0}}var Cj,Ij;og(Rj,\"count\",0);const vj=window.AudioContext||window.webkitAudioContext;const yj=new(Cj=oA({report:sA}),rb((Ij=class{constructor(){og(this,\"units\",[]),og(this,\"context\",void 0)}processExternalMediaAEC(e){if(!this._doesEnvironmentNeedAEC())return Qy.debug(\"the system does not need to process local aec\"),-1;this.context||(this.context=new vj);let t=this.units.find((t=>t&&t.getElement()===e));return t||(t=new Rj(e,this.context),this.units.push(t)),t.startEchoCancellation(),Qy.debug(\"start processing local audio echo cancellation, id is\",t.id),t.id}_doesEnvironmentNeedAEC(){return AI().name!==CI.SAFARI}}).prototype,\"processExternalMediaAEC\",[Cj],Object.getOwnPropertyDescriptor(Ij.prototype,\"processExternalMediaAEC\"),Ij.prototype),Ij);function Aj(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function bj(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Aj(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Aj(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const wj=window||document;function Oj(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!wj)return;const i=$K._cspEventHandlerPointer;if(i&&t)return void console.error(i,t);const n=e=>{if(!(e&&e.blockedURI&&($K.onSecurityPolicyViolation||$K.getListeners(iw.SECURITY_POLICY_VIOLATION).length>0)))return;const t=e.blockedURI;Dy(\"CSP_DETECTED_HOSTNAME_LIST\").some((e=>Dn(t).call(t,e)))&&($K.onSecurityPolicyViolation&&\"function\"==typeof $K.onSecurityPolicyViolation&&$K.onSecurityPolicyViolation(e),$K.getListeners(iw.SECURITY_POLICY_VIOLATION).length>0&&$K.safeEmit(iw.SECURITY_POLICY_VIOLATION,e))};i&&wj.removeEventListener(\"securitypolicyviolation\",i),(t||e&&\"function\"==typeof e||$K.getListeners(iw.SECURITY_POLICY_VIOLATION).length>0)&&wj.addEventListener(\"securitypolicyviolation\",n),$K._cspEventHandlerPointer=n}var Nj=l,Dj=BR,Pj=RegExp.prototype,Lj=function(e){return e===Pj||Nj(Pj,e)?Dj(e):e.flags},kj=i(Lj);function Mj(e){let t=e.length;for(;--t>=0;)e[t]=0}const Uj=256,xj=286,Vj=30,Fj=15,Bj=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),jj=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),Gj=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),Wj=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Hj=new Array(576);Mj(Hj);const Kj=new Array(60);Mj(Kj);const Yj=new Array(512);Mj(Yj);const qj=new Array(256);Mj(qj);const zj=new Array(29);Mj(zj);const Jj=new Array(Vj);function Xj(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}let Qj,Zj,$j;function eG(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}Mj(Jj);const tG=e=>e<256?Yj[e]:Yj[256+(e>>>7)],iG=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},nG=(e,t,i)=>{e.bi_valid>16-i?(e.bi_buf|=t<<e.bi_valid&65535,iG(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=i-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)},rG=(e,t,i)=>{nG(e,i[2*t],i[2*t+1])},oG=(e,t)=>{let i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1},sG=(e,t,i)=>{const n=new Array(16);let r,o,s=0;for(r=1;r<=Fj;r++)s=s+i[r-1]<<1,n[r]=s;for(o=0;o<=t;o++){let t=e[2*o+1];0!==t&&(e[2*o]=oG(n[t]++,t))}},aG=e=>{let t;for(t=0;t<xj;t++)e.dyn_ltree[2*t]=0;for(t=0;t<Vj;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},cG=e=>{e.bi_valid>8?iG(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},dG=(e,t,i,n)=>{const r=2*t,o=2*i;return e[r]<e[o]||e[r]===e[o]&&n[t]<=n[i]},lG=(e,t,i)=>{const n=e.heap[i];let r=i<<1;for(;r<=e.heap_len&&(r<e.heap_len&&dG(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!dG(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n},uG=(e,t,i)=>{let n,r,o,s,a=0;if(0!==e.sym_next)do{n=255&e.pending_buf[e.sym_buf+a++],n+=(255&e.pending_buf[e.sym_buf+a++])<<8,r=e.pending_buf[e.sym_buf+a++],0===n?rG(e,r,t):(o=qj[r],rG(e,o+Uj+1,t),s=Bj[o],0!==s&&(r-=zj[o],nG(e,r,s)),n--,o=tG(n),rG(e,o,i),s=jj[o],0!==s&&(n-=Jj[o],nG(e,n,s)))}while(a<e.sym_next);rG(e,256,t)},hG=(e,t)=>{const i=t.dyn_tree,n=t.stat_desc.static_tree,r=t.stat_desc.has_stree,o=t.stat_desc.elems;let s,a,c,d=-1;for(e.heap_len=0,e.heap_max=573,s=0;s<o;s++)0!==i[2*s]?(e.heap[++e.heap_len]=d=s,e.depth[s]=0):i[2*s+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=d<2?++d:0,i[2*c]=1,e.depth[c]=0,e.opt_len--,r&&(e.static_len-=n[2*c+1]);for(t.max_code=d,s=e.heap_len>>1;s>=1;s--)lG(e,i,s);c=o;do{s=e.heap[1],e.heap[1]=e.heap[e.heap_len--],lG(e,i,1),a=e.heap[1],e.heap[--e.heap_max]=s,e.heap[--e.heap_max]=a,i[2*c]=i[2*s]+i[2*a],e.depth[c]=(e.depth[s]>=e.depth[a]?e.depth[s]:e.depth[a])+1,i[2*s+1]=i[2*a+1]=c,e.heap[1]=c++,lG(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const i=t.dyn_tree,n=t.max_code,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,s=t.stat_desc.extra_bits,a=t.stat_desc.extra_base,c=t.stat_desc.max_length;let d,l,u,h,p,_,E=0;for(h=0;h<=Fj;h++)e.bl_count[h]=0;for(i[2*e.heap[e.heap_max]+1]=0,d=e.heap_max+1;d<573;d++)l=e.heap[d],h=i[2*i[2*l+1]+1]+1,h>c&&(h=c,E++),i[2*l+1]=h,l>n||(e.bl_count[h]++,p=0,l>=a&&(p=s[l-a]),_=i[2*l],e.opt_len+=_*(h+p),o&&(e.static_len+=_*(r[2*l+1]+p)));if(0!==E){do{for(h=c-1;0===e.bl_count[h];)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[c]--,E-=2}while(E>0);for(h=c;0!==h;h--)for(l=e.bl_count[h];0!==l;)u=e.heap[--d],u>n||(i[2*u+1]!==h&&(e.opt_len+=(h-i[2*u+1])*i[2*u],i[2*u+1]=h),l--)}})(e,t),sG(i,d,e.bl_count)},pG=(e,t,i)=>{let n,r,o=-1,s=t[1],a=0,c=7,d=4;for(0===s&&(c=138,d=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=s,s=t[2*(n+1)+1],++a<c&&r===s||(a<d?e.bl_tree[2*r]+=a:0!==r?(r!==o&&e.bl_tree[2*r]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,a=0,o=r,0===s?(c=138,d=3):r===s?(c=6,d=3):(c=7,d=4))},_G=(e,t,i)=>{let n,r,o=-1,s=t[1],a=0,c=7,d=4;for(0===s&&(c=138,d=3),n=0;n<=i;n++)if(r=s,s=t[2*(n+1)+1],!(++a<c&&r===s)){if(a<d)do{rG(e,r,e.bl_tree)}while(0!=--a);else 0!==r?(r!==o&&(rG(e,r,e.bl_tree),a--),rG(e,16,e.bl_tree),nG(e,a-3,2)):a<=10?(rG(e,17,e.bl_tree),nG(e,a-3,3)):(rG(e,18,e.bl_tree),nG(e,a-11,7));a=0,o=r,0===s?(c=138,d=3):r===s?(c=6,d=3):(c=7,d=4)}};let EG=!1;const mG=(e,t,i,n)=>{nG(e,0+(n?1:0),3),cG(e),iG(e,i),iG(e,~i),i&&e.pending_buf.set(e.window.subarray(t,t+i),e.pending),e.pending+=i};var fG=e=>{EG||((()=>{let e,t,i,n,r;const o=new Array(16);for(i=0,n=0;n<28;n++)for(zj[n]=i,e=0;e<1<<Bj[n];e++)qj[i++]=n;for(qj[i-1]=n,r=0,n=0;n<16;n++)for(Jj[n]=r,e=0;e<1<<jj[n];e++)Yj[r++]=n;for(r>>=7;n<Vj;n++)for(Jj[n]=r<<7,e=0;e<1<<jj[n]-7;e++)Yj[256+r++]=n;for(t=0;t<=Fj;t++)o[t]=0;for(e=0;e<=143;)Hj[2*e+1]=8,e++,o[8]++;for(;e<=255;)Hj[2*e+1]=9,e++,o[9]++;for(;e<=279;)Hj[2*e+1]=7,e++,o[7]++;for(;e<=287;)Hj[2*e+1]=8,e++,o[8]++;for(sG(Hj,287,o),e=0;e<Vj;e++)Kj[2*e+1]=5,Kj[2*e]=oG(e,5);Qj=new Xj(Hj,Bj,257,xj,Fj),Zj=new Xj(Kj,jj,0,Vj,Fj),$j=new Xj(new Array(0),Gj,0,19,7)})(),EG=!0),e.l_desc=new eG(e.dyn_ltree,Qj),e.d_desc=new eG(e.dyn_dtree,Zj),e.bl_desc=new eG(e.bl_tree,$j),e.bi_buf=0,e.bi_valid=0,aG(e)},TG=(e,t,i,n)=>{let r,o,s=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<Uj;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),hG(e,e.l_desc),hG(e,e.d_desc),s=(e=>{let t;for(pG(e,e.dyn_ltree,e.l_desc.max_code),pG(e,e.dyn_dtree,e.d_desc.max_code),hG(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*Wj[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,o=e.static_len+3+7>>>3,o<=r&&(r=o)):r=o=i+5,i+4<=r&&-1!==t?mG(e,t,i,n):4===e.strategy||o===r?(nG(e,2+(n?1:0),3),uG(e,Hj,Kj)):(nG(e,4+(n?1:0),3),((e,t,i,n)=>{let r;for(nG(e,t-257,5),nG(e,i-1,5),nG(e,n-4,4),r=0;r<n;r++)nG(e,e.bl_tree[2*Wj[r]+1],3);_G(e,e.dyn_ltree,t-1),_G(e,e.dyn_dtree,i-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,s+1),uG(e,e.dyn_ltree,e.dyn_dtree)),aG(e),n&&cG(e)},SG=(e,t,i)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=i,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(qj[i]+Uj+1)]++,e.dyn_dtree[2*tG(t)]++),e.sym_next===e.sym_end),gG=e=>{nG(e,2,3),rG(e,256,Hj),(e=>{16===e.bi_valid?(iG(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)},RG={_tr_init:fG,_tr_stored_block:mG,_tr_flush_block:TG,_tr_tally:SG,_tr_align:gG};var CG=(e,t,i,n)=>{let r=65535&e|0,o=e>>>16&65535|0,s=0;for(;0!==i;){s=i>2e3?2e3:i,i-=s;do{r=r+t[n++]|0,o=o+r|0}while(--s);r%=65521,o%=65521}return r|o<<16|0};const IG=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var vG=(e,t,i,n)=>{const r=IG,o=n+i;e^=-1;for(let i=n;i<o;i++)e=e>>>8^r[255&(e^t[i])];return-1^e},yG={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},AG={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:bG,_tr_stored_block:wG,_tr_flush_block:OG,_tr_tally:NG,_tr_align:DG}=RG,{Z_NO_FLUSH:PG,Z_PARTIAL_FLUSH:LG,Z_FULL_FLUSH:kG,Z_FINISH:MG,Z_BLOCK:UG,Z_OK:xG,Z_STREAM_END:VG,Z_STREAM_ERROR:FG,Z_DATA_ERROR:BG,Z_BUF_ERROR:jG,Z_DEFAULT_COMPRESSION:GG,Z_FILTERED:WG,Z_HUFFMAN_ONLY:HG,Z_RLE:KG,Z_FIXED:YG,Z_DEFAULT_STRATEGY:qG,Z_UNKNOWN:zG,Z_DEFLATED:JG}=AG,XG=286,QG=30,ZG=19,$G=2*XG+1,eW=15,tW=258,iW=262,nW=42,rW=113,oW=666,sW=(e,t)=>(e.msg=yG[t],t),aW=e=>2*e-(e>4?9:0),cW=e=>{let t=e.length;for(;--t>=0;)e[t]=0},dW=e=>{let t,i,n,r=e.w_size;t=e.hash_size,n=t;do{i=e.head[--n],e.head[n]=i>=r?i-r:0}while(--t);t=r,n=t;do{i=e.prev[--n],e.prev[n]=i>=r?i-r:0}while(--t)};let lW=(e,t,i)=>(t<<e.hash_shift^i)&e.hash_mask;const uW=e=>{const t=e.state;let i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))},hW=(e,t)=>{OG(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,uW(e.strm)},pW=(e,t)=>{e.pending_buf[e.pending++]=t},_W=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},EW=(e,t,i,n)=>{let r=e.avail_in;return r>n&&(r=n),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),i),1===e.state.wrap?e.adler=CG(e.adler,t,r,i):2===e.state.wrap&&(e.adler=vG(e.adler,t,r,i)),e.next_in+=r,e.total_in+=r,r)},mW=(e,t)=>{let i,n,r=e.max_chain_length,o=e.strstart,s=e.prev_length,a=e.nice_match;const c=e.strstart>e.w_size-iW?e.strstart-(e.w_size-iW):0,d=e.window,l=e.w_mask,u=e.prev,h=e.strstart+tW;let p=d[o+s-1],_=d[o+s];e.prev_length>=e.good_match&&(r>>=2),a>e.lookahead&&(a=e.lookahead);do{if(i=t,d[i+s]===_&&d[i+s-1]===p&&d[i]===d[o]&&d[++i]===d[o+1]){o+=2,i++;do{}while(d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&d[++o]===d[++i]&&o<h);if(n=tW-(h-o),o=h-tW,n>s){if(e.match_start=t,s=n,n>=a)break;p=d[o+s-1],_=d[o+s]}}}while((t=u[t&l])>c&&0!=--r);return s<=e.lookahead?s:e.lookahead},fW=e=>{const t=e.w_size;let i,n,r;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-iW)&&(e.window.set(e.window.subarray(t,t+t-n),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),dW(e),n+=t),0===e.strm.avail_in)break;if(i=EW(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=i,e.lookahead+e.insert>=3)for(r=e.strstart-e.insert,e.ins_h=e.window[r],e.ins_h=lW(e,e.ins_h,e.window[r+1]);e.insert&&(e.ins_h=lW(e,e.ins_h,e.window[r+3-1]),e.prev[r&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=r,r++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<iW&&0!==e.strm.avail_in)},TW=(e,t)=>{let i,n,r,o=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,s=0,a=e.strm.avail_in;do{if(i=65535,r=e.bi_valid+42>>3,e.strm.avail_out<r)break;if(r=e.strm.avail_out-r,n=e.strstart-e.block_start,i>n+e.strm.avail_in&&(i=n+e.strm.avail_in),i>r&&(i=r),i<o&&(0===i&&t!==MG||t===PG||i!==n+e.strm.avail_in))break;s=t===MG&&i===n+e.strm.avail_in?1:0,wG(e,0,0,s),e.pending_buf[e.pending-4]=i,e.pending_buf[e.pending-3]=i>>8,e.pending_buf[e.pending-2]=~i,e.pending_buf[e.pending-1]=~i>>8,uW(e.strm),n&&(n>i&&(n=i),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+n),e.strm.next_out),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n,e.block_start+=n,i-=n),i&&(EW(e.strm,e.strm.output,e.strm.next_out,i),e.strm.next_out+=i,e.strm.avail_out-=i,e.strm.total_out+=i)}while(0===s);return a-=e.strm.avail_in,a&&(a>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=a&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-a,e.strm.next_in),e.strstart),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),s?4:t!==PG&&t!==MG&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(r=e.window_size-e.strstart,e.strm.avail_in>r&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,r+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),r>e.strm.avail_in&&(r=e.strm.avail_in),r&&(EW(e.strm,e.window,e.strstart,r),e.strstart+=r,e.insert+=r>e.w_size-e.insert?e.w_size-e.insert:r),e.high_water<e.strstart&&(e.high_water=e.strstart),r=e.bi_valid+42>>3,r=e.pending_buf_size-r>65535?65535:e.pending_buf_size-r,o=r>e.w_size?e.w_size:r,n=e.strstart-e.block_start,(n>=o||(n||t===MG)&&t!==PG&&0===e.strm.avail_in&&n<=r)&&(i=n>r?r:n,s=t===MG&&0===e.strm.avail_in&&i===n?1:0,wG(e,e.block_start,i,s),e.block_start+=i,uW(e.strm)),s?3:1)},SW=(e,t)=>{let i,n;for(;;){if(e.lookahead<iW){if(fW(e),e.lookahead<iW&&t===PG)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=lW(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-iW&&(e.match_length=mW(e,i)),e.match_length>=3)if(n=NG(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=lW(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=lW(e,e.ins_h,e.window[e.strstart+1]);else n=NG(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(hW(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===MG?(hW(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(hW(e,!1),0===e.strm.avail_out)?1:2},gW=(e,t)=>{let i,n,r;for(;;){if(e.lookahead<iW){if(fW(e),e.lookahead<iW&&t===PG)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=lW(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-iW&&(e.match_length=mW(e,i),e.match_length<=5&&(e.strategy===WG||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,n=NG(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=lW(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(hW(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=NG(e,0,e.window[e.strstart-1]),n&&hW(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=NG(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===MG?(hW(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(hW(e,!1),0===e.strm.avail_out)?1:2};function RW(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}const CW=[new RW(0,0,0,0,TW),new RW(4,4,8,4,SW),new RW(4,5,16,8,SW),new RW(4,6,32,32,SW),new RW(4,4,16,16,gW),new RW(8,16,32,32,gW),new RW(8,16,128,128,gW),new RW(8,32,128,256,gW),new RW(32,128,258,1024,gW),new RW(32,258,258,4096,gW)];function IW(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=JG,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*$G),this.dyn_dtree=new Uint16Array(2*(2*QG+1)),this.bl_tree=new Uint16Array(2*(2*ZG+1)),cW(this.dyn_ltree),cW(this.dyn_dtree),cW(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(eW+1),this.heap=new Uint16Array(2*XG+1),cW(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*XG+1),cW(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const vW=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==nW&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==rW&&t.status!==oW?1:0},yW=e=>{if(vW(e))return sW(e,FG);e.total_in=e.total_out=0,e.data_type=zG;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?nW:rW,e.adler=2===t.wrap?0:1,t.last_flush=-2,bG(t),xG},AW=e=>{const t=yW(e);return t===xG&&(e=>{e.window_size=2*e.w_size,cW(e.head),e.max_lazy_match=CW[e.level].max_lazy,e.good_match=CW[e.level].good_length,e.nice_match=CW[e.level].nice_length,e.max_chain_length=CW[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=2,e.match_available=0,e.ins_h=0})(e.state),t},bW=(e,t,i,n,r,o)=>{if(!e)return FG;let s=1;if(t===GG&&(t=6),n<0?(s=0,n=-n):n>15&&(s=2,n-=16),r<1||r>9||i!==JG||n<8||n>15||t<0||t>9||o<0||o>YG||8===n&&1!==s)return sW(e,FG);8===n&&(n=9);const a=new IW;return e.state=a,a.strm=e,a.status=nW,a.wrap=s,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=r+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+3-1)/3),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<r+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=3*(a.lit_bufsize-1),a.level=t,a.strategy=o,a.method=i,AW(e)};var wW=(e,t)=>{if(vW(e)||t>UG||t<0)return e?sW(e,FG):FG;const i=e.state;if(!e.output||0!==e.avail_in&&!e.input||i.status===oW&&t!==MG)return sW(e,0===e.avail_out?jG:FG);const n=i.last_flush;if(i.last_flush=t,0!==i.pending){if(uW(e),0===e.avail_out)return i.last_flush=-1,xG}else if(0===e.avail_in&&aW(t)<=aW(n)&&t!==MG)return sW(e,jG);if(i.status===oW&&0!==e.avail_in)return sW(e,jG);if(i.status===nW&&0===i.wrap&&(i.status=rW),i.status===nW){let t=JG+(i.w_bits-8<<4)<<8,n=-1;if(n=i.strategy>=HG||i.level<2?0:i.level<6?1:6===i.level?2:3,t|=n<<6,0!==i.strstart&&(t|=32),t+=31-t%31,_W(i,t),0!==i.strstart&&(_W(i,e.adler>>>16),_W(i,65535&e.adler)),e.adler=1,i.status=rW,uW(e),0!==i.pending)return i.last_flush=-1,xG}if(57===i.status)if(e.adler=0,pW(i,31),pW(i,139),pW(i,8),i.gzhead)pW(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),pW(i,255&i.gzhead.time),pW(i,i.gzhead.time>>8&255),pW(i,i.gzhead.time>>16&255),pW(i,i.gzhead.time>>24&255),pW(i,9===i.level?2:i.strategy>=HG||i.level<2?4:0),pW(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(pW(i,255&i.gzhead.extra.length),pW(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=vG(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69;else if(pW(i,0),pW(i,0),pW(i,0),pW(i,0),pW(i,0),pW(i,9===i.level?2:i.strategy>=HG||i.level<2?4:0),pW(i,3),i.status=rW,uW(e),0!==i.pending)return i.last_flush=-1,xG;if(69===i.status){if(i.gzhead.extra){let t=i.pending,n=(65535&i.gzhead.extra.length)-i.gzindex;for(;i.pending+n>i.pending_buf_size;){let r=i.pending_buf_size-i.pending;if(i.pending_buf.set(i.gzhead.extra.subarray(i.gzindex,i.gzindex+r),i.pending),i.pending=i.pending_buf_size,i.gzhead.hcrc&&i.pending>t&&(e.adler=vG(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex+=r,uW(e),0!==i.pending)return i.last_flush=-1,xG;t=0,n-=r}let r=new Uint8Array(i.gzhead.extra);i.pending_buf.set(r.subarray(i.gzindex,i.gzindex+n),i.pending),i.pending+=n,i.gzhead.hcrc&&i.pending>t&&(e.adler=vG(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex=0}i.status=73}if(73===i.status){if(i.gzhead.name){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=vG(e.adler,i.pending_buf,i.pending-n,n)),uW(e),0!==i.pending)return i.last_flush=-1,xG;n=0}t=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,pW(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=vG(e.adler,i.pending_buf,i.pending-n,n)),i.gzindex=0}i.status=91}if(91===i.status){if(i.gzhead.comment){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=vG(e.adler,i.pending_buf,i.pending-n,n)),uW(e),0!==i.pending)return i.last_flush=-1,xG;n=0}t=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,pW(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=vG(e.adler,i.pending_buf,i.pending-n,n))}i.status=103}if(103===i.status){if(i.gzhead.hcrc){if(i.pending+2>i.pending_buf_size&&(uW(e),0!==i.pending))return i.last_flush=-1,xG;pW(i,255&e.adler),pW(i,e.adler>>8&255),e.adler=0}if(i.status=rW,uW(e),0!==i.pending)return i.last_flush=-1,xG}if(0!==e.avail_in||0!==i.lookahead||t!==PG&&i.status!==oW){let n=0===i.level?TW(i,t):i.strategy===HG?((e,t)=>{let i;for(;;){if(0===e.lookahead&&(fW(e),0===e.lookahead)){if(t===PG)return 1;break}if(e.match_length=0,i=NG(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(hW(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===MG?(hW(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(hW(e,!1),0===e.strm.avail_out)?1:2})(i,t):i.strategy===KG?((e,t)=>{let i,n,r,o;const s=e.window;for(;;){if(e.lookahead<=tW){if(fW(e),e.lookahead<=tW&&t===PG)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,n=s[r],n===s[++r]&&n===s[++r]&&n===s[++r])){o=e.strstart+tW;do{}while(n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&n===s[++r]&&r<o);e.match_length=tW-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(i=NG(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=NG(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(hW(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===MG?(hW(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(hW(e,!1),0===e.strm.avail_out)?1:2})(i,t):CW[i.level].func(i,t);if(3!==n&&4!==n||(i.status=oW),1===n||3===n)return 0===e.avail_out&&(i.last_flush=-1),xG;if(2===n&&(t===LG?DG(i):t!==UG&&(wG(i,0,0,!1),t===kG&&(cW(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),uW(e),0===e.avail_out))return i.last_flush=-1,xG}return t!==MG?xG:i.wrap<=0?VG:(2===i.wrap?(pW(i,255&e.adler),pW(i,e.adler>>8&255),pW(i,e.adler>>16&255),pW(i,e.adler>>24&255),pW(i,255&e.total_in),pW(i,e.total_in>>8&255),pW(i,e.total_in>>16&255),pW(i,e.total_in>>24&255)):(_W(i,e.adler>>>16),_W(i,65535&e.adler)),uW(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?xG:VG)},OW=(e,t)=>{let i=t.length;if(vW(e))return FG;const n=e.state,r=n.wrap;if(2===r||1===r&&n.status!==nW||n.lookahead)return FG;if(1===r&&(e.adler=CG(e.adler,t,i,0)),n.wrap=0,i>=n.w_size){0===r&&(cW(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(i-n.w_size,i),0),t=e,i=n.w_size}const o=e.avail_in,s=e.next_in,a=e.input;for(e.avail_in=i,e.next_in=0,e.input=t,fW(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=lW(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,fW(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=s,e.input=a,e.avail_in=o,n.wrap=r,xG},NW={deflateInit:(e,t)=>bW(e,t,JG,15,8,qG),deflateInit2:bW,deflateReset:AW,deflateResetKeep:yW,deflateSetHeader:(e,t)=>vW(e)||2!==e.state.wrap?FG:(e.state.gzhead=t,xG),deflate:wW,deflateEnd:e=>{if(vW(e))return FG;const t=e.state.status;return e.state=null,t===rW?sW(e,BG):xG},deflateSetDictionary:OW,deflateInfo:\"pako deflate (from Nodeca project)\"};const DW=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var PW={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if(\"object\"!=typeof i)throw new TypeError(i+\"must be non-object\");for(const t in i)DW(i,t)&&(e[t]=i[t])}}return e},flattenChunks:e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i}};let LW=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){LW=!1}const kW=new Uint8Array(256);for(let e=0;e<256;e++)kW[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;kW[254]=kW[254]=1;var MW={string2buf:e=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,o,s=e.length,a=0;for(r=0;r<s;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),a+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(a),o=0,r=0;o<a;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<s&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[o++]=i:i<2048?(t[o++]=192|i>>>6,t[o++]=128|63&i):i<65536?(t[o++]=224|i>>>12,t[o++]=128|i>>>6&63,t[o++]=128|63&i):(t[o++]=240|i>>>18,t[o++]=128|i>>>12&63,t[o++]=128|i>>>6&63,t[o++]=128|63&i);return t},buf2string:(e,t)=>{const i=t||e.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const o=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){o[r++]=t;continue}let s=kW[t];if(s>4)o[r++]=65533,n+=s-1;else{for(t&=2===s?31:3===s?15:7;s>1&&n<i;)t=t<<6|63&e[n++],s--;s>1?o[r++]=65533:t<65536?o[r++]=t:(t-=65536,o[r++]=55296|t>>10&1023,o[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&LW)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i=\"\";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(o,r)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+kW[e[i]]>t?i:t}};var UW=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const xW=Object.prototype.toString,{Z_NO_FLUSH:VW,Z_SYNC_FLUSH:FW,Z_FULL_FLUSH:BW,Z_FINISH:jW,Z_OK:GW,Z_STREAM_END:WW,Z_DEFAULT_COMPRESSION:HW,Z_DEFAULT_STRATEGY:KW,Z_DEFLATED:YW}=AG;function qW(e){this.options=PW.assign({level:HW,method:YW,chunkSize:16384,windowBits:15,memLevel:8,strategy:KW},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new UW,this.strm.avail_out=0;let i=NW.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==GW)throw new Error(yG[i]);if(t.header&&NW.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e=\"string\"==typeof t.dictionary?MW.string2buf(t.dictionary):\"[object ArrayBuffer]\"===xW.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,i=NW.deflateSetDictionary(this.strm,e),i!==GW)throw new Error(yG[i]);this._dict_set=!0}}function zW(e,t){const i=new qW(t);if(i.push(e,!0),i.err)throw i.msg||yG[i.err];return i.result}qW.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize;let r,o;if(this.ended)return!1;for(o=t===~~t?t:!0===t?jW:VW,\"string\"==typeof e?i.input=MW.string2buf(e):\"[object ArrayBuffer]\"===xW.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;)if(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),(o===FW||o===BW)&&i.avail_out<=6)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else{if(r=NW.deflate(i,o),r===WW)return i.next_out>0&&this.onData(i.output.subarray(0,i.next_out)),r=NW.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===GW;if(0!==i.avail_out){if(o>0&&i.next_out>0)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else if(0===i.avail_in)break}else this.onData(i.output)}return!0},qW.prototype.onData=function(e){this.chunks.push(e)},qW.prototype.onEnd=function(e){e===GW&&(this.result=PW.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var JW={Deflate:qW,deflate:zW,deflateRaw:function(e,t){return(t=t||{}).raw=!0,zW(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,zW(e,t)},constants:AG};const XW=16209;var QW=function(e,t){let i,n,r,o,s,a,c,d,l,u,h,p,_,E,m,f,T,S,g,R,C,I,v,y;const A=e.state;i=e.next_in,v=e.input,n=i+(e.avail_in-5),r=e.next_out,y=e.output,o=r-(t-e.avail_out),s=r+(e.avail_out-257),a=A.dmax,c=A.wsize,d=A.whave,l=A.wnext,u=A.window,h=A.hold,p=A.bits,_=A.lencode,E=A.distcode,m=(1<<A.lenbits)-1,f=(1<<A.distbits)-1;e:do{p<15&&(h+=v[i++]<<p,p+=8,h+=v[i++]<<p,p+=8),T=_[h&m];t:for(;;){if(S=T>>>24,h>>>=S,p-=S,S=T>>>16&255,0===S)y[r++]=65535&T;else{if(!(16&S)){if(0==(64&S)){T=_[(65535&T)+(h&(1<<S)-1)];continue t}if(32&S){A.mode=16191;break e}e.msg=\"invalid literal/length code\",A.mode=XW;break e}g=65535&T,S&=15,S&&(p<S&&(h+=v[i++]<<p,p+=8),g+=h&(1<<S)-1,h>>>=S,p-=S),p<15&&(h+=v[i++]<<p,p+=8,h+=v[i++]<<p,p+=8),T=E[h&f];i:for(;;){if(S=T>>>24,h>>>=S,p-=S,S=T>>>16&255,!(16&S)){if(0==(64&S)){T=E[(65535&T)+(h&(1<<S)-1)];continue i}e.msg=\"invalid distance code\",A.mode=XW;break e}if(R=65535&T,S&=15,p<S&&(h+=v[i++]<<p,p+=8,p<S&&(h+=v[i++]<<p,p+=8)),R+=h&(1<<S)-1,R>a){e.msg=\"invalid distance too far back\",A.mode=XW;break e}if(h>>>=S,p-=S,S=r-o,R>S){if(S=R-S,S>d&&A.sane){e.msg=\"invalid distance too far back\",A.mode=XW;break e}if(C=0,I=u,0===l){if(C+=c-S,S<g){g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}}else if(l<S){if(C+=c+l-S,S-=l,S<g){g-=S;do{y[r++]=u[C++]}while(--S);if(C=0,l<g){S=l,g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}}}else if(C+=l-S,S<g){g-=S;do{y[r++]=u[C++]}while(--S);C=r-R,I=y}for(;g>2;)y[r++]=I[C++],y[r++]=I[C++],y[r++]=I[C++],g-=3;g&&(y[r++]=I[C++],g>1&&(y[r++]=I[C++]))}else{C=r-R;do{y[r++]=y[C++],y[r++]=y[C++],y[r++]=y[C++],g-=3}while(g>2);g&&(y[r++]=y[C++],g>1&&(y[r++]=y[C++]))}break}}break}}while(i<n&&r<s);g=p>>3,i-=g,p-=g<<3,h&=(1<<p)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<s?s-r+257:257-(r-s),A.hold=h,A.bits=p};const ZW=15,$W=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),eH=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),tH=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),iH=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var nH=(e,t,i,n,r,o,s,a)=>{const c=a.bits;let d,l,u,h,p,_,E=0,m=0,f=0,T=0,S=0,g=0,R=0,C=0,I=0,v=0,y=null;const A=new Uint16Array(16),b=new Uint16Array(16);let w,O,N,D=null;for(E=0;E<=ZW;E++)A[E]=0;for(m=0;m<n;m++)A[t[i+m]]++;for(S=c,T=ZW;T>=1&&0===A[T];T--);if(S>T&&(S=T),0===T)return r[o++]=20971520,r[o++]=20971520,a.bits=1,0;for(f=1;f<T&&0===A[f];f++);for(S<f&&(S=f),C=1,E=1;E<=ZW;E++)if(C<<=1,C-=A[E],C<0)return-1;if(C>0&&(0===e||1!==T))return-1;for(b[1]=0,E=1;E<ZW;E++)b[E+1]=b[E]+A[E];for(m=0;m<n;m++)0!==t[i+m]&&(s[b[t[i+m]]++]=m);if(0===e?(y=D=s,_=20):1===e?(y=$W,D=eH,_=257):(y=tH,D=iH,_=0),v=0,m=0,E=f,p=o,g=S,R=0,u=-1,I=1<<S,h=I-1,1===e&&I>852||2===e&&I>592)return 1;for(;;){w=E-R,s[m]+1<_?(O=0,N=s[m]):s[m]>=_?(O=D[s[m]-_],N=y[s[m]-_]):(O=96,N=0),d=1<<E-R,l=1<<g,f=l;do{l-=d,r[p+(v>>R)+l]=w<<24|O<<16|N|0}while(0!==l);for(d=1<<E-1;v&d;)d>>=1;if(0!==d?(v&=d-1,v+=d):v=0,m++,0==--A[E]){if(E===T)break;E=t[i+s[m]]}if(E>S&&(v&h)!==u){for(0===R&&(R=S),p+=f,g=E-R,C=1<<g;g+R<T&&(C-=A[g+R],!(C<=0));)g++,C<<=1;if(I+=1<<g,1===e&&I>852||2===e&&I>592)return 1;u=v&h,r[u]=S<<24|g<<16|p-o|0}}return 0!==v&&(r[p+v]=E-R<<24|64<<16|0),a.bits=S,0};const{Z_FINISH:rH,Z_BLOCK:oH,Z_TREES:sH,Z_OK:aH,Z_STREAM_END:cH,Z_NEED_DICT:dH,Z_STREAM_ERROR:lH,Z_DATA_ERROR:uH,Z_MEM_ERROR:hH,Z_BUF_ERROR:pH,Z_DEFLATED:_H}=AG,EH=16180,mH=16190,fH=16191,TH=16192,SH=16194,gH=16199,RH=16200,CH=16206,IH=16209,vH=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function yH(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const AH=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<EH||t.mode>16211?1:0},bH=e=>{if(AH(e))return lH;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=EH,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,aH},wH=e=>{if(AH(e))return lH;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,bH(e)},OH=(e,t)=>{let i;if(AH(e))return lH;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?lH:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,wH(e))},NH=(e,t)=>{if(!e)return lH;const i=new yH;e.state=i,i.strm=e,i.window=null,i.mode=EH;const n=OH(e,t);return n!==aH&&(e.state=null),n};let DH,PH,LH=!0;const kH=e=>{if(LH){DH=new Int32Array(512),PH=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(nH(1,e.lens,0,288,DH,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;nH(2,e.lens,0,32,PH,0,e.work,{bits:5}),LH=!1}e.lencode=DH,e.lenbits=9,e.distcode=PH,e.distbits=5},MH=(e,t,i,n)=>{let r;const o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new Uint8Array(o.wsize)),n>=o.wsize?(o.window.set(t.subarray(i-o.wsize,i),0),o.wnext=0,o.whave=o.wsize):(r=o.wsize-o.wnext,r>n&&(r=n),o.window.set(t.subarray(i-n,i-n+r),o.wnext),(n-=r)?(o.window.set(t.subarray(i-n,i),0),o.wnext=n,o.whave=o.wsize):(o.wnext+=r,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=r))),0};var UH=(e,t)=>{let i,n,r,o,s,a,c,d,l,u,h,p,_,E,m,f,T,S,g,R,C,I,v=0;const y=new Uint8Array(4);let A,b;const w=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(AH(e)||!e.output||!e.input&&0!==e.avail_in)return lH;i=e.state,i.mode===fH&&(i.mode=TH),s=e.next_out,r=e.output,c=e.avail_out,o=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,u=a,h=c,I=aH;e:for(;;)switch(i.mode){case EH:if(0===i.wrap){i.mode=TH;break}for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(2&i.wrap&&35615===d){0===i.wbits&&(i.wbits=15),i.check=0,y[0]=255&d,y[1]=d>>>8&255,i.check=vG(i.check,y,2,0),d=0,l=0,i.mode=16181;break}if(i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg=\"incorrect header check\",i.mode=IH;break}if((15&d)!==_H){e.msg=\"unknown compression method\",i.mode=IH;break}if(d>>>=4,l-=4,C=8+(15&d),0===i.wbits&&(i.wbits=C),C>15||C>i.wbits){e.msg=\"invalid window size\",i.mode=IH;break}i.dmax=1<<i.wbits,i.flags=0,e.adler=i.check=1,i.mode=512&d?16189:fH,d=0,l=0;break;case 16181:for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(i.flags=d,(255&kj(i))!==_H){e.msg=\"unknown compression method\",i.mode=IH;break}if(57344&kj(i)){e.msg=\"unknown header flags set\",i.mode=IH;break}i.head&&(i.head.text=d>>8&1),512&kj(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=vG(i.check,y,2,0)),d=0,l=0,i.mode=16182;case 16182:for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.head&&(i.head.time=d),512&kj(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,y[2]=d>>>16&255,y[3]=d>>>24&255,i.check=vG(i.check,y,4,0)),d=0,l=0,i.mode=16183;case 16183:for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.head&&(i.head.xflags=255&d,i.head.os=d>>8),512&kj(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=vG(i.check,y,2,0)),d=0,l=0,i.mode=16184;case 16184:if(1024&kj(i)){for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.length=d,i.head&&(i.head.extra_len=d),512&kj(i)&&4&i.wrap&&(y[0]=255&d,y[1]=d>>>8&255,i.check=vG(i.check,y,2,0)),d=0,l=0}else i.head&&(i.head.extra=null);i.mode=16185;case 16185:if(1024&kj(i)&&(p=i.length,p>a&&(p=a),p&&(i.head&&(C=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(o,o+p),C)),512&kj(i)&&4&i.wrap&&(i.check=vG(i.check,n,p,o)),a-=p,o+=p,i.length-=p),i.length))break e;i.length=0,i.mode=16186;case 16186:if(2048&kj(i)){if(0===a)break e;p=0;do{C=n[o+p++],i.head&&C&&i.length<65536&&(i.head.name+=String.fromCharCode(C))}while(C&&p<a);if(512&kj(i)&&4&i.wrap&&(i.check=vG(i.check,n,p,o)),a-=p,o+=p,C)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=16187;case 16187:if(4096&kj(i)){if(0===a)break e;p=0;do{C=n[o+p++],i.head&&C&&i.length<65536&&(i.head.comment+=String.fromCharCode(C))}while(C&&p<a);if(512&kj(i)&&4&i.wrap&&(i.check=vG(i.check,n,p,o)),a-=p,o+=p,C)break e}else i.head&&(i.head.comment=null);i.mode=16188;case 16188:if(512&kj(i)){for(;l<16;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(4&i.wrap&&d!==(65535&i.check)){e.msg=\"header crc mismatch\",i.mode=IH;break}d=0,l=0}i.head&&(i.head.hcrc=kj(i)>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=fH;break;case 16189:for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}e.adler=i.check=vH(d),d=0,l=0,i.mode=mH;case mH:if(0===i.havedict)return e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,dH;e.adler=i.check=1,i.mode=fH;case fH:if(t===oH||t===sH)break e;case TH:if(i.last){d>>>=7&l,l-=7&l,i.mode=CH;break}for(;l<3;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}switch(i.last=1&d,d>>>=1,l-=1,3&d){case 0:i.mode=16193;break;case 1:if(kH(i),i.mode=gH,t===sH){d>>>=2,l-=2;break e}break;case 2:i.mode=16196;break;case 3:e.msg=\"invalid block type\",i.mode=IH}d>>>=2,l-=2;break;case 16193:for(d>>>=7&l,l-=7&l;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if((65535&d)!=(d>>>16^65535)){e.msg=\"invalid stored block lengths\",i.mode=IH;break}if(i.length=65535&d,d=0,l=0,i.mode=SH,t===sH)break e;case SH:i.mode=16195;case 16195:if(p=i.length,p){if(p>a&&(p=a),p>c&&(p=c),0===p)break e;r.set(n.subarray(o,o+p),s),a-=p,o+=p,c-=p,s+=p,i.length-=p;break}i.mode=fH;break;case 16196:for(;l<14;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(i.nlen=257+(31&d),d>>>=5,l-=5,i.ndist=1+(31&d),d>>>=5,l-=5,i.ncode=4+(15&d),d>>>=4,l-=4,i.nlen>286||i.ndist>30){e.msg=\"too many length or distance symbols\",i.mode=IH;break}i.have=0,i.mode=16197;case 16197:for(;i.have<i.ncode;){for(;l<3;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.lens[w[i.have++]]=7&d,d>>>=3,l-=3}for(;i.have<19;)i.lens[w[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,A={bits:i.lenbits},I=nH(0,i.lens,0,19,i.lencode,0,i.work,A),i.lenbits=A.bits,I){e.msg=\"invalid code lengths set\",i.mode=IH;break}i.have=0,i.mode=16198;case 16198:for(;i.have<i.nlen+i.ndist;){for(;v=i.lencode[d&(1<<i.lenbits)-1],m=v>>>24,f=v>>>16&255,T=65535&v,!(m<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(T<16)d>>>=m,l-=m,i.lens[i.have++]=T;else{if(16===T){for(b=m+2;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(d>>>=m,l-=m,0===i.have){e.msg=\"invalid bit length repeat\",i.mode=IH;break}C=i.lens[i.have-1],p=3+(3&d),d>>>=2,l-=2}else if(17===T){for(b=m+3;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=m,l-=m,C=0,p=3+(7&d),d>>>=3,l-=3}else{for(b=m+7;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=m,l-=m,C=0,p=11+(127&d),d>>>=7,l-=7}if(i.have+p>i.nlen+i.ndist){e.msg=\"invalid bit length repeat\",i.mode=IH;break}for(;p--;)i.lens[i.have++]=C}}if(i.mode===IH)break;if(0===i.lens[256]){e.msg=\"invalid code -- missing end-of-block\",i.mode=IH;break}if(i.lenbits=9,A={bits:i.lenbits},I=nH(1,i.lens,0,i.nlen,i.lencode,0,i.work,A),i.lenbits=A.bits,I){e.msg=\"invalid literal/lengths set\",i.mode=IH;break}if(i.distbits=6,i.distcode=i.distdyn,A={bits:i.distbits},I=nH(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,A),i.distbits=A.bits,I){e.msg=\"invalid distances set\",i.mode=IH;break}if(i.mode=gH,t===sH)break e;case gH:i.mode=RH;case RH:if(a>=6&&c>=258){e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,QW(e,h),s=e.next_out,r=e.output,c=e.avail_out,o=e.next_in,n=e.input,a=e.avail_in,d=i.hold,l=i.bits,i.mode===fH&&(i.back=-1);break}for(i.back=0;v=i.lencode[d&(1<<i.lenbits)-1],m=v>>>24,f=v>>>16&255,T=65535&v,!(m<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(f&&0==(240&f)){for(S=m,g=f,R=T;v=i.lencode[R+((d&(1<<S+g)-1)>>S)],m=v>>>24,f=v>>>16&255,T=65535&v,!(S+m<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=S,l-=S,i.back+=S}if(d>>>=m,l-=m,i.back+=m,i.length=T,0===f){i.mode=16205;break}if(32&f){i.back=-1,i.mode=fH;break}if(64&f){e.msg=\"invalid literal/length code\",i.mode=IH;break}i.extra=15&f,i.mode=16201;case 16201:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.length+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=16202;case 16202:for(;v=i.distcode[d&(1<<i.distbits)-1],m=v>>>24,f=v>>>16&255,T=65535&v,!(m<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(0==(240&f)){for(S=m,g=f,R=T;v=i.distcode[R+((d&(1<<S+g)-1)>>S)],m=v>>>24,f=v>>>16&255,T=65535&v,!(S+m<=l);){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}d>>>=S,l-=S,i.back+=S}if(d>>>=m,l-=m,i.back+=m,64&f){e.msg=\"invalid distance code\",i.mode=IH;break}i.offset=T,i.extra=15&f,i.mode=16203;case 16203:if(i.extra){for(b=i.extra;l<b;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}i.offset+=d&(1<<i.extra)-1,d>>>=i.extra,l-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg=\"invalid distance too far back\",i.mode=IH;break}i.mode=16204;case 16204:if(0===c)break e;if(p=h-c,i.offset>p){if(p=i.offset-p,p>i.whave&&i.sane){e.msg=\"invalid distance too far back\",i.mode=IH;break}p>i.wnext?(p-=i.wnext,_=i.wsize-p):_=i.wnext-p,p>i.length&&(p=i.length),E=i.window}else E=r,_=s-i.offset,p=i.length;p>c&&(p=c),c-=p,i.length-=p;do{r[s++]=E[_++]}while(--p);0===i.length&&(i.mode=RH);break;case 16205:if(0===c)break e;r[s++]=i.length,c--,i.mode=RH;break;case CH:if(i.wrap){for(;l<32;){if(0===a)break e;a--,d|=n[o++]<<l,l+=8}if(h-=c,e.total_out+=h,i.total+=h,4&i.wrap&&h&&(e.adler=i.check=kj(i)?vG(i.check,r,h,s-h):CG(i.check,r,h,s-h)),h=c,4&i.wrap&&(kj(i)?d:vH(d))!==i.check){e.msg=\"incorrect data check\",i.mode=IH;break}d=0,l=0}i.mode=16207;case 16207:if(i.wrap&&kj(i)){for(;l<32;){if(0===a)break e;a--,d+=n[o++]<<l,l+=8}if(4&i.wrap&&d!==(4294967295&i.total)){e.msg=\"incorrect length check\",i.mode=IH;break}d=0,l=0}i.mode=16208;case 16208:I=cH;break e;case IH:I=uH;break e;case 16210:return hH;default:return lH}return e.next_out=s,e.avail_out=c,e.next_in=o,e.avail_in=a,i.hold=d,i.bits=l,(i.wsize||h!==e.avail_out&&i.mode<IH&&(i.mode<CH||t!==rH))&&MH(e,e.output,e.next_out,h-e.avail_out),u-=e.avail_in,h-=e.avail_out,e.total_in+=u,e.total_out+=h,i.total+=h,4&i.wrap&&h&&(e.adler=i.check=kj(i)?vG(i.check,r,h,e.next_out-h):CG(i.check,r,h,e.next_out-h)),e.data_type=i.bits+(i.last?64:0)+(i.mode===fH?128:0)+(i.mode===gH||i.mode===SH?256:0),(0===u&&0===h||t===rH)&&I===aH&&(I=pH),I},xH={inflateReset:wH,inflateReset2:OH,inflateResetKeep:bH,inflateInit:e=>NH(e,15),inflateInit2:NH,inflate:UH,inflateEnd:e=>{if(AH(e))return lH;let t=e.state;return t.window&&(t.window=null),e.state=null,aH},inflateGetHeader:(e,t)=>{if(AH(e))return lH;const i=e.state;return 0==(2&i.wrap)?lH:(i.head=t,t.done=!1,aH)},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,o;return AH(e)?lH:(n=e.state,0!==n.wrap&&n.mode!==mH?lH:n.mode===mH&&(r=1,r=CG(r,t,i,0),r!==n.check)?uH:(o=MH(e,t,i,i),o?(n.mode=16210,hH):(n.havedict=1,aH)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var VH=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const FH=Object.prototype.toString,{Z_NO_FLUSH:BH,Z_FINISH:jH,Z_OK:GH,Z_STREAM_END:WH,Z_NEED_DICT:HH,Z_STREAM_ERROR:KH,Z_DATA_ERROR:YH,Z_MEM_ERROR:qH}=AG;function zH(e){this.options=PW.assign({chunkSize:65536,windowBits:15,to:\"\"},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new UW,this.strm.avail_out=0;let i=xH.inflateInit2(this.strm,t.windowBits);if(i!==GH)throw new Error(yG[i]);if(this.header=new VH,xH.inflateGetHeader(this.strm,this.header),t.dictionary&&(\"string\"==typeof t.dictionary?t.dictionary=MW.string2buf(t.dictionary):\"[object ArrayBuffer]\"===FH.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=xH.inflateSetDictionary(this.strm,t.dictionary),i!==GH)))throw new Error(yG[i])}function JH(e,t){const i=new zH(t);if(i.push(e),i.err)throw i.msg||yG[i.err];return i.result}zH.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let o,s,a;if(this.ended)return!1;for(s=t===~~t?t:!0===t?jH:BH,\"[object ArrayBuffer]\"===FH.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),o=xH.inflate(i,s),o===HH&&r&&(o=xH.inflateSetDictionary(i,r),o===GH?o=xH.inflate(i,s):o===YH&&(o=HH));i.avail_in>0&&o===WH&&i.state.wrap>0&&0!==e[i.next_in];)xH.inflateReset(i),o=xH.inflate(i,s);switch(o){case KH:case YH:case HH:case qH:return this.onEnd(o),this.ended=!0,!1}if(a=i.avail_out,i.next_out&&(0===i.avail_out||o===WH))if(\"string\"===this.options.to){let e=MW.utf8border(i.output,i.next_out),t=i.next_out-e,r=MW.buf2string(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(o!==GH||0!==a){if(o===WH)return o=xH.inflateEnd(this.strm),this.onEnd(o),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},zH.prototype.onData=function(e){this.chunks.push(e)},zH.prototype.onEnd=function(e){e===GH&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=PW.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var XH={Inflate:zH,inflate:JH,inflateRaw:function(e,t){return(t=t||{}).raw=!0,JH(e,t)},ungzip:JH,constants:AG};const{Deflate:QH,deflate:ZH,deflateRaw:$H,gzip:eK}=JW,{Inflate:tK,inflate:iK,inflateRaw:nK,ungzip:rK}=XH;var oK=ZH,sK=iK,aK=function(e){return e[e.ONE_BYTE=0]=\"ONE_BYTE\",e[e.TWO_BYTE=1]=\"TWO_BYTE\",e}(aK||{});class cK{constructor(){og(this,\"_sequence\",0),og(this,\"_startTime\",Date.now()),og(this,\"isUseOneByte\",!0)}get startTime(){const e=Date.now()-this._startTime;return e<Math.pow(2,16)?e:(this._startTime+=Math.pow(2,16),this.startTime)}get sequence(){return this._sequence<Math.pow(2,32)?this._sequence++:(this._sequence-=Math.pow(2,32),this.sequence)}serialize(e){const t={commonPacketHeader:{length:0,reserved:0,extension:0,sequence:this.sequence},commonStreamHeader:this.startTime,extension:void 0,payload:e};if(e.byteLength>128){const i=new Uint8Array(4);i.set([1,0,0,0]);const n={id:0,length:4,data:i.buffer},r={profile:this.isUseOneByte?0:1,length:this.isUseOneByte?5:6,datas:[n]};t.commonPacketHeader.extension=1,t.extension=r,t.payload=this.compress(e),t.commonPacketHeader.length=8+(t.extension.length+2)+t.payload.byteLength}else t.commonPacketHeader.length=8+t.payload.byteLength;Dy(\"SHOW_DATASTREAM2_LOG\")&&Qy.debug(\"send data header: \".concat(JSON.stringify(t.commonPacketHeader)));const i=new ArrayBuffer(t.commonPacketHeader.length),n=new Uint8Array(i),r=new DataView(i);let o=0;if(r.setUint16(o,t.commonPacketHeader.extension<<15|t.commonPacketHeader.reserved<<14|t.commonPacketHeader.length,!0),o+=2,r.setUint32(o,t.commonPacketHeader.sequence,!0),o+=4,r.setUint16(o,t.commonStreamHeader,!0),o+=2,t.extension){const e=this.serializeExtension(t.extension);n.set(new Uint8Array(e),o),o+=e.byteLength}if(n.set(new Uint8Array(t.payload),o),o+=t.payload.byteLength,o!==t.commonPacketHeader.length)throw Error(\"serialize error!\");return i}deserialize(e){if(e.byteLength<4)return new ArrayBuffer(0);const t=new DataView(e);let i=0;const n=t.getUint16(i,!0);i+=2;const r={length:16383&n,reserved:(16384&n)>>14,extension:(32768&n)>>15,sequence:t.getUint16(i+2,!0)<<16|t.getUint16(i,!0)};let o,s;if(i+=4,Dy(\"SHOW_DATASTREAM2_LOG\")&&Qy.debug(\"receive data header: \".concat(JSON.stringify(r))),t.getUint16(i,!0),i+=2,r.extension){s=this.deserializeExtension(e.slice(i)),i+=2+s.length,o=e.slice(i);let t=!1;if(s.datas.length>0){const e=s.datas.find((e=>0===e.id));if(e){t=1==(1&new DataView(e.data).getUint32(0,!0))}}o=t?this.decompress(o):o}else o=e.slice(8);return o}serializeExtension(e){const{profile:t,length:i,datas:n}=e,r=new ArrayBuffer(i+2),o=new Uint8Array(r),s=new DataView(r);let a=0;if(s.setUint8(a++,t),s.setUint8(a++,i),n.forEach((e=>{t?(s.setUint8(a++,e.id),s.setUint8(a++,e.length),o.set(new Uint8Array(e.data),a),a+=e.data.byteLength):(s.setUint8(a++,e.id|e.length<<4),o.set(new Uint8Array(e.data),a),a+=e.data.byteLength)})),a!==i+2)throw Error(\"serialize extension error, is \".concat(a,\"!==\").concat(i+2));return r}deserializeExtension(e){const t=new DataView(e);let i=0;const n=t.getUint8(i);i++;const r=t.getUint8(i);i++;const o=n===aK.TWO_BYTE,s=[],a=new DataView(e,2);let c=0;for(;c<r;){let e=0,t=0,i=new ArrayBuffer(0);o?(e=a.getUint8(c),c++,t=a.getUint8(c),c++):(e=15&a.getUint8(c),t=a.getUint8(c)>>4,c++),t>0&&(i=a.buffer.slice(c+2,c+2+t),c+=i.byteLength),s.push({id:e,length:t,data:i})}if(c!==r)throw Error(\"parse error\");return{profile:n,length:r,datas:s}}decompress(e){return sK(new Uint8Array(e))}compress(e){return oK(new Uint8Array(e))}}const dK={name:\"DataStream\",create:(e,t)=>{const i=t?new lM(e):new uM(e);return i.useDataStream(new cK),i}};class lK extends Sv{constructor(e,t,i){super(),og(this,\"ws\",void 0),og(this,\"requestId\",1),og(this,\"heartBeatTimer\",void 0),og(this,\"joinInfo\",void 0),og(this,\"clientId\",void 0),og(this,\"onOpen\",(()=>{this.emit(\"open\"),this.startHeartBeatCheck()})),og(this,\"onClose\",(e=>{this.emit(\"close\"),this.dispose()})),og(this,\"onMessage\",(e=>{const t=JSON.parse(e.data);if(!t||\"serverResponse\"!==t.command||!t.requestId)return t&&\"serverStatus\"===t.command&&t.serverStatus&&t.serverStatus.command?(this.emit(\"status\",t.serverStatus),void this.emit(t.serverStatus.command,t.serverStatus)):void 0;this.emit(\"req_\".concat(t.requestId),t)})),this.joinInfo=e,this.clientId=t,this.ws=new bw(\"cross-channel-\".concat(this.clientId),i),this.ws.on(Tb.RECONNECTING,(()=>{this.ws.reconnectMode=\"retry\",this.emit(\"reconnecting\")})),this.ws.on(Tb.CONNECTED,this.onOpen),this.ws.on(Tb.ON_MESSAGE,this.onMessage),this.ws.on(Tb.CLOSED,this.onClose)}isConnect(){return\"connected\"===this.ws.state}sendMessage(e){const t=this.requestId++;return e.requestId=t,e.seq=t,this.ws.sendMessage(e),t}waitStatus(e){return new Gh(((t,i)=>{const n=window.setTimeout((()=>{i(new Sb(nv.TIMEOUT,\"wait status timeout, status: \".concat(e)))}),5e3);this.once(e,(r=>{window.clearTimeout(n),r.state&&0!==r.state?i(new Sb(nv.CROSS_CHANNEL_WAIT_STATUS_ERROR,\"wait status error, status: \".concat(e))):t(void 0)})),this.once(\"dispose\",(()=>{window.clearTimeout(n),i(new Sb(nv.WS_ABORT))}))}))}async request(e){if(\"closed\"===this.ws.state)throw new Sb(nv.WS_DISCONNECT);const t=()=>new Gh(((e,t)=>{this.ws.once(Tb.CLOSED,(()=>t(new Sb(nv.WS_ABORT)))),this.ws.once(Tb.CONNECTED,e)}));\"connected\"!==this.ws.state&&await t();const i=this.sendMessage(e),n=new Gh(((e,t)=>{const n=()=>{t(new Sb(nv.WS_ABORT))};this.ws.once(Tb.RECONNECTING,n),this.ws.once(Tb.CLOSED,n),this.once(\"req_\".concat(i),e),$v(3e3).then((()=>{this.removeAllListeners(\"req_\".concat(i)),this.ws.off(Tb.RECONNECTING,n),this.ws.off(Tb.CLOSED,n),t(new Sb(nv.TIMEOUT,\"cross channel ws request timeout\"))}))})),r=await n;if(!r||200!==r.code)throw new Sb(nv.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,\"response: \".concat(JSON.stringify(r)));return r}async connect(e){this.ws.removeAllListeners(Tb.REQUEST_NEW_URLS),this.ws.on(Tb.REQUEST_NEW_URLS,(t=>{t(e)})),await this.ws.init(e)}dispose(){this.clearHeartBeatCheck(),this.emit(\"dispose\"),this.removeAllListeners(),this.ws.close()}sendPing(e){const t=this.requestId++;return e.requestId=t,this.ws.sendMessage(e),t}startHeartBeatCheck(){this.heartBeatTimer&&window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=window.setInterval((()=>{this.sendPing({command:\"ping\",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})}),3e3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=void 0}}class uK extends Sv{set state(e){e!==this._state&&(e!==Lb.RELAY_STATE_FAILURE&&(this.errorCode=kb.RELAY_OK),this.emit(\"state\",e,this.errorCode),this._state=e)}get state(){return this._state}constructor(e,t,i,n,r){super(),og(this,\"joinInfo\",void 0),og(this,\"sid\",void 0),og(this,\"clientId\",void 0),og(this,\"cancelToken\",EI.CancelToken.source()),og(this,\"workerToken\",void 0),og(this,\"requestId\",0),og(this,\"signal\",void 0),og(this,\"prevChannelMediaConfig\",void 0),og(this,\"httpRetryConfig\",void 0),og(this,\"_resolution\",void 0),og(this,\"_state\",Lb.RELAY_STATE_IDLE),og(this,\"errorCode\",kb.RELAY_OK),og(this,\"onStatus\",(e=>{Qy.debug(\"[\".concat(this.clientId,\"] ChannelMediaStatus: \").concat(JSON.stringify(e))),e&&e.command&&(\"onAudioPacketReceived\"===e.command&&this.emit(\"event\",Pb.PACKET_RECEIVED_AUDIO_FROM_SRC),\"onVideoPacketReceived\"===e.command&&this.emit(\"event\",Pb.PACKET_RECEIVED_VIDEO_FROM_SRC),\"onSrcTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=kb.SRC_TOKEN_EXPIRED,this.state=Lb.RELAY_STATE_FAILURE),\"onDestTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=kb.DEST_TOKEN_EXPIRED,this.state=Lb.RELAY_STATE_FAILURE))})),og(this,\"onReconnect\",(async()=>{Qy.debug(\"[\".concat(this.clientId,\"] ChannelMediaSocket disconnect, reconnecting\")),this.emit(\"event\",Pb.NETWORK_DISCONNECTED),this.state=Lb.RELAY_STATE_IDLE,this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch((e=>{this.state!==Lb.RELAY_STATE_IDLE&&(Qy.error(\"auto restart channel media relay failed\",e.toString()),this.errorCode=kb.SERVER_CONNECTION_LOST,this.state=Lb.RELAY_STATE_FAILURE)}))})),this.joinInfo=e,this.clientId=t,this.sid=ty(),this.signal=new lK(this.joinInfo,this.clientId,i),this.httpRetryConfig=n,this._resolution=r}async startChannelMediaRelay(e){if(this.state!==Lb.RELAY_STATE_IDLE)throw new Sb(nv.INVALID_OPERATION);this.state=Lb.RELAY_STATE_CONNECTING,await this.connect(),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: connect success\"));try{await this.sendStartRelayMessage(e)}catch(e){if(e.data&&e.data.serverResponse&&\"SetSourceChannel\"===e.data.serverResponse.command)throw new Sb(nv.CROSS_CHANNEL_FAILED_JOIN_SRC);if(e.data&&e.data.serverResponse&&\"SetDestChannelStatus\"===e.serverResponse.command)throw new Sb(nv.CROSS_CHANNEL_FAILED_JOIN_DEST);if(e.data&&e.data.serverResponse&&\"StartPacketTransfer\"===e.serverResponse.command)throw new Sb(nv.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw e}this.prevChannelMediaConfig=e}async updateChannelMediaRelay(e){if(this.state!==Lb.RELAY_STATE_RUNNING)throw new Sb(nv.INVALID_OPERATION);await this.sendUpdateMessage(e),this.prevChannelMediaConfig=e}async setVideoProfile(e){if(this._resolution=e,this.state!==Lb.RELAY_STATE_RUNNING)throw new Sb(nv.INVALID_OPERATION);const t=this.genMessage(Db.SetVideoProfile);await this.signal.request(t),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: setVideoProfile success\"))}async stopChannelMediaRelay(){await this.sendStopRelayMessage(),Qy.debug(\"[\".concat(this.clientId,\"] stopChannelMediaRelay: send stop message success\")),this.state=Lb.RELAY_STATE_IDLE,this.dispose()}dispose(){Qy.debug(\"[\".concat(this.clientId,\"] disposeChannelMediaRelay\")),this.cancelToken.cancel(),this.cancelToken=EI.CancelToken.source(),this.state=Lb.RELAY_STATE_IDLE,this.emit(\"dispose\"),this.signal.dispose(),this.prevChannelMediaConfig=void 0}async connect(){const e=await kU(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=e.workerToken,await this.signal.connect(e.addressList),this.emit(\"event\",Pb.NETWORK_CONNECTED),this.signal.on(\"status\",this.onStatus),this.signal.on(\"reconnecting\",this.onReconnect)}async sendStartRelayMessage(e){const t=this.genMessage(Db.StopPacketTransfer);await this.signal.request(t),await this.signal.waitStatus(\"Normal Quit\"),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StopPacketTransfer success\"));const i=this.genMessage(Db.SetSdkProfile,e);await this.signal.request(i),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSdkProfile success\"));const n=this.genMessage(Db.SetSourceChannel,e);await this.signal.request(n),await this.signal.waitStatus(\"SetSourceChannelStatus\"),this.emit(\"event\",Pb.PACKET_JOINED_SRC_CHANNEL),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceChannel success\"));const r=this.genMessage(Db.SetSourceUserId,e);await this.signal.request(r),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceUserId success\"));const o=this.genMessage(Db.SetDestChannel,e);await this.signal.request(o),await this.signal.waitStatus(\"SetDestChannelStatus\"),this.emit(\"event\",Pb.PACKET_JOINED_DEST_CHANNEL),Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetDestChannel success\"));const s=this.genMessage(Db.StartPacketTransfer,e);await this.signal.request(s),this.emit(\"event\",Pb.PACKET_SENT_TO_DEST_CHANNEL),this.state=Lb.RELAY_STATE_RUNNING,Qy.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StartPacketTransfer success\")),this.setVideoProfile(this._resolution)}async sendUpdateMessage(e){const t=this.genMessage(Db.UpdateDestChannel,e);await this.signal.request(t),this.emit(\"event\",Pb.PACKET_UPDATE_DEST_CHANNEL),Qy.debug(\"[\".concat(this.clientId,\"] sendUpdateMessage: UpdateDestChannel success\"))}async sendStopRelayMessage(){const e=this.genMessage(Db.StopPacketTransfer);await this.signal.request(e),Qy.debug(\"[\".concat(this.clientId,\"] sendStopRelayMessage: StopPacketTransfer success\"))}genMessage(e,t){const i=[],n=[],r=[];this.requestId+=1;const o={appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sdkVersion:vy,sid:this.sid,ts:Date.now(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};\"4.22.0\"===o.sdkVersion&&(o.sdkVersion=\"0.0.1\");let s=null,a=null;switch(e){case Db.SetSdkProfile:return o.clientRequest={command:\"SetSdkProfile\",type:\"multi_channel\"},o;case Db.SetSourceChannel:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceChannel\",uid:\"0\",channelName:a.channelName,token:a.token||this.joinInfo.appId},o;case Db.SetSourceUserId:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceUserId\",uid:a.uid+\"\"},o;case Db.SetDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),o.clientRequest={command:\"SetDestChannel\",channelName:i,uid:n,token:r},o;case Db.StartPacketTransfer:return o.clientRequest={command:\"StartPacketTransfer\"},o;case Db.Reconnect:return o.clientRequest={command:\"Reconnect\"},o;case Db.StopPacketTransfer:return o.clientRequest={command:\"StopPacketTransfer\"},o;case Db.UpdateDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new Sb(nv.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach((e=>{i.push(e.channelName),n.push(e.uid+\"\"),r.push(e.token||this.joinInfo.appId)})),o.clientRequest={command:\"UpdateDestChannel\",channelName:i,uid:n,token:r},o;case Db.SetVideoProfile:o.clientRequest={command:\"SetVideoProfile\",width:this._resolution.width,height:this._resolution.height}}return o}}const hK={name:\"ChannelMediaRelay\",create:function(e){return new uK(e.joinInfo,e.clientId,e.websocketRetryConfig||_y,e.httpRetryConfig||_y,e.resolution)}};function pK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function _K(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?pK(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):pK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class EK extends Sv{constructor(e,t,i,n){super(),og(this,\"spec\",void 0),og(this,\"token\",void 0),og(this,\"websocket\",void 0),og(this,\"pingpongTimer\",void 0),og(this,\"reconnectMode\",\"retry\"),og(this,\"serviceMode\",void 0),og(this,\"reqId\",0),og(this,\"commandReqId\",0),og(this,\"handleWebSocketOpen\",(()=>{this.reconnectMode=\"retry\",this.startPingPong()})),og(this,\"handleWebSocketMessage\",(e=>{if(!e.data)return;const t=JSON.parse(e.data);t.requestId?this.emit(\"@\".concat(t.requestId,\"-\").concat(t.sid),t):(sA.workerEvent(this.spec.sid,{actionType:\"status\",serverCode:t.code,workerType:this.serviceMode===Cb.TRANSCODE?1:2}),this.emit(bb.PUBLISH_STREAM_STATUS,t))})),this.spec=t,this.token=e,this.serviceMode=n,this.websocket=new bw(\"live-streaming\",i),this.websocket.on(Tb.CONNECTED,this.handleWebSocketOpen),this.websocket.on(Tb.ON_MESSAGE,this.handleWebSocketMessage),this.websocket.on(Tb.REQUEST_NEW_URLS,((e,t)=>{kv(this,bb.REQUEST_NEW_ADDRESS).then(e).catch(t)})),this.websocket.on(Tb.RECONNECTING,(()=>{this.websocket.reconnectMode=this.reconnectMode}))}init(e){return this.websocket.init(e)}async request(e,t,i,n){this.reqId+=1,\"request\"===e&&(this.commandReqId+=1);const r=this.commandReqId,o=this.reqId;if(!o||!this.websocket)throw new Sb(nv.UNEXPECTED_ERROR);const s=_K({command:e,sdkVersion:\"4.22.0\"===vy?\"0.0.1\":vy,seq:o,requestId:o,allocate:i,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(Date.now()/1e3)},t);if(\"closed\"===this.websocket.state)throw new Sb(nv.WS_DISCONNECT);const a=()=>new Gh(((e,t)=>{this.websocket.once(Tb.CLOSED,(()=>t(new Sb(nv.WS_ABORT)))),this.websocket.once(Tb.CONNECTED,e)}));\"connected\"!==this.websocket.state&&await a(),s.clientRequest&&(s.clientRequest.workerToken=this.token);const c=new Gh(((e,t)=>{const i=()=>{t(new Sb(nv.WS_ABORT))};this.websocket.once(Tb.RECONNECTING,i),this.websocket.once(Tb.CLOSED,i),this.once(\"@\".concat(o,\"-\").concat(this.spec.sid),(t=>{e(t)}))}));n&&sA.workerEvent(this.spec.sid,_K(_K({},n),{},{requestId:r,actionType:\"request\",payload:JSON.stringify(t.clientRequest),serverCode:0,code:0}));const d=Date.now();this.websocket.sendMessage(s);let l=null;try{l=await c}catch(n){if(\"closed\"===this.websocket.state)throw n;return await a(),await this.request(e,t,i)}return n&&sA.workerEvent(this.spec.sid,_K(_K({},n),{},{requestId:r,actionType:\"response\",payload:JSON.stringify(l.serverResponse),serverCode:l.code,success:200===l.code,responseTime:Date.now()-d})),200!==l.code&&this.handleResponseError(l),l}tryNextAddress(){this.reconnectMode=\"tryNext\",this.websocket.reconnect(\"tryNext\")}close(){const e=\"4.22.0\"===vy?\"0.0.1\":vy;this.reqId+=1,\"connected\"===this.websocket.state?(this.websocket.sendMessage({command:\"request\",appId:this.spec.appId,cname:this.spec.cname,uid:this.spec.uid.toString(),sdkVersion:e,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(Date.now()/1e3),requestId:this.reqId,clientRequest:{command:\"DestroyWorker\"}}),this.websocket.close(!1,!0)):this.websocket.close(!1),this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(e){switch(e.code){case Ob.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void Qy.warning(\"live stream response already exists stream\");case Ob.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case Ob.LIVE_STREAM_RESPONSE_BAD_STREAM:case Ob.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return new Sb(nv.LIVE_STREAMING_INVALID_ARGUMENT,\"\",{code:e.code}).throw();case Ob.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if(\"UnpublishStream\"===e.serverResponse.command)return;throw new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Ob.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return new Sb(nv.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,\"\",{code:e.code}).throw();case Ob.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const t=new Sb(nv.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);return this.emit(bb.WARNING,t,e.serverResponse.url)}case Ob.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:{const t=new Sb(nv.LIVE_STREAMING_WARN_FREQUENT_REQUEST);return this.emit(bb.WARNING,t,e.serverResponse.url)}case Ob.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Ob.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return new Sb(nv.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,\"\",{code:e.code}).throw();case Ob.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:{const t=new Sb(nv.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT);return this.emit(bb.WARNING,t,e.serverResponse.url)}case Ob.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code}).throw();case Ob.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream resource limit\",{retry:!0,changeAddress:!0});case Ob.LIVE_STREAM_RESPONSE_WORKER_LOST:case Ob.LIVE_STREAM_RESPONSE_WORKER_QUIT:if(\"UnpublishStream\"===e.serverResponse.command)return;throw new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Ob.ERROR_FAIL_SEND_MESSAGE:if(\"UnpublishStream\"===e.serverResponse.command)return;if(\"UpdateTranscoding\"===e.serverResponse.command||\"ControlStream\"===e.serverResponse.command)return new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{code:e.code}).throw();throw new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Ob.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return new Sb(nv.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code}).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval((()=>{\"connected\"===this.websocket.state&&this.request(\"ping\",{}).catch(iy)}),6e3)}}function mK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function fK(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?mK(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):mK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class TK extends Sv{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_y,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_y;super(),og(this,\"onLiveStreamWarning\",void 0),og(this,\"onLiveStreamError\",void 0),og(this,\"spec\",void 0),og(this,\"retryTimeout\",1e4),og(this,\"connection\",void 0),og(this,\"httpRetryConfig\",void 0),og(this,\"wsRetryConfig\",void 0),og(this,\"streamingTasks\",new Map),og(this,\"isStartingStreamingTask\",!1),og(this,\"taskMutex\",new hy(\"live-streaming\")),og(this,\"cancelToken\",EI.CancelToken.source()),og(this,\"transcodingConfig\",void 0),og(this,\"uapResponse\",void 0),og(this,\"lastTaskId\",1),og(this,\"statusError\",new Map),this.spec=e,this.httpRetryConfig=i,this.wsRetryConfig=t}async setTranscodingConfig(e){const t=fK(fK({},Ab),e);66!==t.videoCodecProfile&&77!==t.videoCodecProfile&&100!==t.videoCodecProfile&&(Qy.debug(\"[\".concat(this.spec.clientId,\"] set transcoding config, fix video codec profile: \").concat(t.videoCodecProfile,\" -> 100\")),t.videoCodecProfile=100),t.transcodingUsers||(t.transcodingUsers=t.userConfigs),t.transcodingUsers&&(t.transcodingUsers=t.transcodingUsers.map((e=>fK(fK(fK({},Ib),e),{},{zOrder:e.zOrder?e.zOrder+1:1})))),function(e){uv(e.width)||av(e.width,\"config.width\",0,1e4),uv(e.height)||av(e.height,\"config.height\",0,1e4),uv(e.videoBitrate)||av(e.videoBitrate,\"config.videoBitrate\",1,1e6),uv(e.videoFrameRate)||av(e.videoFrameRate,\"config.videoFrameRate\"),uv(e.lowLatency)||ov(e.lowLatency,\"config.lowLatency\"),uv(e.audioSampleRate)||sv(e.audioSampleRate,\"config.audioSampleRate\",[32e3,44100,48e3]),uv(e.audioBitrate)||av(e.audioBitrate,\"config.audioBitrate\",1,128),uv(e.audioChannels)||sv(e.audioChannels,\"config.audioChannels\",[1,2,3,4,5]),uv(e.videoGop)||av(e.videoGop,\"config.videoGop\"),uv(e.videoCodecProfile)||sv(e.videoCodecProfile,\"config.videoCodecProfile\",[66,77,100]),uv(e.userCount)||av(e.userCount,\"config.userCount\",0,17),uv(e.backgroundColor)||av(e.backgroundColor,\"config.backgroundColor\",0,16777215),uv(e.userConfigExtraInfo)||dv(e.userConfigExtraInfo,\"config.userConfigExtraInfo\",0,4096,!1),e.transcodingUsers&&!uv(e.transcodingUsers)&&(lv(e.transcodingUsers,\"config.transcodingUsers\"),e.transcodingUsers.forEach(((e,t)=>{Rb(e.uid),uv(e.x)||av(e.x,\"transcodingUser[\".concat(t,\"].x\"),0,1e4),uv(e.y)||av(e.y,\"transcodingUser[\".concat(t,\"].y\"),0,1e4),uv(e.width)||av(e.width,\"transcodingUser[\".concat(t,\"].width\"),0,1e4),uv(e.height)||av(e.height,\"transcodingUser[\".concat(t,\"].height\"),0,1e4),uv(e.zOrder)||av(e.zOrder-1,\"transcodingUser[\".concat(t,\"].zOrder\"),0,100),uv(e.alpha)||av(e.alpha,\"transcodingUser[\".concat(t,\"].alpha\"),0,1,!1)}))),uv(e.watermark)||yb(e.watermark,\"watermark\"),uv(e.backgroundImage)||yb(e.backgroundImage,\"backgroundImage\"),e.images&&!uv(e.images)&&(lv(e.images,\"config.images\"),e.images.forEach(((e,t)=>{yb(e,\"images[\".concat(t,\"]\"))})))}(t);const i=[];t.images&&i.push(...t.images.map((e=>fK(fK(fK({},vb),e),{},{zOrder:255})))),t.backgroundImage&&(i.push(fK(fK(fK({},vb),t.backgroundImage),{},{zOrder:0})),delete t.backgroundImage),t.watermark&&(i.push(fK(fK(fK({},vb),t.watermark),{},{zOrder:255})),delete t.watermark),t.images=i,t.transcodingUsers&&(t.userConfigs=t.transcodingUsers.map((e=>fK({},e))),t.userCount=t.transcodingUsers.length,delete t.transcodingUsers);const n=(t.userConfigs||[]).map((e=>\"number\"==typeof e.uid?Gh.resolve(e.uid):OU(e.uid,this.spec,this.cancelToken.token,this.httpRetryConfig)));if((await Gh.all(n)).forEach(((e,i)=>{t.userConfigs&&t.userConfigs[i]&&(t.userConfigs[i].uid=e)})),this.transcodingConfig=t,this.connection)try{var r;const e=await this.connection.request(\"request\",{clientRequest:{command:\"UpdateTranscoding\",transcodingConfig:this.transcodingConfig}},!1,{command:\"UpdateTranscoding\",workerType:1,requestByUser:!0,tid:Array.from(Qw(r=this.streamingTasks).call(r)).map((e=>e.taskId)).join(\"#\")});Qy.debug(\"[\".concat(this.spec.clientId,\"] update live transcoding config success, code: \").concat(e.code,\", config:\"),JSON.stringify(this.transcodingConfig))}catch(e){if(!e.data||!e.data.retry)throw e;e.data.changeAddress&&this.connection.tryNextAddress(),this.streamingTasks.forEach((t=>{Qy.warning(\"[\".concat(this.spec.clientId,\"] live streaming receive error\"),e.toString(),\"try to republish\",t.url),this.startLiveStreamingTask(t.url,t.mode,e).then((()=>{Qy.debug(\"[\".concat(this.spec.clientId,\"] live streaming republish \").concat(t.url,\" success\"))})).catch((e=>{Qy.error(\"[\".concat(this.spec.clientId,\"] live streaming republish failed\"),t.url,e.toString()),this.onLiveStreamError&&this.onLiveStreamError(t.url,e)}))}))}}async startLiveStreamingTask(e,t,i){if(!this.transcodingConfig&&t===Cb.TRANSCODE)throw new Sb(nv.INVALID_OPERATION,\"[LiveStreaming] no transcoding config found, can not start transcoding streaming task\");const n={command:\"PublishStream\",ts:Date.now(),url:e,uid:this.spec.uid.toString(),autoDestroyTime:100,acceptImageTimeout:!0};Qy.debug(\"[\".concat(this.spec.clientId,\"] start live streaming \").concat(e,\", mode: \").concat(t));const r=await this.taskMutex.lock();if(!this.connection&&i)return void r();if(this.streamingTasks.get(e)&&!i)return r(),new Sb(nv.LIVE_STREAMING_TASK_CONFLICT).throw();try{this.connection||(this.connection=await this.connect(t))}catch(e){throw r(),e}switch(t){case Cb.TRANSCODE:n.transcodingConfig=fK({},this.transcodingConfig);case Cb.RAW:}this.uapResponse&&this.uapResponse.vid&&(n.vid=this.uapResponse.vid),this.isStartingStreamingTask=!0;const o=this.lastTaskId++;try{const s=new Gh(((t,n)=>{$v(this.retryTimeout).then((()=>{if(i)return n(i);const t=this.statusError.get(e);return t?(this.statusError.delete(e),n(t)):void 0}))})),a=await Gh.race([this.connection.request(\"request\",{clientRequest:n},!0,{url:e,command:\"PublishStream\",workerType:t===Cb.TRANSCODE?1:2,requestByUser:!i,tid:o.toString()}),s]);this.isStartingStreamingTask=!1,Qy.debug(\"[\".concat(this.spec.clientId,\"] live streaming started, code: \").concat(a.code)),this.streamingTasks.set(e,{clientRequest:n,mode:t,url:e,taskId:o}),r()}catch(n){if(r(),this.isStartingStreamingTask=!1,!n.data||!n.data.retry||i)throw n;return n.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(e,t,n)):await this.startLiveStreamingTask(e,t,n)}}stopLiveStreamingTask(e){return new Gh(((t,i)=>{const n=this.streamingTasks.get(e);if(!n||!this.connection)return new Sb(nv.UNEXPECTED_ERROR,\"can not find streaming task to stop\").throw();const r=n.mode;n.abortTask=()=>{Qy.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success(worker exception)\")),this.streamingTasks.delete(e),t()},this.connection.request(\"request\",{clientRequest:{command:\"UnpublishStream\",url:n.url}},!1,{url:e,command:\"UnPublishStream\",workerType:r===Cb.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then((i=>{Qy.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success, code: \").concat(i.code)),this.streamingTasks.delete(e),0===this.streamingTasks.size&&(this.connection&&this.connection.close(),this.connection=void 0),t()})).catch(i)}))}resetAllTask(){var e;const t=Array.from(Qw(e=this.streamingTasks).call(e));this.terminate();for(const e of t)this.startLiveStreamingTask(e.url,e.mode).catch((t=>{this.onLiveStreamError&&this.onLiveStreamError(e.url,t)}))}terminate(){this.cancelToken&&this.cancelToken.cancel(),this.streamingTasks=new Map,this.isStartingStreamingTask=!1,this.statusError=new Map,this.cancelToken=EI.CancelToken.source(),this.uapResponse=void 0,this.connection&&this.connection.close(),this.connection=void 0}async connect(e){if(this.connection)throw new Sb(nv.UNEXPECTED_ERROR,\"live streaming connection has already connected\");const t=await kv(this,wb.REQUEST_WORKER_MANAGER_LIST,e);return this.uapResponse=t,this.connection=new EK(t.workerToken,this.spec,this.wsRetryConfig,e),this.connection.on(bb.WARNING,((e,t)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e))),this.connection.on(bb.PUBLISH_STREAM_STATUS,(e=>this.handlePublishStreamServer(e))),this.connection.on(bb.REQUEST_NEW_ADDRESS,((t,i)=>{if(!this.connection)return i(new Sb(nv.UNEXPECTED_ERROR,\"can not get new live streaming address list\"));kv(this,wb.REQUEST_WORKER_MANAGER_LIST,e).then((e=>{this.uapResponse=e,t(e.addressList)})).catch(i)})),await this.connection.init(t.addressList),this.connection}handlePublishStreamServer(e){const t=e.serverStatus&&e.serverStatus.url||\"empty_url\",i=this.streamingTasks.get(t),n=e.reason;switch(e.code){case Ob.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Ob.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{const n=new Sb(nv.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code});if(i)return Qy.error(n.toString()),this.onLiveStreamError&&this.onLiveStreamError(t,n);if(!this.isStartingStreamingTask)return;this.statusError.set(t,n)}case Ob.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const e=new Sb(nv.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE,n);return this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)}case Ob.LIVE_STREAM_RESPONSE_WORKER_LOST:case Ob.LIVE_STREAM_RESPONSE_WORKER_QUIT:{var r;if(!this.connection)return;this.connection.tryNextAddress();const t=Array.from(Qw(r=this.streamingTasks).call(r));for(const i of t)i.abortTask?i.abortTask():(Qy.warning(\"[\".concat(this.spec.clientId,\"] publish stream status code\"),e.code,\"try to republish\",i.url),this.startLiveStreamingTask(i.url,i.mode,new Sb(nv.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code})).then((()=>{Qy.debug(\"[\".concat(this.spec.clientId,\"] republish live stream success\"),i.url)})).catch((e=>{Qy.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(i.url,e)})));return}}}hasUrl(e){return this.streamingTasks.has(e)}}const SK={name:\"LiveStreaming\",create:function(e){return new TK(e.joinInfo,e.websocketRetryConfig||_y,e.httpRetryConfig||_y)}};function gK(e){let t=DK();return function(e,t){let i=e.appId;void 0!==i&&(KK(t,10),VK(t,i));let n=e.cid;void 0!==n&&(KK(t,16),KK(t,n));let r=e.cname;void 0!==r&&(KK(t,26),VK(t,r));let o=e.deviceId;void 0!==o&&(KK(t,34),VK(t,o));let s=e.elapse;void 0!==s&&(KK(t,40),YK(t,s));let a=e.fileSize;void 0!==a&&(KK(t,48),YK(t,OK(a)));let c=e.height;void 0!==c&&(KK(t,56),YK(t,OK(c)));let d=e.jpg;void 0!==d&&(KK(t,66),KK(t,d.length),function(e,t){let i=MK(e,t.length);e.bytes.set(t,i)}(t,d));let l=e.networkType;void 0!==l&&(KK(t,72),YK(t,OK(l)));let u=e.osType;void 0!==u&&(KK(t,80),YK(t,OK(u)));let h=e.requestId;void 0!==h&&(KK(t,90),VK(t,h));let p=e.sdkVersion;void 0!==p&&(KK(t,98),VK(t,p));let _=e.sequence;void 0!==_&&(KK(t,104),YK(t,OK(_)));let E=e.sid;void 0!==E&&(KK(t,114),VK(t,E));let m=e.timestamp;void 0!==m&&(KK(t,120),YK(t,m));let f=e.uid;void 0!==f&&(KK(t,128),KK(t,f));let T=e.vid;void 0!==T&&(KK(t,136),KK(t,T));let S=e.width;void 0!==S&&(KK(t,144),YK(t,OK(S)));let g=e.service;void 0!==g&&(KK(t,152),KK(t,g));let R=e.callbackData;void 0!==R&&(KK(t,162),VK(t,R));let C=e.jpgEncryption;void 0!==C&&(KK(t,168),KK(t,C));let I=e.requestType;void 0!==I&&(KK(t,176),KK(t,I));let v=e.scorePorn;void 0!==v&&(KK(t,185),WK(t,v));let y=e.scoreSexy;void 0!==y&&(KK(t,193),WK(t,y));let A=e.scoreNeutral;void 0!==A&&(KK(t,201),WK(t,A));let b=e.scene;void 0!==b&&(KK(t,208),KK(t,b));let w=e.ossFilePrefix;void 0!==w&&(KK(t,218),VK(t,w));let O=e.serviceVendor;if(void 0!==O)for(let e of O){KK(t,226);let i=DK();IK(e,i),KK(t,i.limit),FK(t,i),PK(i)}}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function RK(e){return function(e){let t={};e:for(;!kK(e);){let i=HK(e);switch(i>>>3){case 0:break e;case 1:t.code=HK(e);break;case 2:t.msg=xK(e,HK(e));break;case 3:{let i=vK(e);t.data=CK(e),e.limit=i;break}default:yK(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function CK(e){let t={};e:for(;!kK(e);){let i=HK(e);switch(i>>>3){case 0:break e;case 1:t.requestId=xK(e,HK(e));break;case 2:t.requestType=HK(e)>>>0;break;case 3:t.scorePorn=GK(e);break;case 4:t.scoreSexy=GK(e);break;case 5:t.scoreNeutral=GK(e);break;case 6:t.requestScene=HK(e)>>>0;break;case 7:t.scene=HK(e)>>>0;break;default:yK(e,7&i)}}return t}function IK(e,t){let i=e.service;void 0!==i&&(KK(t,8),KK(t,i));let n=e.vendor;void 0!==n&&(KK(t,16),KK(t,n));let r=e.token;void 0!==r&&(KK(t,26),VK(t,r));let o=e.callbackUrl;void 0!==o&&(KK(t,34),VK(t,o))}function vK(e){let t=HK(e),i=e.limit;return e.limit=e.offset+t,i}function yK(e,t){switch(t){case 0:for(;128&BK(e););break;case 2:LK(e,HK(e));break;case 5:LK(e,4);break;case 1:LK(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}let AK=new Float32Array(1);new Uint8Array(AK.buffer);let bK=new Float64Array(1),wK=new Uint8Array(bK.buffer);function OK(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let NK=[];function DK(){const e=NK.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}function PK(e){NK.push(e)}function LK(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function kK(e){return e.offset>=e.limit}function MK(e,t){let i=e.bytes,n=e.offset,r=e.limit,o=n+t;if(o>i.length){let t=new Uint8Array(2*o);t.set(i),e.bytes=t}return e.offset=o,o>r&&(e.limit=o),n}function UK(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function xK(e,t){let i=UK(e,t),n=String.fromCharCode,r=e.bytes,o=\"ï¿½\",s=\"\";for(let e=0;e<t;e++){let a,c,d,l,u=r[e+i];0==(128&u)?s+=n(u):192==(224&u)?e+1>=t?s+=o:(a=r[e+i+1],128!=(192&a)?s+=o:(l=(31&u)<<6|63&a,l<128?s+=o:(s+=n(l),e++))):224==(240&u)?e+2>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],32896!=(49344&(a|c<<8))?s+=o:(l=(15&u)<<12|(63&a)<<6|63&c,l<2048||l>=55296&&l<=57343?s+=o:(s+=n(l),e+=2))):240==(248&u)?e+3>=t?s+=o:(a=r[e+i+1],c=r[e+i+2],d=r[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(l=(7&u)<<18|(63&a)<<12|(63&c)<<6|63&d,l<65536||l>1114111?s+=o:(l-=65536,s+=n(55296+(l>>10),56320+(1023&l)),e+=3))):s+=o}return s}function VK(e,t){let i=t.length,n=0;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),n+=r<128?1:r<2048?2:r<65536?3:4}KK(e,n);let r=MK(e,n),o=e.bytes;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),n<128?o[r++]=n:(n<2048?o[r++]=n>>6&31|192:(n<65536?o[r++]=n>>12&15|224:(o[r++]=n>>18&7|240,o[r++]=n>>12&63|128),o[r++]=n>>6&63|128),o[r++]=63&n|128)}}function FK(e,t){let i=MK(e,t.limit),n=e.bytes,r=t.bytes;for(let e=0,o=t.limit;e<o;e++)n[e+i]=r[e]}function BK(e){return e.bytes[UK(e,1)]}function jK(e,t){let i=MK(e,1);e.bytes[i]=t}function GK(e){let t=UK(e,8),i=e.bytes;return wK[0]=i[t++],wK[1]=i[t++],wK[2]=i[t++],wK[3]=i[t++],wK[4]=i[t++],wK[5]=i[t++],wK[6]=i[t++],wK[7]=i[t++],bK[0]}function WK(e,t){let i=MK(e,8),n=e.bytes;bK[0]=t,n[i++]=wK[0],n[i++]=wK[1],n[i++]=wK[2],n[i++]=wK[3],n[i++]=wK[4],n[i++]=wK[5],n[i++]=wK[6],n[i++]=wK[7]}function HK(e){let t,i=0,n=0;do{t=BK(e),i<32&&(n|=(127&t)<<i),i+=7}while(128&t);return n}function KK(e,t){for(t>>>=0;t>=128;)jK(e,127&t|128),t>>>=7;jK(e,t)}function YK(e,t){let i=t.low>>>0,n=(t.low>>>28|t.high<<4)>>>0,r=t.high>>>24,o=0===r?0===n?i<16384?i<128?1:2:i<1<<21?3:4:n<16384?n<128?5:6:n<1<<21?7:8:r<128?9:10,s=MK(e,o),a=e.bytes;switch(o){case 10:a[s+9]=r>>>7&1;case 9:a[s+8]=9!==o?128|r:127&r;case 8:a[s+7]=8!==o?n>>>21|128:n>>>21&127;case 7:a[s+6]=7!==o?n>>>14|128:n>>>14&127;case 6:a[s+5]=6!==o?n>>>7|128:n>>>7&127;case 5:a[s+4]=5!==o?128|n:127&n;case 4:a[s+3]=4!==o?i>>>21|128:i>>>21&127;case 3:a[s+2]=3!==o?i>>>14|128:i>>>14&127;case 2:a[s+1]=2!==o?i>>>7|128:i>>>7&127;case 1:a[s]=1!==o?128|i:127&i}}function qK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}const zK=new Map([[\"moderation\",1],[\"supervise\",2]]);function JK(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}class XK extends Sv{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(ew.CONNECTION_STATE_CHANGE,t,e)}get inspectType(){return this._inspectType}set inspectType(e){var t;this._inspectMode=Jn(t=e.map((e=>zK.get(e)||0))).call(t,((e,t)=>e+t)),this._inspectType=e}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this.qualityTimer&&(window.clearTimeout(this.qualityTimer),this.qualityTimer=null),this._quality>=1||(this.qualityTimer=window.setTimeout((()=>{this.quality=this._quality/this.qualityRatio}),6e4))}constructor(e){super(),og(this,\"name\",\"AgoraRTCVideoContentInspect\"),og(this,\"_connectionState\",Zb.CONNECTING),og(this,\"_innerConnectionState\",void 0),og(this,\"sequence\",0),og(this,\"inspectStartTime\",void 0),og(this,\"workerManagerConnection\",void 0),og(this,\"workerConnection\",void 0),og(this,\"workerMessageLengthLimit\",void 0),og(this,\"inspectIntervalMinimum\",void 0),og(this,\"qualityRatio\",void 0),og(this,\"_connectInfo\",void 0),og(this,\"_cancelTokenSource\",EI.CancelToken.source()),og(this,\"_retryConfig\",void 0),og(this,\"wmSequence\",0),og(this,\"inspectInterval\",void 0),og(this,\"inspectTimer\",null),og(this,\"ossFilePrefix\",void 0),og(this,\"extraInfo\",void 0),og(this,\"_inspectType\",void 0),og(this,\"_inspectMode\",void 0),og(this,\"_quality\",1),og(this,\"qualityTimer\",null),og(this,\"_inspectId\",void 0),og(this,\"_needWorkUrlOnly\",!1),og(this,\"inspectImage\",(()=>{if(this.connectionState!==Zb.CONNECTED)throw new Sb(nv.OPERATION_ABORTED,\"content inspect service connection status is \".concat(this.connectionState));this.inspectTimer&&(window.clearInterval(this.inspectTimer),this.inspectTimer=null),this.inspectTimer=window.setInterval((()=>{this.connectionState===Zb.CONNECTED?this.requestToInspectImage():Qy.debug(\"[\".concat(this._inspectId,\"] Inspect State is not connected , \"),this.connectionState)}),this.inspectInterval<this.inspectIntervalMinimum?this.inspectIntervalMinimum:this.inspectInterval),this.requestToInspectImage()})),this._inspectId=ey(5,\"inspect-\"),this.workerMessageLengthLimit=Dy(\"VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT\"),this.inspectIntervalMinimum=Dy(\"VIDEO_INSPECT_INTERVAL_MINIMUM\"),this.qualityRatio=Dy(\"VIDEO_INSPECT_QUALITY_RATIO\"),this.inspectInterval=e.interval,this.ossFilePrefix=e.ossFilePrefix,this.extraInfo=e.extraInfo,this.inspectType=e.inspectType,this.inspectStartTime=Number(Date.now()),this.workerManagerConnection=new bw(\"worker-manager-\"+this._inspectId,_y),this.on(ew.STATE_CHANGE,((e,t)=>{this._innerConnectionState=e,Qy.debug(\"[\".concat(this._inspectId,\"] Inspect operation :\").concat($b[e],\" \").concat(t||\"\"))})),this.handleWorkerManagerEvents(),this.workerConnection=new bw(\"worker-\"+this._inspectId,_y),this.handleWorkerEvents()}async init(e,t){this.emit(ew.STATE_CHANGE,$b.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new Gh(((n,r)=>{this.on(ew.CONNECTION_STATE_CHANGE,((e,t)=>{t===Zb.CONNECTED&&n()})),this.requestAP(e,i,t).then((e=>{this.connectWorkerManager(e)})).catch((e=>{r(e)}))}))}async requestAP(e,t,i){const n=Dy(\"WEBCS_DOMAIN\").map((e=>\"https://\".concat(e,\"/api/v1\"))),r=await function(e,t,i,n){let{appId:r,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;IU++;const l=\"image_moderation_api\",u={service_name:l,json_body:JSON.stringify({appId:r,areaCode:o,cname:s,command:\"allocateEdge\",requestId:IU,seq:IU,sid:a,token:c,ts:Date.now(),uid:d+\"\"})};let h,p,_=e[0];return my((async()=>{h=Date.now();const e=await tU(_,{data:u,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(p=Date.now()-h,0!==e.code){const t=new Sb(nv.UNEXPECTED_RESPONSE,\"image inspect ap error, code\"+e.code,{retry:!0,responseTime:p});throw Qy.error(t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"image inspect ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:p});throw Qy.error(e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new Sb(nv.UNEXPECTED_RESPONSE,\"image inspect ap empty server\",{code:t.code,responseTime:p});throw Qy.error(e.toString()),e}const n=Dy(\"VIDEO_INSPECT_WORKER_MANAGER_HOST\"),r=Dy(\"VIDEO_INSPECT_WORKER_MANAGER_PORT\");return{addressList:t.servers.map((e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(n,\":\").concat(r||i)})).filter((e=>!!e)),workerToken:t.workerToken,vid:t.vid,responseTime:p}}),((t,i)=>(sA.apworkerEvent(a,{success:!0,sc:200,serviceName:l,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:p,serverIp:e[i%e.length]}),!1)),((t,i)=>(sA.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:l,responseTime:p,serverIp:e[i%e.length]}),!!(t.code!==nv.OPERATION_ABORTED&&t.code!==nv.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(_=e[(i+1)%e.length],!0))),n)}(n,e,t,i);this.emit(ew.STATE_CHANGE,$b.AP_CONNECTED);const{addressList:o}=r;return this.wmSequence++,o}async connectWorkerManager(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._needWorkUrlOnly=t,this.emit(ew.STATE_CHANGE,$b.CONNECT_WORKER_MANAGER),await this.workerManagerConnection.init(e,1e4)}async connectWorker(e){await this.workerConnection.init([e])}handleWorkerManagerEvents(){this.workerManagerConnection.on(Tb.CONNECTED,(async()=>{this.emit(ew.STATE_CHANGE,$b.WORKER_MANAGER_CONNECTED,this.workerManagerConnection.url),this.workerManagerConnection.sendMessage({appId:this._connectInfo.appId,cname:this._connectInfo.cname,uid:this._connectInfo.uid+\"\",sdkVersion:\"4.22.0\",sid:this._connectInfo.sid,seq:this.wmSequence,ts:Number(Date.now()),requestId:Math.floor(1e12*Math.random()),allocate:!0,clientRequest:{command:\"join\"}},!0)})),this.workerManagerConnection.on(Tb.CLOSED,(()=>{this._innerConnectionState<$b.GET_WORKER_MANAGER_RESPONSE&&Qy.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is closed before connecting worker\"))})),this.workerManagerConnection.on(Tb.FAILED,(()=>{this._innerConnectionState<$b.GET_WORKER_MANAGER_RESPONSE&&Qy.debug(\"[\".concat(this._inspectId,\"] Connecting inspect worker manager is failed before connecting worker\"))})),this.workerManagerConnection.on(Tb.RECONNECTING,(()=>{this._innerConnectionState<$b.GET_WORKER_MANAGER_RESPONSE&&Qy.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is reconnecting before connecting worker\"))})),this.workerManagerConnection.on(Tb.ON_MESSAGE,(async e=>{this.emit(ew.STATE_CHANGE,$b.GET_WORKER_MANAGER_RESPONSE);const t=this.workerManagerConnection.url;this.workerManagerConnection.close();const i=JSON.parse(e.data);if(200!==i.code)throw Qy.error(\"[\".concat(this._inspectId,\"] Unexpected code \").concat(i.code,\" from worker manager\")),new Sb(nv.UNEXPECTED_RESPONSE,\"response code of worker is unexpected\",i);if(!(i.serverResponse&&i.serverResponse.portWss&&t))throw Qy.error(\"[\".concat(this._inspectId,\"] Unexpected content from worker manager : \").concat(JSON.stringify(i))),new Sb(nv.UNEXPECTED_RESPONSE,\"response content of worker is unexpected\",i);{const e=Dy(\"VIDEO_INSPECT_WORKER_PORT\")||i.serverResponse.portWss,n=t.replace(/:\\d+\\/?$/,\":\".concat(e));this.emit(ew.STATE_CHANGE,$b.CONNECT_WORKER,n),this._needWorkUrlOnly?this.emit(ew.REQUEST_NEW_WORKER_URL,n):await this.connectWorker(n)}})),this.workerManagerConnection.on(Tb.WILL_RECONNECT,((e,t,i)=>{i(e)})),this.workerManagerConnection.on(Tb.REQUEST_NEW_URLS,((e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)}))}handleWorkerEvents(){this.workerConnection.on(Tb.CONNECTED,(async()=>{this.emit(ew.STATE_CHANGE,$b.WORKER_CONNECTED,this.workerConnection.url),this.connectionState=Zb.CONNECTED})),this.workerConnection.on(Tb.ON_MESSAGE,(async e=>{if(e.data instanceof ArrayBuffer){const i=RK(new Uint8Array(e.data));if(Dy(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")&&Qy.debug(\"[\".concat(this._inspectId,\"] Response message for worker of inspect content \"),JSON.stringify(i)),200===i.code){if(Array.isArray(this.inspectType)&&1===this.inspectType.length&&\"supervise\"===this.inspectType[0])return void this.emit(ew.INSPECT_RESULT,void 0,void 0);if(i.data&&i.data.scorePorn&&i.data.scoreSexy&&i.data.scoreNeutral){var t;const e={porn:i.data.scorePorn,sexy:i.data.scoreSexy,neutral:i.data.scoreNeutral},n=Jn(t=Object.keys(e)).call(t,((t,i)=>e[t]>e[i]?t:i),\"porn\"),r=Object.keys(e).find((e=>e===n));this.emit(ew.INSPECT_RESULT,r)}else this.emit(ew.INSPECT_RESULT,void 0,new Sb(nv.UNEXPECTED_RESPONSE,i.code+\"\",\"There is an unexpected data on message\"))}else this.emit(ew.INSPECT_RESULT,void 0,new Sb(nv.UNEXPECTED_RESPONSE,i.code+\"\",i.msg))}else Qy.error(\"[\".concat(this._inspectId,\"] Unexpected message type from worker\")),this.emit(ew.INSPECT_RESULT,void 0,new Sb(nv.UNEXPECTED_RESPONSE,\"invalid worker message type\"))})),this.workerConnection.on(Tb.CLOSED,(()=>{this.connectionState=Zb.CLOSED})),this.workerConnection.on(Tb.FAILED,(()=>{this.connectionState=Zb.CLOSED})),this.workerConnection.on(Tb.RECONNECTING,(()=>{this.connectionState=this.connectionState===Zb.CONNECTED?Zb.RECONNECTING:Zb.CONNECTING})),this.workerConnection.on(Tb.WILL_RECONNECT,((e,t,i)=>{\"recover\"===e&&i(e),i(\"tryNext\")})),this.workerConnection.on(Tb.REQUEST_NEW_URLS,((e,t)=>{this.workerManagerConnection.close(),this.once(ew.REQUEST_NEW_WORKER_URL,(t=>{e([t])})),this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then((e=>{this.connectWorkerManager(e,!0)})).catch((e=>{t(e)}))}))}async requestToInspectImage(){this.sequence++;const e=Uv(this,ew.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void this.emit(ew.INSPECT_RESULT,void 0,new Sb(nv.INVALID_OPERATION,\"Only the track being played can be inspected\"));const i=await this.generateRequestData(e,t);this.workerConnection.sendMessage(i,!0,!0)}else this.emit(ew.INSPECT_RESULT,void 0,new Sb(nv.INVALID_OPERATION,\"Only the track being published can be inspected\"))}async generateRequestData(e,t){let{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),l=await hL(d,i,n),u=this.sequence+\"-\"+r+\"-\"+a+\"-\"+c+\"-\"+ey(12,\"\"),h={appId:i,cid:r,cname:n,deviceId:\"\",elapse:JK(Number(c-this.inspectStartTime)),fileSize:l.byteLength,jpgEncryption:2,height:d.height,width:d.width,jpg:l,networkType:6,osType:7,requestId:u,sdkVersion:\"4.22.0\",sequence:this.sequence,sid:s,timestamp:JK(c),uid:a,vid:o,service:this._inspectMode,callbackData:this.extraInfo,ossFilePrefix:this.ossFilePrefix};void 0===this.extraInfo&&delete h.callbackData,void 0===this.ossFilePrefix&&delete h.ossFilePrefix;const p=gK(h);if(p.byteLength<this.workerMessageLengthLimit){if(Dy(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?qK(Object(i),!0).forEach((function(t){og(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):qK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},h);delete e.jpg,Qy.debug(\"[\".concat(this._inspectId,\"] Request message for worker of inspect content \"),JSON.stringify(e))}return p}{const t=this.quality*this.qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:n,cid:r,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=EI.CancelToken.source(),this.workerManagerConnection&&this.workerManagerConnection.close(),this.workerConnection&&this.workerConnection.close(),this.inspectTimer&&window.clearInterval(this.inspectTimer),this.inspectTimer=null,this.connectionState=Zb.CLOSED,this.emit(ew.STATE_CHANGE,$b.CLOSED)}}const QK={name:\"ContentInspect\",create:function(e){let{config:t}=e;return function(e){if(!e)throw new Sb(nv.INVALID_PARAMS,\"inspectConfig is necessary.\");if(!e.inspectType||!Array.isArray(e.inspectType))throw new Sb(nv.INVALID_PARAMS,\"inspectConfig.inspectType is necessary and is an instance of Array.\");{const t=[...new Set(e.inspectType)];t.forEach((e=>{var t;if(!Dn(t=[\"supervise\",\"moderation\"]).call(t,e))throw new Sb(nv.INVALID_PARAMS,\"\".concat(e,\" is not a valid inspect type.\"))})),e.inspectType=t}if(e&&e.extraInfo&&e.extraInfo.length>1024)throw new Sb(nv.INVALID_PARAMS,\"inspectConfig.extraInfo length cannot exceed 1024 bytes\")}(t),new XK(t)}};Ny(\"PROCESS_ID\",\"process-\".concat(ey(8,\"\"),\"-\").concat(ey(4,\"\"),\"-\").concat(ey(4,\"\"),\"-\").concat(ey(4,\"\"),\"-\").concat(ey(12,\"\"))),function(){let e;try{e=window.localStorage.getItem(\"websdk_ng_global_parameter\")}catch(e){return void Qy.error(\"Error loading sdk config\",e.message)}if(e)try{const t=JSON.parse(window.atob(e)),i=Date.now();Qy.debug(\"Loading global parameters from cache\",t),Object.keys(t).forEach((e=>{if(Object.prototype.hasOwnProperty.call(Oy,e)){const{value:n,expires:r}=t[e];if(r&&r<=i)return;Py[e]=n,Oy[e]=n}}))}catch(t){Qy.error(\"Error loading mutableParamsCache: \".concat(e),t.message)}}(),Array.isArray(Py.AREAS)&&Py.AREAS.length>0&&lU(Py.AREAS,!0);const ZK=(e,t,i)=>{Qy.debug(\"setParameter key:\".concat(e,\", value:\").concat(JSON.stringify(t))),Ny(e,t,i)};EF(hK,!1),EF(SK,!1),EF(NB,!1),EF(QK,!1),EF(dK,!1);const $K=function(e){const t=new Sv,i=e,n={getListeners:t.getListeners.bind(t),on:(e,i)=>(function(e,t){e===iw.SECURITY_POLICY_VIOLATION&&Oj(t,!0)}(e,i),t.on.bind(t)(e,i)),addListener:t.addListener.bind(t),once:t.once.bind(t),off:t.off.bind(t),removeAllListeners:t.removeAllListeners.bind(t),emit:t.emit.bind(t),safeEmit:t.safeEmit.bind(t)};return bj(bj({},i),n)}({__TRACK_LIST__:QD,VERSION:vy,BUILD:wy,ESM_BUNDLER:!1,ESM:!0,UMD:!1,DEV:!1,setParameter:ZK,getParameter:Dy,getSupportedCodec:async function(){let e={audio:[],video:[]};try{let t=new RTCPeerConnection;const i=await async function(e){let t;return MD().supportUnifiedPlan?(e.addTransceiver(\"video\",{direction:\"recvonly\"}),e.addTransceiver(\"audio\",{direction:\"recvonly\"}),t=(await e.createOffer()).sdp):t=(await e.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0})).sdp,t}(t);if(!i)return e;t.close(),t=null,e=function(e){const t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push(\"VP8\"),e.match(/ VP9/i)&&t.video.push(\"VP9\"),e.match(/ AV1/i)&&t.video.push(\"AV1\"),e.match(/ H264/i)&&t.video.push(\"H264\"),e.match(/ H265/i)&&t.video.push(\"H265\"),e.match(/ opus/i)&&t.audio.push(\"OPUS\"),e.match(/ PCMU/i)&&t.audio.push(\"PCMU\"),e.match(/ PCMA/i)&&t.audio.push(\"PCMA\"),e.match(/ G722/i)&&t.audio.push(\"G722\"),t}(i)}catch(e){throw new Sb(nv.CREATE_OFFER_FAILED,e.toString&&e.toString()).print()}return e},checkSystemRequirements:function(){const e=sA.reportApiInvoke(null,{name:Cv.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:Iv.TRACER});let t=!1;try{const e=window.RTCPeerConnection,i=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,n=window.WebSocket;t=!!(e&&i&&n),t&&XI()&&xI(75)&&(new e).close()}catch(e){return Qy.error(\"check system requirement failed: \",e),!1}let i=!1;const n=AI();n.name===CI.CHROME&&Number(n.version)>=58&&(\"WebKit\"!==vI.engine.name||function(){const e=AI();if(NI()){if(e.os===RI.MAC_OS)return!0;if(e.os===RI.IOS){const e=vI.os.version&&vI.os.version.split(\".\");if(e&&14===Number(e[0])&&e[1]&&Number(e[1])>=3)return!0;if(e&&Number(e[0])>14)return!0}}return!1}())&&(i=!0),(n.name===CI.FIREFOX&&Number(n.version)>=56||n.name===CI.OPERA&&Number(n.version)>=45||n.name===CI.SAFARI&&Number(n.version)>=11||\"WebKit\"===n.name&&(MI()||qI())&&n.osVersion&&Number(n.osVersion.split(\".\")[0])>=11||zI()||AI().name===CI.QQ)&&(i=!0),Qy.debug(\"checkSystemRequirements, api:\",t,\"browser\",i);const r=t&&i;return e.onSuccess(r),r},getDevices:function(e){return zP.enumerateDevices(!0,!0,e)},getMicrophones:function(e){return zP.getRecordingDevices(e)},getCameras:function(e){return zP.getCamerasDevices(e)},getElectronScreenSources:BP,getPlaybackDevices:function(e){return zP.getSpeakers(e)},createClient:function(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{codec:\"vp8\",audioCodec:\"opus\",mode:\"rtc\"};const i=sA.reportApiInvoke(null,{name:Cv.CREATE_CLIENT,options:[t],tag:Iv.TRACER});try{!function(e){sv(e.codec,\"config.codec\",[\"vp8\",\"vp9\",\"av1\",\"h264\",\"h265\"]),sv(e.mode,\"config.mode\",[\"rtc\",\"live\",\"p2p\"]),void 0!==e.audioCodec&&sv(e.audioCodec,\"config.audioCodec\",[\"opus\",\"pcmu\",\"pcma\",\"g722\"]),void 0!==e.proxyServer&&dv(e.proxyServer,\"config.proxyServer\",1,1e4),void 0!==e.turnServer&&wv(e.turnServer),void 0!==e.httpRetryConfig&&vv(e.httpRetryConfig),void 0!==e.websocketRetryConfig&&vv(e.websocketRetryConfig)}(t)}catch(e){throw i.onError(e),e}return(BI(16,0,!0)||jI(16,0,!0))&&(\"vp9\"===t.codec&&(t.codec=\"vp8\",Qy.debug(\"browser not support vp9, force use vp8\")),Ny(\"UNSUPPORTED_VIDEO_CODEC\",[\"vp9\"])),void 0===t.audioCodec&&(t.audioCodec=\"opus\"),i.onSuccess(),new gj(Sj(Sj({forceWaitGatewayResponse:!0},t),{},{role:Dn(e=[\"rtc\",\"p2p\"]).call(e,t.mode)?\"host\":t.role||\"audience\"}))},createCameraVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=Dy(\"CAMERA_CAPTURE_CONFIG\"),i=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_CAM_VIDEO_TRACK,options:[yP({},e),t]});t&&(e.encoderConfig=t);const n=dL(e),r=ey(8,\"track-cam-\");let o=null;Qy.info(\"start create camera video track with config\",JSON.stringify(e),\"trackId\",r);try{o=(await HP({video:n},r)).getVideoTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new rv(nv.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw(Qy)}e.optimizationMode&&Yk(r,o,e,YD(e.encoderConfig));const s=new Kk(o,e,n,e.scalabiltyMode?zD(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,r);return i.onSuccess(s.getTrackId()),Qy.info(\"create camera video success, trackId:\",r),s},createCustomVideoTrack:function(e){const t=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_CUSTOM_VIDEO_TRACK,options:[e]}),i=new Hk(e.mediaStreamTrack,{width:e.width,height:e.height,frameRate:e.frameRate,bitrateMax:e.bitrateMax,bitrateMin:e.bitrateMin},e.scalabiltyMode?zD(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,ey(8,\"track-cus-\"),[eP.CUSTOM_TRACK]);return t.onSuccess(i.getTrackId()),Qy.info(\"create custom video track success with config\",e,\"trackId\",i.getTrackId()),i},createScreenVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"disable\";const i=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_SCREEN_VIDEO_TRACK,options:[yP({},e),t]});e.encoderConfig?\"string\"==typeof e.encoderConfig||e.encoderConfig.width&&e.encoderConfig.height||(e.encoderConfig.width={max:1920},e.encoderConfig.height={max:1080}):e.encoderConfig=\"1080p_2\";const n=function(e){const t={};e.screenSourceType&&(t.mediaSource=e.screenSourceType),e.extensionId&&DI()&&(t.extensionId=e.extensionId);const{displaySurface:i,selfBrowserSurface:n,surfaceSwitching:r,systemAudio:o}=e;(UI(107)||VI(107)||GI(93))&&(i&&(sv(i,\"displaySurface\",[\"browser\",\"window\",\"monitor\"]),t.displaySurface=i),n?(sv(n,\"selfBrowserSurface\",[\"exclude\",\"include\"]),t.selfBrowserSurface=n):t.selfBrowserSurface=\"include\",r&&(sv(r,\"surfaceSwitching\",[\"exclude\",\"include\"]),t.surfaceSwitching=r)),(UI(105)||VI(105)||GI(91))&&o&&(sv(o,\"systemAudio\",[\"exclude\",\"include\"]),t.systemAudio=o),e.electronScreenSourceId&&(t.sourceId=e.electronScreenSourceId);const s=e.encoderConfig?qD(e.encoderConfig):null;return t.mandatory={chromeMediaSource:\"desktop\",maxWidth:s?s.width:void 0,maxHeight:s?s.height:void 0},s&&(s.frameRate&&(\"number\"==typeof s.frameRate?(t.mandatory.maxFrameRate=s.frameRate,t.mandatory.minFrameRate=s.frameRate):(t.mandatory.maxFrameRate=s.frameRate.max||s.frameRate.ideal||s.frameRate.exact||void 0,t.mandatory.minFrameRate=s.frameRate.min||s.frameRate.ideal||s.frameRate.exact||void 0),t.frameRate=s.frameRate),s.width&&(t.width=s.width),s.height&&(t.height=s.height)),t}(e),r=ey(8,\"track-scr-v-\");let o=null,s=null;const a=MD();if(!a.supportShareAudio&&\"enable\"===t){const e=new rv(nv.NOT_SUPPORTED,\"your browser or platform is not support share-screen with audio\");return i.onError(e),e.throw(Qy)}Qy.info(\"start create screen video track with config\",e,\"withAudio\",t,\"trackId\",r);try{const e=await HP({screen:n,screenAudio:\"auto\"===t?a.supportShareAudio:\"enable\"===t},r);o=e.getVideoTracks()[0]||null,s=e.getAudioTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new rv(nv.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw(Qy)}if(!s&&\"enable\"===t){o&&o.stop();const e=new rv(nv.SHARE_AUDIO_NOT_ALLOWED);return i.onError(e),e.throw(Qy)}e.optimizationMode||(e.optimizationMode=\"detail\"),e.optimizationMode&&(Yk(r,o,e,e.encoderConfig&&qD(e.encoderConfig)||void 0),e.encoderConfig&&\"string\"!=typeof e.encoderConfig&&(e.encoderConfig.bitrateMin=e.encoderConfig.bitrateMax));const c=new Hk(o,e.encoderConfig?qD(e.encoderConfig):{},e.scalabiltyMode?zD(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,r,[eP.SCREEN_TRACK]);if(!s)return i.onSuccess(c.getTrackId()),Qy.info(\"create screen video track success\",\"video:\",c.getTrackId()),c;const d=new tk(s,void 0,ey(8,\"track-scr-a-\"),!1);return i.onSuccess([c.getTrackId(),d.getTrackId()]),Qy.info(\"create screen video track success\",\"video:\",c.getTrackId(),\"audio:\",d.getTrackId()),[c,d]},createMicrophoneAndCameraTracks:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=Dy(\"CAMERA_CAPTURE_CONFIG\"),n=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_MIC_AND_CAM_TRACKS,options:[e,t,i]});i&&(t.encoderConfig=i);const r=dL(t),o=lL(e),s=ey(8,\"track-mic-\"),a=ey(8,\"track-cam-\");let c=null,d=null;Qy.info(\"start create camera video track(\".concat(a,\") and microphone audio track(\").concat(s,\") with config, audio: \").concat(JSON.stringify(e),\", video: \").concat(JSON.stringify(t)));try{const e=await HP({audio:o,video:r},\"\".concat(s,\"-\").concat(a));c=e.getAudioTracks()[0],d=e.getVideoTracks()[0]}catch(e){throw n.onError(e),e}if(!c||!d){const e=new rv(nv.UNEXPECTED_ERROR,\"can not find tracks in media stream\");return n.onError(e),e.throw(Qy)}t.optimizationMode&&Yk(a,d,t,YD(t.encoderConfig));const l=new ik(c,e,o,s),u=new Kk(d,t,r,t.scalabiltyMode?zD(t.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},t.optimizationMode,a);return n.onSuccess([l.getTrackId(),u.getTrackId()]),Qy.info(\"create camera video track(\".concat(a,\") and microphone audio track(\").concat(s,\") success\")),[l,u]},createMicrophoneAudioTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_MIC_AUDIO_TRACK,options:[e]}),i=lL(e),n=ey(8,\"track-mic-\");let r=null;Qy.info(\"start create microphone audio track with config\",JSON.stringify(e),\"trackId\",n);try{r=(await HP({audio:i},n)).getAudioTracks()[0]||null}catch(e){throw t.onError(e),e}if(!r){const e=new rv(nv.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw(Qy)}const o=new ik(r,e,i,n);return t.onSuccess(o.getTrackId()),Qy.info(\"create microphone audio track success, trackId:\",n),o},createCustomAudioTrack:function(e){const t=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_CUSTOM_AUDIO_TRACK,options:[e]}),i=new tk(e.mediaStreamTrack,e.encoderConfig?XD(e.encoderConfig):{},ey(8,\"track-cus-\"),!1);return Qy.info(\"create custom audio track success with config\",e,\"trackId\",i.getTrackId()),t.onSuccess(i.getTrackId()),i},createBufferSourceAudioTrack:async function(e){var t;const{cacheOnlineFile:i,encoderConfig:n}=e;let{source:r}=e;const o={source:r instanceof AudioBuffer?\"AudioBuffer\":r instanceof File?null!==(t=File.name)&&void 0!==t?t:\"File\":r,cacheOnlineFile:i,encoderConfig:n},s=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CREATE_BUFFER_AUDIO_TRACK,options:[o]});if(Dy(\"DISABLE_WEBAUDIO\"))throw new rv(nv.NOT_SUPPORTED,\"can not create BufferSourceAudioTrack when WebAudio disabled\");const a=ey(8,\"track-buf-\");Qy.info(\"start create buffer source audio track with config\",JSON.stringify(o),\"trackId\",a);const c=r;if(!(r instanceof AudioBuffer))try{r=await async function(e,t){let i=null;if(\"string\"==typeof e){const t=sk.get(e);if(t)return Qy.debug(\"use cached audio resource: \",e),t;try{i=(await my((()=>EI.get(e,{responseType:\"arraybuffer\"})),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new rv(nv.FETCH_AUDIO_FILE_FAILED,e.toString())}}else{const t=new Gh(((t,i)=>{const n=new FileReader;n.onload=e=>{e.target?t(e.target.result):i(new rv(nv.READ_LOCAL_AUDIO_FILE_ERROR))},n.onerror=()=>{i(new rv(nv.READ_LOCAL_AUDIO_FILE_ERROR))},n.readAsArrayBuffer(e)}));i=await t}const n=await function(e){const t=DP();return new Gh(((i,n)=>{t.decodeAudioData(e,(e=>{i(e)}),(e=>{n(new rv(nv.DECODE_AUDIO_FILE_FAILED,e.toString()))}))}))}(i);return\"string\"==typeof e&&t&&sk.set(e,n),n}(r,i)}catch(e){return s.onError(e),e.throw(Qy)}const d=new ok(r),l=new nk(c,d,n?XD(n):{},a);return Qy.info(\"create buffer source audio track success, trackId:\",a),s.onSuccess(l.getTrackId()),l},setAppType:function(e){if(Qy.debug(\"setAppType: \".concat(e)),!(Number.isInteger(e)&&e>=0))throw Qy.debug(\"Invalid appType\"),new Sb(nv.INVALID_PARAMS,\"invalid app type\",e);Ny(\"APP_TYPE\",Math.floor(e))},setLogLevel:function(e){Qy.setLogLevel(e)},enableLogUpload:function(){Dy(\"USE_NEW_LOG\")?Ny(\"UPLOAD_LOG\",!0):Qy.enableLogUpload()},disableLogUpload:function(){Dy(\"USE_NEW_LOG\")?Ny(\"UPLOAD_LOG\",!1):Qy.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new AV},checkAudioTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof tk||e instanceof aM)){const e=new Sb(nv.INVALID_TRACK,\"the parameter is not a audio track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof tk?e.getTrackLabel():\"remote_track\",r=e.getVolumeLevel();let o=r,s=r;const a=Date.now();return new Gh((r=>{const c=setInterval((()=>{const d=e.getVolumeLevel();o=d>o?d:o,s=d<s?d:s;const l=o-s>1e-4,u=Date.now()-a;if(l||u>t){clearInterval(c);const t=l,s={duration:u,deviceLabel:n,maxVolumeLevel:o,result:t};Qy.info(\"[track-\".concat(e.getTrackId(),\"] check audio track active completed. \").concat(JSON.stringify(s))),i.onSuccess(s),r(t)}}),200)}))},checkVideoTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=sA.reportApiInvoke(null,{tag:Iv.TRACER,name:Cv.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof Hk||e instanceof sM)){const e=new Sb(nv.INVALID_TRACK,\"the parameter is not a video track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const n=e instanceof Hk?e.getTrackLabel():\"remote_track\",r=e.getMediaStreamTrack(!0),o=document.createElement(\"video\");o.style.width=\"1px\",o.style.height=\"1px\",o.setAttribute(\"muted\",\"\"),o.muted=!0,o.setAttribute(\"playsinline\",\"\"),o.controls=!1,(PI()||NI())&&(o.style.opacity=\"0.01\",o.style.position=\"fixed\",o.style.left=\"0\",o.style.top=\"0\",document.body.appendChild(o)),o.srcObject=new MediaStream([r]),o.play();const s=document.createElement(\"canvas\");s.width=160,s.height=120;let a=0,c=0;try{const e=Date.now();a=await function(e,t,i,n){let r,o=0,s=null;return new Gh(((a,c)=>{function d(){o>n&&r&&(r(),a(o));const t=i.getContext(\"2d\");if(!t){const e=new Sb(nv.UNEXPECTED_ERROR,\"can not get canvas 2d context.\");return Qy.error(e.toString()),void c(e)}t.drawImage(e,0,0,160,120);const d=t.getImageData(0,0,i.width,i.height),l=Math.floor(d.data.length/3);if(s){for(let e=0;e<l;e+=3)if(d.data[e]!==s[e])return o+=1,void(s=d.data);s=d.data}else s=d.data}setTimeout((()=>{r&&(r(),a(o))}),t),r=kP((()=>{d()}),30)}))}(o,t,s,4),c=Date.now()-e}catch(e){throw i.onError(e),e}bF===CI.SAFARI&&(o.pause(),o.remove()),o.srcObject=null;const d=a>4,l={duration:c,changedPicNum:a,deviceLabel:n,result:d};return Qy.info(\"[track-\".concat(e.getTrackId(),\"] check video track active completed. \").concat(JSON.stringify(l))),i.onSuccess(l),d},setArea:lU,audioElementPlayCenter:eL,resumeAudioContext:function(){eL.autoResumeAfterInterruption(!0)},processExternalMediaAEC:function(e){yj.processExternalMediaAEC(e)},registerExtensions:function(e){const t=Dy(\"PLUGIN_INFO\")||[];e.forEach((e=>{\"name\"in e&&!Dn(t).call(t,e.name)&&t.push(e.name);const i=e;i.__registered__=!0,i.logger.hookLog=Qy.extLog,i.reporter.hookApiInvoke=sA.extApiInvoke,i.parameters&&Object.keys(i.parameters).forEach((e=>{i.parameters[e]=Dy(e)}))})),ZK(\"PLUGIN_INFO\",t)},ChannelMediaRelayError:kb,ChannelMediaRelayEvent:Pb,ChannelMediaRelayState:Lb,RemoteStreamFallbackType:nP,RemoteStreamType:iP,ConnectionDisconnectedReason:Av,AudienceLatencyLevelType:yv,AREAS:Fb,preload:async function(e,t,i,n){return jF(e,t,i,n)}});Object.defineProperties($K,{onAudioAutoplayFailed:{get:()=>XP.onAudioAutoplayFailed,set:e=>{XP.onAudioAutoplayFailed=e}},onAutoplayFailed:{get:()=>XP.onAutoplayFailed,set:e=>{XP.onAutoplayFailed=e}},_onSecurityPolicyViolation:{value:void 0,writable:!0},_cspEventHandlerPointer:{value:void 0,writable:!0},onSecurityPolicyViolation:{get:()=>$K._onSecurityPolicyViolation,set(e){$K._onSecurityPolicyViolation=e,Oj(e)}},__CLIENT_LIST__:{get:()=>Dy(\"SHOW_GLOBAL_CLIENT_LIST\")?lA:[]}}),zP.on(fP.CAMERA_DEVICE_CHANGED,(e=>{Qy.info(\"camera device changed\",JSON.stringify(e)),$K.onCameraChanged&&$K.onCameraChanged(e),$K.safeEmit(iw.CAMERA_CHANGED,e)})),zP.on(fP.RECORDING_DEVICE_CHANGED,(e=>{Qy.info(\"microphone device changed\",JSON.stringify(e)),$K.onMicrophoneChanged&&$K.onMicrophoneChanged(e),$K.safeEmit(iw.MICROPHONE_CHANGED,e)})),zP.on(fP.PLAYOUT_DEVICE_CHANGED,(e=>{Qy.debug(\"playout device changed\",JSON.stringify(e)),$K.onPlaybackDeviceChanged&&$K.onPlaybackDeviceChanged(e),$K.safeEmit(iw.PLAYBACK_DEVICE_CHANGED,e)})),eL.onAutoplayFailed=()=>{Qy.info(\"detect audio element autoplay failed\"),XP.onAudioAutoplayFailed&&XP.onAudioAutoplayFailed()},NP.on(\"autoplay-failed\",(()=>{Qy.info(\"detect webaudio autoplay failed\"),XP.onAudioAutoplayFailed&&XP.onAudioAutoplayFailed(),$K.safeEmit(iw.AUTOPLAY_FAILED)})),NP.on(VD.STATE_CHANGE,((e,t)=>{Qy.info(\"audio context state changed: \".concat(t,\" => \").concat(e)),$K.onAudioContextStateChanged&&$K.onAudioContextStateChanged(e,t),$K.safeEmit(iw.AUDIO_CONTEXT_STATE_CHANGED,e,t)})),Vv.on(Lv.NETWORK_STATE_CHANGE,((e,t)=>{Qy.info(\"[network-indicator] network state changed, \".concat(t,\" => \").concat(e))})),window&&(window.__ARTC__=$K);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.esm.mjs\n");

/***/ })

};
;